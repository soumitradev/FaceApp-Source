package com.parrot.arsdk.arcommands;

import com.parrot.arsdk.arsal.ARSALPrint;

public class ARCommandsDecoder {
    protected static final String TAG = "ARCommandsDecoder";
    private ARCommandARDrone3AccessoryStateConnectedAccessoriesListener _ARCommandARDrone3AccessoryStateConnectedAccessoriesListener;
    private ARCommandARDrone3AnimationsFlipListener _ARCommandARDrone3AnimationsFlipListener;
    private ARCommandARDrone3AntiflickeringElectricFrequencyListener _ARCommandARDrone3AntiflickeringElectricFrequencyListener;
    private ARCommandARDrone3AntiflickeringSetModeListener _ARCommandARDrone3AntiflickeringSetModeListener;
    /* renamed from: _ARCommandARDrone3AntiflickeringStateElectricFrequencyChangedListener */
    private C1474x9d9d43a8 f890x2ae18487;
    private ARCommandARDrone3AntiflickeringStateModeChangedListener _ARCommandARDrone3AntiflickeringStateModeChangedListener;
    private ARCommandARDrone3CameraOrientationListener _ARCommandARDrone3CameraOrientationListener;
    private ARCommandARDrone3CameraOrientationV2Listener _ARCommandARDrone3CameraOrientationV2Listener;
    private ARCommandARDrone3CameraStateDefaultCameraOrientationListener _ARCommandARDrone3CameraStateDefaultCameraOrientationListener;
    private ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener _ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener;
    private ARCommandARDrone3CameraStateOrientationListener _ARCommandARDrone3CameraStateOrientationListener;
    private ARCommandARDrone3CameraStateOrientationV2Listener _ARCommandARDrone3CameraStateOrientationV2Listener;
    private ARCommandARDrone3CameraStateVelocityRangeListener _ARCommandARDrone3CameraStateVelocityRangeListener;
    private ARCommandARDrone3CameraVelocityListener _ARCommandARDrone3CameraVelocityListener;
    private ARCommandARDrone3GPSSettingsHomeTypeListener _ARCommandARDrone3GPSSettingsHomeTypeListener;
    private ARCommandARDrone3GPSSettingsResetHomeListener _ARCommandARDrone3GPSSettingsResetHomeListener;
    private ARCommandARDrone3GPSSettingsReturnHomeDelayListener _ARCommandARDrone3GPSSettingsReturnHomeDelayListener;
    private ARCommandARDrone3GPSSettingsSendControllerGPSListener _ARCommandARDrone3GPSSettingsSendControllerGPSListener;
    private ARCommandARDrone3GPSSettingsSetHomeListener _ARCommandARDrone3GPSSettingsSetHomeListener;
    private ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener _ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener;
    private ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener _ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener;
    private ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener _ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener;
    private ARCommandARDrone3GPSSettingsStateHomeChangedListener _ARCommandARDrone3GPSSettingsStateHomeChangedListener;
    private ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener _ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener;
    private ARCommandARDrone3GPSSettingsStateResetHomeChangedListener _ARCommandARDrone3GPSSettingsStateResetHomeChangedListener;
    private ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener _ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener;
    private ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener _ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener;
    private ARCommandARDrone3GPSStateHomeTypeChosenChangedListener _ARCommandARDrone3GPSStateHomeTypeChosenChangedListener;
    private ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener _ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener;
    private ARCommandARDrone3MediaRecordEventPictureEventChangedListener _ARCommandARDrone3MediaRecordEventPictureEventChangedListener;
    private ARCommandARDrone3MediaRecordEventVideoEventChangedListener _ARCommandARDrone3MediaRecordEventVideoEventChangedListener;
    private ARCommandARDrone3MediaRecordPictureListener _ARCommandARDrone3MediaRecordPictureListener;
    private ARCommandARDrone3MediaRecordPictureV2Listener _ARCommandARDrone3MediaRecordPictureV2Listener;
    private ARCommandARDrone3MediaRecordStatePictureStateChangedListener _ARCommandARDrone3MediaRecordStatePictureStateChangedListener;
    private ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener _ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener;
    private ARCommandARDrone3MediaRecordStateVideoResolutionStateListener _ARCommandARDrone3MediaRecordStateVideoResolutionStateListener;
    private ARCommandARDrone3MediaRecordStateVideoStateChangedListener _ARCommandARDrone3MediaRecordStateVideoStateChangedListener;
    private ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener _ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener;
    private ARCommandARDrone3MediaRecordVideoListener _ARCommandARDrone3MediaRecordVideoListener;
    private ARCommandARDrone3MediaRecordVideoV2Listener _ARCommandARDrone3MediaRecordVideoV2Listener;
    private ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener _ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener;
    /* renamed from: _ARCommandARDrone3MediaStreamingStateVideoStreamModeChangedListener */
    private C1475x98fc87d7 f891x25c97476;
    private ARCommandARDrone3MediaStreamingVideoEnableListener _ARCommandARDrone3MediaStreamingVideoEnableListener;
    private ARCommandARDrone3MediaStreamingVideoStreamModeListener _ARCommandARDrone3MediaStreamingVideoStreamModeListener;
    /* renamed from: _ARCommandARDrone3NetworkSettingsStateWifiSecurityChangedListener */
    private ARCommandARDrone3NetworkSettingsStateWifiSecurityChangedListener f892xcf58be8c;
    private ARCommandARDrone3NetworkSettingsStateWifiSecurityListener _ARCommandARDrone3NetworkSettingsStateWifiSecurityListener;
    /* renamed from: _ARCommandARDrone3NetworkSettingsStateWifiSelectionChangedListener */
    private C1476xab550ef7 f893x12f89278;
    private ARCommandARDrone3NetworkSettingsWifiSecurityListener _ARCommandARDrone3NetworkSettingsWifiSecurityListener;
    private ARCommandARDrone3NetworkSettingsWifiSelectionListener _ARCommandARDrone3NetworkSettingsWifiSelectionListener;
    private ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener _ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener;
    private ARCommandARDrone3NetworkStateAllWifiScanChangedListener _ARCommandARDrone3NetworkStateAllWifiScanChangedListener;
    private ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener _ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener;
    private ARCommandARDrone3NetworkStateWifiScanListChangedListener _ARCommandARDrone3NetworkStateWifiScanListChangedListener;
    private ARCommandARDrone3NetworkWifiAuthChannelListener _ARCommandARDrone3NetworkWifiAuthChannelListener;
    private ARCommandARDrone3NetworkWifiScanListener _ARCommandARDrone3NetworkWifiScanListener;
    private ARCommandARDrone3PROStateFeaturesListener _ARCommandARDrone3PROStateFeaturesListener;
    /* renamed from: _ARCommandARDrone3PictureSettingsAutoWhiteBalanceSelectionListener */
    private C1477xe12d7523 f894x48d0f8a4;
    private ARCommandARDrone3PictureSettingsExpositionSelectionListener _ARCommandARDrone3PictureSettingsExpositionSelectionListener;
    private ARCommandARDrone3PictureSettingsPictureFormatSelectionListener _ARCommandARDrone3PictureSettingsPictureFormatSelectionListener;
    private ARCommandARDrone3PictureSettingsSaturationSelectionListener _ARCommandARDrone3PictureSettingsSaturationSelectionListener;
    /* renamed from: _ARCommandARDrone3PictureSettingsStateAutoWhiteBalanceChangedListener */
    private C1478x18639810 f895xa5a7d8ef;
    private ARCommandARDrone3PictureSettingsStateExpositionChangedListener _ARCommandARDrone3PictureSettingsStateExpositionChangedListener;
    /* renamed from: _ARCommandARDrone3PictureSettingsStatePictureFormatChangedListener */
    private C1479x873165c9 f896xeed4e94a;
    private ARCommandARDrone3PictureSettingsStateSaturationChangedListener _ARCommandARDrone3PictureSettingsStateSaturationChangedListener;
    private ARCommandARDrone3PictureSettingsStateTimelapseChangedListener _ARCommandARDrone3PictureSettingsStateTimelapseChangedListener;
    /* renamed from: _ARCommandARDrone3PictureSettingsStateVideoAutorecordChangedListener */
    private C1480x355a5883 f897x422affc4;
    /* renamed from: _ARCommandARDrone3PictureSettingsStateVideoFramerateChangedListener */
    private C1481x949850c0 f898x21653d5f;
    /* renamed from: _ARCommandARDrone3PictureSettingsStateVideoRecordingModeChangedListener */
    private C1482xa66af7f9 f899xf3a27d18;
    /* renamed from: _ARCommandARDrone3PictureSettingsStateVideoResolutionsChangedListener */
    private C1483x24732ac6 f900xb1b76ba5;
    /* renamed from: _ARCommandARDrone3PictureSettingsStateVideoStabilizationModeChangedListener */
    private C1484xec3e9acb f901x19e0786a;
    private ARCommandARDrone3PictureSettingsTimelapseSelectionListener _ARCommandARDrone3PictureSettingsTimelapseSelectionListener;
    /* renamed from: _ARCommandARDrone3PictureSettingsVideoAutorecordSelectionListener */
    private ARCommandARDrone3PictureSettingsVideoAutorecordSelectionListener f902x1e99a95f;
    private ARCommandARDrone3PictureSettingsVideoFramerateListener _ARCommandARDrone3PictureSettingsVideoFramerateListener;
    private ARCommandARDrone3PictureSettingsVideoRecordingModeListener _ARCommandARDrone3PictureSettingsVideoRecordingModeListener;
    private ARCommandARDrone3PictureSettingsVideoResolutionsListener _ARCommandARDrone3PictureSettingsVideoResolutionsListener;
    private ARCommandARDrone3PictureSettingsVideoStabilizationModeListener _ARCommandARDrone3PictureSettingsVideoStabilizationModeListener;
    private ARCommandARDrone3PilotingAutoTakeOffModeListener _ARCommandARDrone3PilotingAutoTakeOffModeListener;
    private ARCommandARDrone3PilotingCancelMoveToListener _ARCommandARDrone3PilotingCancelMoveToListener;
    private ARCommandARDrone3PilotingCircleListener _ARCommandARDrone3PilotingCircleListener;
    private ARCommandARDrone3PilotingEmergencyListener _ARCommandARDrone3PilotingEmergencyListener;
    private ARCommandARDrone3PilotingEventMoveByEndListener _ARCommandARDrone3PilotingEventMoveByEndListener;
    private ARCommandARDrone3PilotingFlatTrimListener _ARCommandARDrone3PilotingFlatTrimListener;
    private ARCommandARDrone3PilotingLandingListener _ARCommandARDrone3PilotingLandingListener;
    private ARCommandARDrone3PilotingMoveByListener _ARCommandARDrone3PilotingMoveByListener;
    private ARCommandARDrone3PilotingMoveToListener _ARCommandARDrone3PilotingMoveToListener;
    private ARCommandARDrone3PilotingNavigateHomeListener _ARCommandARDrone3PilotingNavigateHomeListener;
    private ARCommandARDrone3PilotingPCMDListener _ARCommandARDrone3PilotingPCMDListener;
    private ARCommandARDrone3PilotingSettingsAbsolutControlListener _ARCommandARDrone3PilotingSettingsAbsolutControlListener;
    private ARCommandARDrone3PilotingSettingsBankedTurnListener _ARCommandARDrone3PilotingSettingsBankedTurnListener;
    private ARCommandARDrone3PilotingSettingsCirclingAltitudeListener _ARCommandARDrone3PilotingSettingsCirclingAltitudeListener;
    private ARCommandARDrone3PilotingSettingsCirclingDirectionListener _ARCommandARDrone3PilotingSettingsCirclingDirectionListener;
    private ARCommandARDrone3PilotingSettingsCirclingRadiusListener _ARCommandARDrone3PilotingSettingsCirclingRadiusListener;
    private ARCommandARDrone3PilotingSettingsMaxAltitudeListener _ARCommandARDrone3PilotingSettingsMaxAltitudeListener;
    private ARCommandARDrone3PilotingSettingsMaxDistanceListener _ARCommandARDrone3PilotingSettingsMaxDistanceListener;
    private ARCommandARDrone3PilotingSettingsMaxTiltListener _ARCommandARDrone3PilotingSettingsMaxTiltListener;
    private ARCommandARDrone3PilotingSettingsMinAltitudeListener _ARCommandARDrone3PilotingSettingsMinAltitudeListener;
    private ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener _ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener;
    private ARCommandARDrone3PilotingSettingsPitchModeListener _ARCommandARDrone3PilotingSettingsPitchModeListener;
    /* renamed from: _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalAccelerationListener */
    private C1485x96145e6d f903x6cec176e;
    /* renamed from: _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalSpeedListener */
    private C1486x8848ab22 f904x3074a141;
    /* renamed from: _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxRotationSpeedListener */
    private C1487x744120c8 f905xc0e212a7;
    /* renamed from: _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalAccelerationListener */
    private C1488x54e10dff f906xca51340;
    /* renamed from: _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalSpeedListener */
    private C1489x275e7bd0 f907x73ff6daf;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateAbsolutControlChangedListener */
    private C1490x7118b1b f908x13e2325c;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalAccelerationListener */
    private C1491x39e0755e f909xb9adf21f;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalSpeedListener */
    private C1492x8d351151 f910xda3bfbb0;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxRotationSpeedListener */
    private C1493xf81f46b7 f911xa04b3cd6;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalAccelerationListener */
    private C1494xe1f82d30 f912xb8cfe631;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalSpeedListener */
    private C1495xab3ca1bf f913x536897de;
    private ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener _ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateCirclingAltitudeChangedListener */
    private C1496x3bfc681b f914x5740431c;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateCirclingDirectionChangedListener */
    private C1497x42c9b114 f915x90013633;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateCirclingRadiusChangedListener */
    private C1498x181f096b f916x24efb0ac;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateMaxAltitudeChangedListener */
    private ARCommandARDrone3PilotingSettingsStateMaxAltitudeChangedListener f917x6ee3f9bf;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateMaxDistanceChangedListener */
    private ARCommandARDrone3PilotingSettingsStateMaxDistanceChangedListener f918xacf6880c;
    private ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener _ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateMinAltitudeChangedListener */
    private ARCommandARDrone3PilotingSettingsStateMinAltitudeChangedListener f919xb856cd11;
    /* renamed from: _ARCommandARDrone3PilotingSettingsStateNoFlyOverMaxDistanceChangedListener */
    private C1499x946e4737 f920x645ab9b8;
    private ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener _ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener;
    private ARCommandARDrone3PilotingStateAirSpeedChangedListener _ARCommandARDrone3PilotingStateAirSpeedChangedListener;
    private ARCommandARDrone3PilotingStateAlertStateChangedListener _ARCommandARDrone3PilotingStateAlertStateChangedListener;
    private ARCommandARDrone3PilotingStateAltitudeChangedListener _ARCommandARDrone3PilotingStateAltitudeChangedListener;
    private ARCommandARDrone3PilotingStateAttitudeChangedListener _ARCommandARDrone3PilotingStateAttitudeChangedListener;
    private ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener _ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener;
    private ARCommandARDrone3PilotingStateFlatTrimChangedListener _ARCommandARDrone3PilotingStateFlatTrimChangedListener;
    private ARCommandARDrone3PilotingStateFlyingStateChangedListener _ARCommandARDrone3PilotingStateFlyingStateChangedListener;
    private ARCommandARDrone3PilotingStateGpsLocationChangedListener _ARCommandARDrone3PilotingStateGpsLocationChangedListener;
    private ARCommandARDrone3PilotingStateLandingStateChangedListener _ARCommandARDrone3PilotingStateLandingStateChangedListener;
    private ARCommandARDrone3PilotingStateMoveToChangedListener _ARCommandARDrone3PilotingStateMoveToChangedListener;
    private ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener _ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener;
    private ARCommandARDrone3PilotingStatePositionChangedListener _ARCommandARDrone3PilotingStatePositionChangedListener;
    private ARCommandARDrone3PilotingStateSpeedChangedListener _ARCommandARDrone3PilotingStateSpeedChangedListener;
    private ARCommandARDrone3PilotingTakeOffListener _ARCommandARDrone3PilotingTakeOffListener;
    private ARCommandARDrone3PilotingUserTakeOffListener _ARCommandARDrone3PilotingUserTakeOffListener;
    private ARCommandARDrone3SettingsStateCPUIDListener _ARCommandARDrone3SettingsStateCPUIDListener;
    /* renamed from: _ARCommandARDrone3SettingsStateMotorErrorLastErrorChangedListener */
    private ARCommandARDrone3SettingsStateMotorErrorLastErrorChangedListener f921x328a8890;
    private ARCommandARDrone3SettingsStateMotorErrorStateChangedListener _ARCommandARDrone3SettingsStateMotorErrorStateChangedListener;
    private ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener _ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener;
    /* renamed from: _ARCommandARDrone3SettingsStateMotorSoftwareVersionChangedListener */
    private C1500x12e11684 f922x7a849a05;
    private ARCommandARDrone3SettingsStateP7IDListener _ARCommandARDrone3SettingsStateP7IDListener;
    private ARCommandARDrone3SettingsStateProductGPSVersionChangedListener _ARCommandARDrone3SettingsStateProductGPSVersionChangedListener;
    /* renamed from: _ARCommandARDrone3SettingsStateProductMotorVersionListChangedListener */
    private C1501xad2d1ee0 f923x3a715fbf;
    private ARCommandARDrone3SpeedSettingsHullProtectionListener _ARCommandARDrone3SpeedSettingsHullProtectionListener;
    private ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener _ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener;
    private ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener _ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener;
    private ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener _ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener;
    private ARCommandARDrone3SpeedSettingsOutdoorListener _ARCommandARDrone3SpeedSettingsOutdoorListener;
    /* renamed from: _ARCommandARDrone3SpeedSettingsStateHullProtectionChangedListener */
    private ARCommandARDrone3SpeedSettingsStateHullProtectionChangedListener f924x3a21b0b4;
    /* renamed from: _ARCommandARDrone3SpeedSettingsStateMaxPitchRollRotationSpeedChangedListener */
    private C1502xfe33eec5 f925x84cdc506;
    /* renamed from: _ARCommandARDrone3SpeedSettingsStateMaxRotationSpeedChangedListener */
    private C1503x22493756 f926xaf1623f5;
    /* renamed from: _ARCommandARDrone3SpeedSettingsStateMaxVerticalSpeedChangedListener */
    private C1504x6e88e34e f927xfb55cfed;
    private ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener _ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener;
    /* renamed from: _ARCommandCommonARLibsVersionsStateControllerLibARCommandsVersionListener */
    private C1505x3f0c4e1c f928x1c77077b;
    /* renamed from: _ARCommandCommonARLibsVersionsStateDeviceLibARCommandsVersionListener */
    private C1506xf72e36d6 f929x847277b5;
    /* renamed from: _ARCommandCommonARLibsVersionsStateSkyControllerLibARCommandsVersionListener */
    private C1507xc10aff9 f930x92aa863a;
    private ARCommandCommonAccessoryConfigListener _ARCommandCommonAccessoryConfigListener;
    private ARCommandCommonAccessoryStateAccessoryConfigChangedListener _ARCommandCommonAccessoryStateAccessoryConfigChangedListener;
    /* renamed from: _ARCommandCommonAccessoryStateAccessoryConfigModificationEnabledListener */
    private C1508xb1fc6bc9 f931xbb58a8a;
    /* renamed from: _ARCommandCommonAccessoryStateSupportedAccessoriesListChangedListener */
    private C1509x59840904 f932xe6c849e3;
    private ARCommandCommonAnimationsStartAnimationListener _ARCommandCommonAnimationsStartAnimationListener;
    private ARCommandCommonAnimationsStateListListener _ARCommandCommonAnimationsStateListListener;
    private ARCommandCommonAnimationsStopAllAnimationsListener _ARCommandCommonAnimationsStopAllAnimationsListener;
    private ARCommandCommonAnimationsStopAnimationListener _ARCommandCommonAnimationsStopAnimationListener;
    private ARCommandCommonAudioControllerReadyForStreamingListener _ARCommandCommonAudioControllerReadyForStreamingListener;
    private ARCommandCommonAudioStateAudioStreamingRunningListener _ARCommandCommonAudioStateAudioStreamingRunningListener;
    private ARCommandCommonCalibrationMagnetoCalibrationListener _ARCommandCommonCalibrationMagnetoCalibrationListener;
    private ARCommandCommonCalibrationPitotCalibrationListener _ARCommandCommonCalibrationPitotCalibrationListener;
    /* renamed from: _ARCommandCommonCalibrationStateMagnetoCalibrationAxisToCalibrateChangedListener */
    private C1510xb983cb0e f933x16d698cf;
    /* renamed from: _ARCommandCommonCalibrationStateMagnetoCalibrationRequiredStateListener */
    private C1511x234108b5 f934x70788dd4;
    /* renamed from: _ARCommandCommonCalibrationStateMagnetoCalibrationStartedChangedListener */
    private C1512x3fee74f8 f935x99a793b9;
    /* renamed from: _ARCommandCommonCalibrationStateMagnetoCalibrationStateChangedListener */
    private C1513x8aea728 f936x23f28229;
    /* renamed from: _ARCommandCommonCalibrationStatePitotCalibrationStateChangedListener */
    private C1514x29acc4d f937xf6b738e;
    private ARCommandCommonCameraSettingsStateCameraSettingsChangedListener _ARCommandCommonCameraSettingsStateCameraSettingsChangedListener;
    private ARCommandCommonChargerSetMaxChargeRateListener _ARCommandCommonChargerSetMaxChargeRateListener;
    private ARCommandCommonChargerStateChargingInfoListener _ARCommandCommonChargerStateChargingInfoListener;
    private ARCommandCommonChargerStateCurrentChargeStateChangedListener _ARCommandCommonChargerStateCurrentChargeStateChangedListener;
    private ARCommandCommonChargerStateLastChargeRateChangedListener _ARCommandCommonChargerStateLastChargeRateChangedListener;
    private ARCommandCommonChargerStateMaxChargeRateChangedListener _ARCommandCommonChargerStateMaxChargeRateChangedListener;
    private ARCommandCommonCommonAllStatesListener _ARCommandCommonCommonAllStatesListener;
    private ARCommandCommonCommonCurrentDateListener _ARCommandCommonCommonCurrentDateListener;
    private ARCommandCommonCommonCurrentTimeListener _ARCommandCommonCommonCurrentTimeListener;
    private ARCommandCommonCommonRebootListener _ARCommandCommonCommonRebootListener;
    private ARCommandCommonCommonStateAllStatesChangedListener _ARCommandCommonCommonStateAllStatesChangedListener;
    private ARCommandCommonCommonStateBatteryStateChangedListener _ARCommandCommonCommonStateBatteryStateChangedListener;
    private ARCommandCommonCommonStateCountryListKnownListener _ARCommandCommonCommonStateCountryListKnownListener;
    private ARCommandCommonCommonStateCurrentDateChangedListener _ARCommandCommonCommonStateCurrentDateChangedListener;
    private ARCommandCommonCommonStateCurrentTimeChangedListener _ARCommandCommonCommonStateCurrentTimeChangedListener;
    /* renamed from: _ARCommandCommonCommonStateDeprecatedMassStorageContentChangedListener */
    private C1515xf597a1a2 f938x10db7ca3;
    /* renamed from: _ARCommandCommonCommonStateMassStorageContentForCurrentRunListener */
    private C1516x4ff7285c f939xb79aabdd;
    private ARCommandCommonCommonStateMassStorageContentListener _ARCommandCommonCommonStateMassStorageContentListener;
    /* renamed from: _ARCommandCommonCommonStateMassStorageInfoRemainingListChangedListener */
    private C1517x4e74f88 f940x202b2a89;
    /* renamed from: _ARCommandCommonCommonStateMassStorageInfoStateListChangedListener */
    private C1518x23468f0d f941x8aea128e;
    private ARCommandCommonCommonStateMassStorageStateListChangedListener _ARCommandCommonCommonStateMassStorageStateListChangedListener;
    private ARCommandCommonCommonStateProductModelListener _ARCommandCommonCommonStateProductModelListener;
    private ARCommandCommonCommonStateSensorsStatesListChangedListener _ARCommandCommonCommonStateSensorsStatesListChangedListener;
    private ARCommandCommonCommonStateVideoRecordingTimestampListener _ARCommandCommonCommonStateVideoRecordingTimestampListener;
    private ARCommandCommonCommonStateWifiSignalChangedListener _ARCommandCommonCommonStateWifiSignalChangedListener;
    private ARCommandCommonControllerIsPilotingListener _ARCommandCommonControllerIsPilotingListener;
    private ARCommandCommonFactoryResetListener _ARCommandCommonFactoryResetListener;
    private ARCommandCommonFlightPlanEventSpeedBridleEventListener _ARCommandCommonFlightPlanEventSpeedBridleEventListener;
    private ARCommandCommonFlightPlanEventStartingErrorEventListener _ARCommandCommonFlightPlanEventStartingErrorEventListener;
    private ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener _ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener;
    /* renamed from: _ARCommandCommonFlightPlanSettingsStateReturnHomeOnDisconnectChangedListener */
    private C1519x41d0378e f942xc86a0dcf;
    private ARCommandCommonFlightPlanStateAvailabilityStateChangedListener _ARCommandCommonFlightPlanStateAvailabilityStateChangedListener;
    private ARCommandCommonFlightPlanStateComponentStateListChangedListener _ARCommandCommonFlightPlanStateComponentStateListChangedListener;
    private ARCommandCommonFlightPlanStateLockStateChangedListener _ARCommandCommonFlightPlanStateLockStateChangedListener;
    private ARCommandCommonGPSControllerPositionForRunListener _ARCommandCommonGPSControllerPositionForRunListener;
    private ARCommandCommonHeadlightsIntensityListener _ARCommandCommonHeadlightsIntensityListener;
    private ARCommandCommonHeadlightsStateIntensityChangedListener _ARCommandCommonHeadlightsStateIntensityChangedListener;
    private ARCommandCommonMavlinkPauseListener _ARCommandCommonMavlinkPauseListener;
    private ARCommandCommonMavlinkStartListener _ARCommandCommonMavlinkStartListener;
    /* renamed from: _ARCommandCommonMavlinkStateMavlinkFilePlayingStateChangedListener */
    private C1520xc5448c27 f943x2ce80fa8;
    private ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener _ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener;
    private ARCommandCommonMavlinkStateMissionItemExecutedListener _ARCommandCommonMavlinkStateMissionItemExecutedListener;
    private ARCommandCommonMavlinkStopListener _ARCommandCommonMavlinkStopListener;
    private ARCommandCommonNetworkDisconnectListener _ARCommandCommonNetworkDisconnectListener;
    private ARCommandCommonNetworkEventDisconnectionListener _ARCommandCommonNetworkEventDisconnectionListener;
    private ARCommandCommonOverHeatStateOverHeatChangedListener _ARCommandCommonOverHeatStateOverHeatChangedListener;
    private ARCommandCommonOverHeatStateOverHeatRegulationChangedListener _ARCommandCommonOverHeatStateOverHeatRegulationChangedListener;
    private ARCommandCommonOverHeatSwitchOffListener _ARCommandCommonOverHeatSwitchOffListener;
    private ARCommandCommonOverHeatVentilateListener _ARCommandCommonOverHeatVentilateListener;
    private ARCommandCommonRunStateRunIdChangedListener _ARCommandCommonRunStateRunIdChangedListener;
    private ARCommandCommonSettingsAllSettingsListener _ARCommandCommonSettingsAllSettingsListener;
    private ARCommandCommonSettingsAutoCountryListener _ARCommandCommonSettingsAutoCountryListener;
    private ARCommandCommonSettingsCountryListener _ARCommandCommonSettingsCountryListener;
    private ARCommandCommonSettingsProductNameListener _ARCommandCommonSettingsProductNameListener;
    private ARCommandCommonSettingsResetListener _ARCommandCommonSettingsResetListener;
    private ARCommandCommonSettingsStateAllSettingsChangedListener _ARCommandCommonSettingsStateAllSettingsChangedListener;
    private ARCommandCommonSettingsStateAutoCountryChangedListener _ARCommandCommonSettingsStateAutoCountryChangedListener;
    private ARCommandCommonSettingsStateCountryChangedListener _ARCommandCommonSettingsStateCountryChangedListener;
    private ARCommandCommonSettingsStateProductNameChangedListener _ARCommandCommonSettingsStateProductNameChangedListener;
    private ARCommandCommonSettingsStateProductSerialHighChangedListener _ARCommandCommonSettingsStateProductSerialHighChangedListener;
    private ARCommandCommonSettingsStateProductSerialLowChangedListener _ARCommandCommonSettingsStateProductSerialLowChangedListener;
    private ARCommandCommonSettingsStateProductVersionChangedListener _ARCommandCommonSettingsStateProductVersionChangedListener;
    private ARCommandCommonSettingsStateResetChangedListener _ARCommandCommonSettingsStateResetChangedListener;
    private ARCommandCommonWifiSettingsOutdoorSettingListener _ARCommandCommonWifiSettingsOutdoorSettingListener;
    private ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener _ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener;
    private ARCommandControllerInfoBarometerListener _ARCommandControllerInfoBarometerListener;
    private ARCommandControllerInfoGpsListener _ARCommandControllerInfoGpsListener;
    private ARCommandDebugGetAllSettingsListener _ARCommandDebugGetAllSettingsListener;
    private ARCommandDebugSetSettingListener _ARCommandDebugSetSettingListener;
    private ARCommandDebugSettingsInfoListener _ARCommandDebugSettingsInfoListener;
    private ARCommandDebugSettingsListListener _ARCommandDebugSettingsListListener;
    private ARCommandDroneManagerAuthenticationFailedListener _ARCommandDroneManagerAuthenticationFailedListener;
    private ARCommandDroneManagerConnectListener _ARCommandDroneManagerConnectListener;
    private ARCommandDroneManagerConnectionRefusedListener _ARCommandDroneManagerConnectionRefusedListener;
    private ARCommandDroneManagerConnectionStateListener _ARCommandDroneManagerConnectionStateListener;
    private ARCommandDroneManagerDiscoverDronesListener _ARCommandDroneManagerDiscoverDronesListener;
    private ARCommandDroneManagerDroneListItemListener _ARCommandDroneManagerDroneListItemListener;
    private ARCommandDroneManagerForgetListener _ARCommandDroneManagerForgetListener;
    private ARCommandDroneManagerKnownDroneItemListener _ARCommandDroneManagerKnownDroneItemListener;
    private ARCommandFollowMeBoomerangAnimConfigListener _ARCommandFollowMeBoomerangAnimConfigListener;
    private ARCommandFollowMeCandleAnimConfigListener _ARCommandFollowMeCandleAnimConfigListener;
    private ARCommandFollowMeConfigureGeographicListener _ARCommandFollowMeConfigureGeographicListener;
    private ARCommandFollowMeConfigureRelativeListener _ARCommandFollowMeConfigureRelativeListener;
    private ARCommandFollowMeDollySlideAnimConfigListener _ARCommandFollowMeDollySlideAnimConfigListener;
    private ARCommandFollowMeGeographicConfigListener _ARCommandFollowMeGeographicConfigListener;
    private ARCommandFollowMeHelicoidAnimConfigListener _ARCommandFollowMeHelicoidAnimConfigListener;
    private ARCommandFollowMeModeInfoListener _ARCommandFollowMeModeInfoListener;
    private ARCommandFollowMeRelativeConfigListener _ARCommandFollowMeRelativeConfigListener;
    private ARCommandFollowMeStartBoomerangAnimListener _ARCommandFollowMeStartBoomerangAnimListener;
    private ARCommandFollowMeStartCandleAnimListener _ARCommandFollowMeStartCandleAnimListener;
    private ARCommandFollowMeStartDollySlideAnimListener _ARCommandFollowMeStartDollySlideAnimListener;
    private ARCommandFollowMeStartHelicoidAnimListener _ARCommandFollowMeStartHelicoidAnimListener;
    private ARCommandFollowMeStartListener _ARCommandFollowMeStartListener;
    private ARCommandFollowMeStartSwingAnimListener _ARCommandFollowMeStartSwingAnimListener;
    private ARCommandFollowMeStateListener _ARCommandFollowMeStateListener;
    private ARCommandFollowMeStopAnimationListener _ARCommandFollowMeStopAnimationListener;
    private ARCommandFollowMeStopListener _ARCommandFollowMeStopListener;
    private ARCommandFollowMeSwingAnimConfigListener _ARCommandFollowMeSwingAnimConfigListener;
    private ARCommandFollowMeTargetFramingPositionChangedListener _ARCommandFollowMeTargetFramingPositionChangedListener;
    private ARCommandFollowMeTargetFramingPositionListener _ARCommandFollowMeTargetFramingPositionListener;
    private ARCommandFollowMeTargetImageDetectionListener _ARCommandFollowMeTargetImageDetectionListener;
    private ARCommandFollowMeTargetImageDetectionStateListener _ARCommandFollowMeTargetImageDetectionStateListener;
    private ARCommandFollowMeTargetTrajectoryListener _ARCommandFollowMeTargetTrajectoryListener;
    private ARCommandGenericDefaultListener _ARCommandGenericDefaultListener;
    private ARCommandGenericDroneSettingsChangedListener _ARCommandGenericDroneSettingsChangedListener;
    private ARCommandGenericSetDroneSettingsListener _ARCommandGenericSetDroneSettingsListener;
    private ARCommandJumpingSumoAnimationsJumpCancelListener _ARCommandJumpingSumoAnimationsJumpCancelListener;
    private ARCommandJumpingSumoAnimationsJumpListener _ARCommandJumpingSumoAnimationsJumpListener;
    private ARCommandJumpingSumoAnimationsJumpLoadListener _ARCommandJumpingSumoAnimationsJumpLoadListener;
    private ARCommandJumpingSumoAnimationsJumpStopListener _ARCommandJumpingSumoAnimationsJumpStopListener;
    private ARCommandJumpingSumoAnimationsSimpleAnimationListener _ARCommandJumpingSumoAnimationsSimpleAnimationListener;
    private ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener _ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener;
    /* renamed from: _ARCommandJumpingSumoAnimationsStateJumpMotorProblemChangedListener */
    private C1521x7c2fcfec f944x8fcbc8b;
    private ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener _ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener;
    private ARCommandJumpingSumoAudioSettingsMasterVolumeListener _ARCommandJumpingSumoAudioSettingsMasterVolumeListener;
    /* renamed from: _ARCommandJumpingSumoAudioSettingsStateMasterVolumeChangedListener */
    private C1522x83aa06f6 f945xeb4d8a77;
    private ARCommandJumpingSumoAudioSettingsStateThemeChangedListener _ARCommandJumpingSumoAudioSettingsStateThemeChangedListener;
    private ARCommandJumpingSumoAudioSettingsThemeListener _ARCommandJumpingSumoAudioSettingsThemeListener;
    private ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener _ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener;
    private ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener _ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener;
    private ARCommandJumpingSumoMediaRecordPictureListener _ARCommandJumpingSumoMediaRecordPictureListener;
    private ARCommandJumpingSumoMediaRecordPictureV2Listener _ARCommandJumpingSumoMediaRecordPictureV2Listener;
    private ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener _ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener;
    /* renamed from: _ARCommandJumpingSumoMediaRecordStatePictureStateChangedV2Listener */
    private C1523x390b8c97 f946xa0af1018;
    private ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener _ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener;
    private ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener _ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener;
    private ARCommandJumpingSumoMediaRecordVideoListener _ARCommandJumpingSumoMediaRecordVideoListener;
    private ARCommandJumpingSumoMediaRecordVideoV2Listener _ARCommandJumpingSumoMediaRecordVideoV2Listener;
    /* renamed from: _ARCommandJumpingSumoMediaStreamingStateVideoEnableChangedListener */
    private C1524x1975b2bf f947x81193640;
    private ARCommandJumpingSumoMediaStreamingVideoEnableListener _ARCommandJumpingSumoMediaStreamingVideoEnableListener;
    /* renamed from: _ARCommandJumpingSumoNetworkSettingsStateWifiSelectionChangedListener */
    private C1525x56533bcf f948xe3977cae;
    private ARCommandJumpingSumoNetworkSettingsWifiSelectionListener _ARCommandJumpingSumoNetworkSettingsWifiSelectionListener;
    /* renamed from: _ARCommandJumpingSumoNetworkStateAllWifiAuthChannelChangedListener */
    private C1526x7a81b642 f949xe22539c3;
    private ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener _ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener;
    private ARCommandJumpingSumoNetworkStateLinkQualityChangedListener _ARCommandJumpingSumoNetworkStateLinkQualityChangedListener;
    /* renamed from: _ARCommandJumpingSumoNetworkStateWifiAuthChannelListChangedListener */
    private C1527x71e11fa5 f950xfeae0c44;
    private ARCommandJumpingSumoNetworkStateWifiScanListChangedListener _ARCommandJumpingSumoNetworkStateWifiScanListChangedListener;
    private ARCommandJumpingSumoNetworkWifiAuthChannelListener _ARCommandJumpingSumoNetworkWifiAuthChannelListener;
    private ARCommandJumpingSumoNetworkWifiScanListener _ARCommandJumpingSumoNetworkWifiScanListener;
    private ARCommandJumpingSumoPilotingAddCapOffsetListener _ARCommandJumpingSumoPilotingAddCapOffsetListener;
    private ARCommandJumpingSumoPilotingPCMDListener _ARCommandJumpingSumoPilotingPCMDListener;
    private ARCommandJumpingSumoPilotingPostureListener _ARCommandJumpingSumoPilotingPostureListener;
    private ARCommandJumpingSumoPilotingStateAlertStateChangedListener _ARCommandJumpingSumoPilotingStateAlertStateChangedListener;
    private ARCommandJumpingSumoPilotingStatePostureChangedListener _ARCommandJumpingSumoPilotingStatePostureChangedListener;
    private ARCommandJumpingSumoPilotingStateSpeedChangedListener _ARCommandJumpingSumoPilotingStateSpeedChangedListener;
    private ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener _ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener;
    private ARCommandJumpingSumoRoadPlanPlayScriptListener _ARCommandJumpingSumoRoadPlanPlayScriptListener;
    private ARCommandJumpingSumoRoadPlanScriptDeleteListener _ARCommandJumpingSumoRoadPlanScriptDeleteListener;
    private ARCommandJumpingSumoRoadPlanScriptUploadedListener _ARCommandJumpingSumoRoadPlanScriptUploadedListener;
    /* renamed from: _ARCommandJumpingSumoRoadPlanStateAllScriptsMetadataChangedListener */
    private C1528xdd328168 f951x69ff6e07;
    private ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener _ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener;
    private ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener _ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener;
    /* renamed from: _ARCommandJumpingSumoRoadPlanStateScriptMetadataListChangedListener */
    private C1529x3c747cc6 f952xc9416965;
    private ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener _ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener;
    /* renamed from: _ARCommandJumpingSumoSettingsStateProductGPSVersionChangedListener */
    private C1530x8955fd3b f953xf0f980bc;
    private ARCommandJumpingSumoSpeedSettingsOutdoorListener _ARCommandJumpingSumoSpeedSettingsOutdoorListener;
    private ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener _ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener;
    private ARCommandJumpingSumoVideoSettingsAutorecordListener _ARCommandJumpingSumoVideoSettingsAutorecordListener;
    private ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener _ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener;
    private ARCommandMapperActiveProductListener _ARCommandMapperActiveProductListener;
    private ARCommandMapperApplicationAxisEventListener _ARCommandMapperApplicationAxisEventListener;
    private ARCommandMapperApplicationButtonEventListener _ARCommandMapperApplicationButtonEventListener;
    private ARCommandMapperAxisMappingItemListener _ARCommandMapperAxisMappingItemListener;
    private ARCommandMapperButtonMappingItemListener _ARCommandMapperButtonMappingItemListener;
    private ARCommandMapperExpoMapItemListener _ARCommandMapperExpoMapItemListener;
    private ARCommandMapperGrabAxisEventListener _ARCommandMapperGrabAxisEventListener;
    private ARCommandMapperGrabButtonEventListener _ARCommandMapperGrabButtonEventListener;
    private ARCommandMapperGrabListener _ARCommandMapperGrabListener;
    private ARCommandMapperGrabStateListener _ARCommandMapperGrabStateListener;
    private ARCommandMapperInvertedMapItemListener _ARCommandMapperInvertedMapItemListener;
    private ARCommandMapperMapAxisActionListener _ARCommandMapperMapAxisActionListener;
    private ARCommandMapperMapButtonActionListener _ARCommandMapperMapButtonActionListener;
    private ARCommandMapperMiniAxisMappingItemListener _ARCommandMapperMiniAxisMappingItemListener;
    private ARCommandMapperMiniButtonMappingItemListener _ARCommandMapperMiniButtonMappingItemListener;
    private ARCommandMapperMiniMapAxisActionListener _ARCommandMapperMiniMapAxisActionListener;
    private ARCommandMapperMiniMapButtonActionListener _ARCommandMapperMiniMapButtonActionListener;
    private ARCommandMapperMiniResetMappingListener _ARCommandMapperMiniResetMappingListener;
    private ARCommandMapperResetMappingListener _ARCommandMapperResetMappingListener;
    private ARCommandMapperSetExpoListener _ARCommandMapperSetExpoListener;
    private ARCommandMapperSetInvertedListener _ARCommandMapperSetInvertedListener;
    private ARCommandMiniDroneAnimationsCapListener _ARCommandMiniDroneAnimationsCapListener;
    private ARCommandMiniDroneAnimationsFlipListener _ARCommandMiniDroneAnimationsFlipListener;
    private ARCommandMiniDroneConfigurationControllerNameListener _ARCommandMiniDroneConfigurationControllerNameListener;
    private ARCommandMiniDroneConfigurationControllerTypeListener _ARCommandMiniDroneConfigurationControllerTypeListener;
    private ARCommandMiniDroneFloodControlStateFloodControlChangedListener _ARCommandMiniDroneFloodControlStateFloodControlChangedListener;
    private ARCommandMiniDroneGPSControllerLatitudeForRunListener _ARCommandMiniDroneGPSControllerLatitudeForRunListener;
    private ARCommandMiniDroneGPSControllerLongitudeForRunListener _ARCommandMiniDroneGPSControllerLongitudeForRunListener;
    private ARCommandMiniDroneMediaRecordEventPictureEventChangedListener _ARCommandMiniDroneMediaRecordEventPictureEventChangedListener;
    private ARCommandMiniDroneMediaRecordPictureListener _ARCommandMiniDroneMediaRecordPictureListener;
    private ARCommandMiniDroneMediaRecordPictureV2Listener _ARCommandMiniDroneMediaRecordPictureV2Listener;
    private ARCommandMiniDroneMediaRecordStatePictureStateChangedListener _ARCommandMiniDroneMediaRecordStatePictureStateChangedListener;
    private ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener _ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener;
    private ARCommandMiniDroneNavigationDataStateDronePositionListener _ARCommandMiniDroneNavigationDataStateDronePositionListener;
    private ARCommandMiniDronePilotingAutoTakeOffModeListener _ARCommandMiniDronePilotingAutoTakeOffModeListener;
    private ARCommandMiniDronePilotingEmergencyListener _ARCommandMiniDronePilotingEmergencyListener;
    private ARCommandMiniDronePilotingFlatTrimListener _ARCommandMiniDronePilotingFlatTrimListener;
    private ARCommandMiniDronePilotingFlyingModeListener _ARCommandMiniDronePilotingFlyingModeListener;
    private ARCommandMiniDronePilotingLandingListener _ARCommandMiniDronePilotingLandingListener;
    private ARCommandMiniDronePilotingPCMDListener _ARCommandMiniDronePilotingPCMDListener;
    private ARCommandMiniDronePilotingPlaneGearBoxListener _ARCommandMiniDronePilotingPlaneGearBoxListener;
    private ARCommandMiniDronePilotingSettingsBankedTurnListener _ARCommandMiniDronePilotingSettingsBankedTurnListener;
    private ARCommandMiniDronePilotingSettingsMaxAltitudeListener _ARCommandMiniDronePilotingSettingsMaxAltitudeListener;
    private ARCommandMiniDronePilotingSettingsMaxTiltListener _ARCommandMiniDronePilotingSettingsMaxTiltListener;
    /* renamed from: _ARCommandMiniDronePilotingSettingsStateBankedTurnChangedListener */
    private ARCommandMiniDronePilotingSettingsStateBankedTurnChangedListener f954x647c6232;
    /* renamed from: _ARCommandMiniDronePilotingSettingsStateMaxAltitudeChangedListener */
    private C1531xc19b3e7f f955x293ec200;
    private ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener _ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener;
    private ARCommandMiniDronePilotingStateAlertStateChangedListener _ARCommandMiniDronePilotingStateAlertStateChangedListener;
    private ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener _ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener;
    private ARCommandMiniDronePilotingStateFlatTrimChangedListener _ARCommandMiniDronePilotingStateFlatTrimChangedListener;
    private ARCommandMiniDronePilotingStateFlyingModeChangedListener _ARCommandMiniDronePilotingStateFlyingModeChangedListener;
    private ARCommandMiniDronePilotingStateFlyingStateChangedListener _ARCommandMiniDronePilotingStateFlyingStateChangedListener;
    private ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener _ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener;
    private ARCommandMiniDronePilotingTakeOffListener _ARCommandMiniDronePilotingTakeOffListener;
    private ARCommandMiniDroneRemoteControllerSetPairedRemoteListener _ARCommandMiniDroneRemoteControllerSetPairedRemoteListener;
    private ARCommandMiniDroneSettingsCutOutModeListener _ARCommandMiniDroneSettingsCutOutModeListener;
    private ARCommandMiniDroneSettingsStateCutOutModeChangedListener _ARCommandMiniDroneSettingsStateCutOutModeChangedListener;
    /* renamed from: _ARCommandMiniDroneSettingsStateProductInertialVersionChangedListener */
    private C1532x9a315f0a f956x27759fe9;
    /* renamed from: _ARCommandMiniDroneSettingsStateProductMotorsVersionChangedListener */
    private C1533xd43a29b6 f957x61071655;
    private ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener _ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener;
    /* renamed from: _ARCommandMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedListener */
    private ARCommandMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedListener f958x58cb30fe;
    private ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener _ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener;
    private ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener _ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener;
    /* renamed from: _ARCommandMiniDroneSpeedSettingsStateMaxHorizontalSpeedChangedListener */
    private C1534x2b3248db f959x467623dc;
    /* renamed from: _ARCommandMiniDroneSpeedSettingsStateMaxPlaneModeRotationSpeedChangedListener */
    private C1535x30d7d388 f960x7d78c567;
    /* renamed from: _ARCommandMiniDroneSpeedSettingsStateMaxRotationSpeedChangedListener */
    private C1536x310f38b5 f961x3ddfdff6;
    /* renamed from: _ARCommandMiniDroneSpeedSettingsStateMaxVerticalSpeedChangedListener */
    private C1537x7d4ee4ad f962x8a1f8bee;
    private ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener _ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener;
    private ARCommandMiniDroneSpeedSettingsWheelsListener _ARCommandMiniDroneSpeedSettingsWheelsListener;
    private ARCommandMiniDroneUsbAccessoryClawControlListener _ARCommandMiniDroneUsbAccessoryClawControlListener;
    private ARCommandMiniDroneUsbAccessoryGunControlListener _ARCommandMiniDroneUsbAccessoryGunControlListener;
    private ARCommandMiniDroneUsbAccessoryLightControlListener _ARCommandMiniDroneUsbAccessoryLightControlListener;
    private ARCommandMiniDroneUsbAccessoryStateClawStateListener _ARCommandMiniDroneUsbAccessoryStateClawStateListener;
    private ARCommandMiniDroneUsbAccessoryStateGunStateListener _ARCommandMiniDroneUsbAccessoryStateGunStateListener;
    private ARCommandMiniDroneUsbAccessoryStateLightStateListener _ARCommandMiniDroneUsbAccessoryStateLightStateListener;
    private ARCommandPowerupMediaRecordEventPictureEventChangedListener _ARCommandPowerupMediaRecordEventPictureEventChangedListener;
    private ARCommandPowerupMediaRecordEventVideoEventChangedListener _ARCommandPowerupMediaRecordEventVideoEventChangedListener;
    private ARCommandPowerupMediaRecordPictureV2Listener _ARCommandPowerupMediaRecordPictureV2Listener;
    private ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener _ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener;
    private ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener _ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener;
    private ARCommandPowerupMediaRecordVideoV2Listener _ARCommandPowerupMediaRecordVideoV2Listener;
    private ARCommandPowerupMediaStreamingStateVideoEnableChangedListener _ARCommandPowerupMediaStreamingStateVideoEnableChangedListener;
    private ARCommandPowerupMediaStreamingVideoEnableListener _ARCommandPowerupMediaStreamingVideoEnableListener;
    /* renamed from: _ARCommandPowerupNetworkSettingsStateWifiSelectionChangedListener */
    private ARCommandPowerupNetworkSettingsStateWifiSelectionChangedListener f963xf9d35ef6;
    private ARCommandPowerupNetworkSettingsWifiSelectionListener _ARCommandPowerupNetworkSettingsWifiSelectionListener;
    private ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener _ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener;
    private ARCommandPowerupNetworkStateAllWifiScanChangedListener _ARCommandPowerupNetworkStateAllWifiScanChangedListener;
    private ARCommandPowerupNetworkStateLinkQualityChangedListener _ARCommandPowerupNetworkStateLinkQualityChangedListener;
    private ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener _ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener;
    private ARCommandPowerupNetworkStateWifiScanListChangedListener _ARCommandPowerupNetworkStateWifiScanListChangedListener;
    private ARCommandPowerupNetworkWifiAuthChannelListener _ARCommandPowerupNetworkWifiAuthChannelListener;
    private ARCommandPowerupNetworkWifiScanListener _ARCommandPowerupNetworkWifiScanListener;
    private ARCommandPowerupPilotingMotorModeListener _ARCommandPowerupPilotingMotorModeListener;
    private ARCommandPowerupPilotingPCMDListener _ARCommandPowerupPilotingPCMDListener;
    private ARCommandPowerupPilotingSettingsSetListener _ARCommandPowerupPilotingSettingsSetListener;
    private ARCommandPowerupPilotingSettingsStateSettingChangedListener _ARCommandPowerupPilotingSettingsStateSettingChangedListener;
    private ARCommandPowerupPilotingStateAlertStateChangedListener _ARCommandPowerupPilotingStateAlertStateChangedListener;
    private ARCommandPowerupPilotingStateAltitudeChangedListener _ARCommandPowerupPilotingStateAltitudeChangedListener;
    private ARCommandPowerupPilotingStateAttitudeChangedListener _ARCommandPowerupPilotingStateAttitudeChangedListener;
    private ARCommandPowerupPilotingStateFlyingStateChangedListener _ARCommandPowerupPilotingStateFlyingStateChangedListener;
    private ARCommandPowerupPilotingStateMotorModeChangedListener _ARCommandPowerupPilotingStateMotorModeChangedListener;
    private ARCommandPowerupPilotingUserTakeOffListener _ARCommandPowerupPilotingUserTakeOffListener;
    private ARCommandPowerupSoundsBuzzListener _ARCommandPowerupSoundsBuzzListener;
    private ARCommandPowerupSoundsStateBuzzChangedListener _ARCommandPowerupSoundsStateBuzzChangedListener;
    private ARCommandPowerupVideoSettingsAutorecordListener _ARCommandPowerupVideoSettingsAutorecordListener;
    private ARCommandPowerupVideoSettingsStateAutorecordChangedListener _ARCommandPowerupVideoSettingsStateAutorecordChangedListener;
    private ARCommandPowerupVideoSettingsStateVideoModeChangedListener _ARCommandPowerupVideoSettingsStateVideoModeChangedListener;
    private ARCommandPowerupVideoSettingsVideoModeListener _ARCommandPowerupVideoSettingsVideoModeListener;
    private ARCommandRcAbortCalibrationListener _ARCommandRcAbortCalibrationListener;
    private ARCommandRcCalibrationStateListener _ARCommandRcCalibrationStateListener;
    private ARCommandRcChannelActionItemListener _ARCommandRcChannelActionItemListener;
    private ARCommandRcChannelValueListener _ARCommandRcChannelValueListener;
    private ARCommandRcChannelsMonitorStateListener _ARCommandRcChannelsMonitorStateListener;
    private ARCommandRcEnableReceiverListener _ARCommandRcEnableReceiverListener;
    private ARCommandRcInvertChannelListener _ARCommandRcInvertChannelListener;
    private ARCommandRcMonitorChannelsListener _ARCommandRcMonitorChannelsListener;
    private ARCommandRcReceiverStateListener _ARCommandRcReceiverStateListener;
    private ARCommandRcResetCalibrationListener _ARCommandRcResetCalibrationListener;
    private ARCommandRcStartCalibrationListener _ARCommandRcStartCalibrationListener;
    /* renamed from: _ARCommandSkyControllerAccessPointSettingsAccessPointChannelListener */
    private C1538x36391db7 f964x4309c4f8;
    /* renamed from: _ARCommandSkyControllerAccessPointSettingsAccessPointSSIDListener */
    private ARCommandSkyControllerAccessPointSettingsAccessPointSSIDListener f965x856b6eae;
    /* renamed from: _ARCommandSkyControllerAccessPointSettingsStateAccessPointChannelChangedListener */
    private C1539x44aea02c f966xa2016ded;
    /* renamed from: _ARCommandSkyControllerAccessPointSettingsStateAccessPointSSIDChangedListener */
    private C1540x2e93bbe6 f967x7b34adc5;
    /* renamed from: _ARCommandSkyControllerAccessPointSettingsStateWifiSecurityChangedListener */
    private C1541x6148140e f968x3134868f;
    /* renamed from: _ARCommandSkyControllerAccessPointSettingsStateWifiSelectionChangedListener */
    private C1542xbef3ed36 f969xec95cad5;
    private ARCommandSkyControllerAccessPointSettingsWifiSecurityListener _ARCommandSkyControllerAccessPointSettingsWifiSecurityListener;
    private ARCommandSkyControllerAccessPointSettingsWifiSelectionListener _ARCommandSkyControllerAccessPointSettingsWifiSelectionListener;
    private ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener _ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener;
    private ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener _ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener;
    private ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener _ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener;
    private ARCommandSkyControllerAxisFiltersSetAxisFilterListener _ARCommandSkyControllerAxisFiltersSetAxisFilterListener;
    /* renamed from: _ARCommandSkyControllerAxisFiltersStateAllCurrentFiltersSentListener */
    private C1543xed4a78d5 f970xfa1b2016;
    /* renamed from: _ARCommandSkyControllerAxisFiltersStateAllPresetFiltersSentListener */
    private C1544x5c379ac1 f971xe9048760;
    /* renamed from: _ARCommandSkyControllerAxisFiltersStateCurrentAxisFiltersListener */
    private ARCommandSkyControllerAxisFiltersStateCurrentAxisFiltersListener f972x86097b4e;
    private ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener _ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener;
    private ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener _ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener;
    /* renamed from: _ARCommandSkyControllerAxisMappingsGetAvailableAxisMappingsListener */
    private C1545x69a7bf76 f973xf674ac15;
    /* renamed from: _ARCommandSkyControllerAxisMappingsGetCurrentAxisMappingsListener */
    private ARCommandSkyControllerAxisMappingsGetCurrentAxisMappingsListener f974xf5b22b45;
    private ARCommandSkyControllerAxisMappingsSetAxisMappingListener _ARCommandSkyControllerAxisMappingsSetAxisMappingListener;
    /* renamed from: _ARCommandSkyControllerAxisMappingsStateAllAvailableAxisMappingsSentListener */
    private C1546x3bf38882 f975xc28d5ec3;
    /* renamed from: _ARCommandSkyControllerAxisMappingsStateAllCurrentAxisMappingsSentListener */
    private C1547xe83cb8f2 f976xb8292b73;
    /* renamed from: _ARCommandSkyControllerAxisMappingsStateAvailableAxisMappingsListener */
    private C1548x4b0b69db f977xd84faaba;
    /* renamed from: _ARCommandSkyControllerAxisMappingsStateCurrentAxisMappingsListener */
    private C1549x1249a28b f978x9f168f2a;
    private ARCommandSkyControllerButtonEventsSettingsListener _ARCommandSkyControllerButtonEventsSettingsListener;
    /* renamed from: _ARCommandSkyControllerButtonMappingsDefaultButtonMappingListener */
    private ARCommandSkyControllerButtonMappingsDefaultButtonMappingListener f979xa6f0f948;
    /* renamed from: _ARCommandSkyControllerButtonMappingsGetAvailableButtonMappingsListener */
    private C1550xcbb82398 f980x18efa8b7;
    /* renamed from: _ARCommandSkyControllerButtonMappingsGetCurrentButtonMappingsListener */
    private C1551x39e41b48 f981xc7285c27;
    private ARCommandSkyControllerButtonMappingsSetButtonMappingListener _ARCommandSkyControllerButtonMappingsSetButtonMappingListener;
    /* renamed from: _ARCommandSkyControllerButtonMappingsStateAllAvailableButtonsMappingsSentListener */
    private C1552xc8de5113 f982x15e53b72;
    /* renamed from: _ARCommandSkyControllerButtonMappingsStateAllCurrentButtonMappingsSentListener */
    private C1553xa2ae6b52 f983xea2bb553;
    /* renamed from: _ARCommandSkyControllerButtonMappingsStateAvailableButtonMappingsListener */
    private C1554x28cba87d f984x63661dc;
    /* renamed from: _ARCommandSkyControllerButtonMappingsStateCurrentButtonMappingsListener */
    private C1555xd36d956d f985x20a51a8c;
    /* renamed from: _ARCommandSkyControllerCalibrationEnableMagnetoCalibrationQualityUpdatesListener */
    private C1556x940125ee f986xf153f3af;
    /* renamed from: _ARCommandSkyControllerCalibrationStateMagnetoCalibrationQualityUpdatesStateListener */
    private C1557xe41c6f0b f987x9be0744c;
    /* renamed from: _ARCommandSkyControllerCalibrationStateMagnetoCalibrationStateListener */
    private C1558x351361d6 f988x50573cd7;
    private ARCommandSkyControllerCameraResetOrientationListener _ARCommandSkyControllerCameraResetOrientationListener;
    private ARCommandSkyControllerCoPilotingSetPilotingSourceListener _ARCommandSkyControllerCoPilotingSetPilotingSourceListener;
    private ARCommandSkyControllerCoPilotingStatePilotingSourceListener _ARCommandSkyControllerCoPilotingStatePilotingSourceListener;
    private ARCommandSkyControllerCommonAllStatesListener _ARCommandSkyControllerCommonAllStatesListener;
    private ARCommandSkyControllerCommonEventStateShutdownListener _ARCommandSkyControllerCommonEventStateShutdownListener;
    private ARCommandSkyControllerCommonStateAllStatesChangedListener _ARCommandSkyControllerCommonStateAllStatesChangedListener;
    private ARCommandSkyControllerDeviceConnectToDeviceListener _ARCommandSkyControllerDeviceConnectToDeviceListener;
    private ARCommandSkyControllerDeviceRequestCurrentDeviceListener _ARCommandSkyControllerDeviceRequestCurrentDeviceListener;
    private ARCommandSkyControllerDeviceRequestDeviceListListener _ARCommandSkyControllerDeviceRequestDeviceListListener;
    private ARCommandSkyControllerDeviceStateConnexionChangedListener _ARCommandSkyControllerDeviceStateConnexionChangedListener;
    private ARCommandSkyControllerDeviceStateDeviceListListener _ARCommandSkyControllerDeviceStateDeviceListListener;
    private ARCommandSkyControllerFactoryResetListener _ARCommandSkyControllerFactoryResetListener;
    private ARCommandSkyControllerGamepadInfosGetGamepadControlsListener _ARCommandSkyControllerGamepadInfosGetGamepadControlsListener;
    /* renamed from: _ARCommandSkyControllerGamepadInfosStateAllGamepadControlsSentListener */
    private C1559x329e5e2c f989x4de2392d;
    private ARCommandSkyControllerGamepadInfosStateGamepadControlListener _ARCommandSkyControllerGamepadInfosStateGamepadControlListener;
    private ARCommandSkyControllerSettingsAllSettingsListener _ARCommandSkyControllerSettingsAllSettingsListener;
    private ARCommandSkyControllerSettingsResetListener _ARCommandSkyControllerSettingsResetListener;
    private ARCommandSkyControllerSettingsStateAllSettingsChangedListener _ARCommandSkyControllerSettingsStateAllSettingsChangedListener;
    private ARCommandSkyControllerSettingsStateProductSerialChangedListener _ARCommandSkyControllerSettingsStateProductSerialChangedListener;
    /* renamed from: _ARCommandSkyControllerSettingsStateProductVariantChangedListener */
    private ARCommandSkyControllerSettingsStateProductVariantChangedListener f990xe3e2fd26;
    /* renamed from: _ARCommandSkyControllerSettingsStateProductVersionChangedListener */
    private ARCommandSkyControllerSettingsStateProductVersionChangedListener f991x4abc6073;
    private ARCommandSkyControllerSettingsStateResetChangedListener _ARCommandSkyControllerSettingsStateResetChangedListener;
    private ARCommandSkyControllerSkyControllerStateAttitudeChangedListener _ARCommandSkyControllerSkyControllerStateAttitudeChangedListener;
    private ARCommandSkyControllerSkyControllerStateBatteryChangedListener _ARCommandSkyControllerSkyControllerStateBatteryChangedListener;
    private ARCommandSkyControllerSkyControllerStateBatteryStateListener _ARCommandSkyControllerSkyControllerStateBatteryStateListener;
    private ARCommandSkyControllerSkyControllerStateGpsFixChangedListener _ARCommandSkyControllerSkyControllerStateGpsFixChangedListener;
    /* renamed from: _ARCommandSkyControllerSkyControllerStateGpsPositionChangedListener */
    private C1560x246030ac f992xb12d1d4b;
    private ARCommandSkyControllerWifiConnectToWifiListener _ARCommandSkyControllerWifiConnectToWifiListener;
    private ARCommandSkyControllerWifiForgetWifiListener _ARCommandSkyControllerWifiForgetWifiListener;
    private ARCommandSkyControllerWifiRequestCurrentWifiListener _ARCommandSkyControllerWifiRequestCurrentWifiListener;
    private ARCommandSkyControllerWifiRequestWifiListListener _ARCommandSkyControllerWifiRequestWifiListListener;
    /* renamed from: _ARCommandSkyControllerWifiStateAllWifiAuthChannelChangedListener */
    private ARCommandSkyControllerWifiStateAllWifiAuthChannelChangedListener f993x76fcda49;
    private ARCommandSkyControllerWifiStateConnexionChangedListener _ARCommandSkyControllerWifiStateConnexionChangedListener;
    /* renamed from: _ARCommandSkyControllerWifiStateWifiAuthChannelListChangedListener */
    private C1561x9d26f8fd f994x4ca7c7e;
    /* renamed from: _ARCommandSkyControllerWifiStateWifiAuthChannelListChangedV2Listener */
    private C1562x9e7d4159 f995xab4de89a;
    private ARCommandSkyControllerWifiStateWifiCountryChangedListener _ARCommandSkyControllerWifiStateWifiCountryChangedListener;
    private ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener _ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener;
    private ARCommandSkyControllerWifiStateWifiListListener _ARCommandSkyControllerWifiStateWifiListListener;
    private ARCommandSkyControllerWifiStateWifiSignalChangedListener _ARCommandSkyControllerWifiStateWifiSignalChangedListener;
    private ARCommandSkyControllerWifiWifiAuthChannelListener _ARCommandSkyControllerWifiWifiAuthChannelListener;
    private ARCommandWifiApChannelChangedListener _ARCommandWifiApChannelChangedListener;
    private ARCommandWifiAuthorizedChannelListener _ARCommandWifiAuthorizedChannelListener;
    private ARCommandWifiCountryChangedListener _ARCommandWifiCountryChangedListener;
    private ARCommandWifiEnvironmentChangedListener _ARCommandWifiEnvironmentChangedListener;
    private ARCommandWifiRssiChangedListener _ARCommandWifiRssiChangedListener;
    private ARCommandWifiScanListener _ARCommandWifiScanListener;
    private ARCommandWifiScannedItemListener _ARCommandWifiScannedItemListener;
    private ARCommandWifiSecurityChangedListener _ARCommandWifiSecurityChangedListener;
    private ARCommandWifiSetApChannelListener _ARCommandWifiSetApChannelListener;
    private ARCommandWifiSetCountryListener _ARCommandWifiSetCountryListener;
    private ARCommandWifiSetEnvironmentListener _ARCommandWifiSetEnvironmentListener;
    private ARCommandWifiSetSecurityListener _ARCommandWifiSetSecurityListener;
    private ARCommandWifiSupportedCountriesListener _ARCommandWifiSupportedCountriesListener;
    private ARCommandWifiUpdateAuthorizedChannelsListener _ARCommandWifiUpdateAuthorizedChannelsListener;
    private Throwable constructorCallStack;
    protected long pointer = nativeNewDecoder();
    protected boolean valid = false;

    private native int nativeDecode(long j, long j2, int i);

    private native void nativeDeleteDecoder(long j);

    private native long nativeNewDecoder();

    private static native void nativeStaticInit();

    static {
        nativeStaticInit();
    }

    public ARCommandsDecoder() {
        if (this.pointer != 0) {
            this.valid = true;
        }
        this.constructorCallStack = new Throwable();
    }

    protected void finalize() throws Throwable {
        try {
            if (this.valid) {
                String str = TAG;
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append(this);
                stringBuilder.append(": Finalize error -> dispose () was not called !");
                ARSALPrint.m539w(str, stringBuilder.toString(), this.constructorCallStack);
                dispose();
            }
            super.finalize();
        } catch (Throwable th) {
            super.finalize();
        }
    }

    public boolean isValid() {
        return this.valid;
    }

    public void dispose() {
        if (this.valid) {
            nativeDeleteDecoder(this.pointer);
        }
        this.valid = false;
        this.pointer = 0;
    }

    public ARCOMMANDS_DECODER_ERROR_ENUM decode(ARCommand command) {
        ARCOMMANDS_DECODER_ERROR_ENUM err = ARCOMMANDS_DECODER_ERROR_ENUM.ARCOMMANDS_DECODER_ERROR;
        if (this.valid && command != null) {
            if (command.isValid()) {
                int errInt = nativeDecode(this.pointer, command.getData(), command.getDataSize());
                if (ARCOMMANDS_DECODER_ERROR_ENUM.getFromValue(errInt) != null) {
                    err = ARCOMMANDS_DECODER_ERROR_ENUM.getFromValue(errInt);
                }
                return err;
            }
        }
        return err;
    }

    public ARCOMMANDS_DECODER_ERROR_ENUM decode(long data, int size) {
        ARCOMMANDS_DECODER_ERROR_ENUM err = ARCOMMANDS_DECODER_ERROR_ENUM.ARCOMMANDS_DECODER_ERROR;
        if (!this.valid) {
            return err;
        }
        int errInt = nativeDecode(this.pointer, data, size);
        if (ARCOMMANDS_DECODER_ERROR_ENUM.getFromValue(errInt) != null) {
            err = ARCOMMANDS_DECODER_ERROR_ENUM.getFromValue(errInt);
        }
        return err;
    }

    public void setGenericDefaultListener(ARCommandGenericDefaultListener _ARCommandGenericDefaultListener_PARAM) {
        this._ARCommandGenericDefaultListener = _ARCommandGenericDefaultListener_PARAM;
    }

    public void setGenericSetDroneSettingsListener(ARCommandGenericSetDroneSettingsListener _ARCommandGenericSetDroneSettingsListener_PARAM) {
        this._ARCommandGenericSetDroneSettingsListener = _ARCommandGenericSetDroneSettingsListener_PARAM;
    }

    public void setGenericDroneSettingsChangedListener(ARCommandGenericDroneSettingsChangedListener _ARCommandGenericDroneSettingsChangedListener_PARAM) {
        this._ARCommandGenericDroneSettingsChangedListener = _ARCommandGenericDroneSettingsChangedListener_PARAM;
    }

    public void setARDrone3PilotingFlatTrimListener(ARCommandARDrone3PilotingFlatTrimListener _ARCommandARDrone3PilotingFlatTrimListener_PARAM) {
        this._ARCommandARDrone3PilotingFlatTrimListener = _ARCommandARDrone3PilotingFlatTrimListener_PARAM;
    }

    public void setARDrone3PilotingTakeOffListener(ARCommandARDrone3PilotingTakeOffListener _ARCommandARDrone3PilotingTakeOffListener_PARAM) {
        this._ARCommandARDrone3PilotingTakeOffListener = _ARCommandARDrone3PilotingTakeOffListener_PARAM;
    }

    public void setARDrone3PilotingPCMDListener(ARCommandARDrone3PilotingPCMDListener _ARCommandARDrone3PilotingPCMDListener_PARAM) {
        this._ARCommandARDrone3PilotingPCMDListener = _ARCommandARDrone3PilotingPCMDListener_PARAM;
    }

    public void setARDrone3PilotingLandingListener(ARCommandARDrone3PilotingLandingListener _ARCommandARDrone3PilotingLandingListener_PARAM) {
        this._ARCommandARDrone3PilotingLandingListener = _ARCommandARDrone3PilotingLandingListener_PARAM;
    }

    public void setARDrone3PilotingEmergencyListener(ARCommandARDrone3PilotingEmergencyListener _ARCommandARDrone3PilotingEmergencyListener_PARAM) {
        this._ARCommandARDrone3PilotingEmergencyListener = _ARCommandARDrone3PilotingEmergencyListener_PARAM;
    }

    public void setARDrone3PilotingNavigateHomeListener(ARCommandARDrone3PilotingNavigateHomeListener _ARCommandARDrone3PilotingNavigateHomeListener_PARAM) {
        this._ARCommandARDrone3PilotingNavigateHomeListener = _ARCommandARDrone3PilotingNavigateHomeListener_PARAM;
    }

    public void setARDrone3PilotingAutoTakeOffModeListener(ARCommandARDrone3PilotingAutoTakeOffModeListener _ARCommandARDrone3PilotingAutoTakeOffModeListener_PARAM) {
        this._ARCommandARDrone3PilotingAutoTakeOffModeListener = _ARCommandARDrone3PilotingAutoTakeOffModeListener_PARAM;
    }

    public void setARDrone3PilotingMoveByListener(ARCommandARDrone3PilotingMoveByListener _ARCommandARDrone3PilotingMoveByListener_PARAM) {
        this._ARCommandARDrone3PilotingMoveByListener = _ARCommandARDrone3PilotingMoveByListener_PARAM;
    }

    public void setARDrone3PilotingUserTakeOffListener(ARCommandARDrone3PilotingUserTakeOffListener _ARCommandARDrone3PilotingUserTakeOffListener_PARAM) {
        this._ARCommandARDrone3PilotingUserTakeOffListener = _ARCommandARDrone3PilotingUserTakeOffListener_PARAM;
    }

    public void setARDrone3PilotingCircleListener(ARCommandARDrone3PilotingCircleListener _ARCommandARDrone3PilotingCircleListener_PARAM) {
        this._ARCommandARDrone3PilotingCircleListener = _ARCommandARDrone3PilotingCircleListener_PARAM;
    }

    public void setARDrone3PilotingMoveToListener(ARCommandARDrone3PilotingMoveToListener _ARCommandARDrone3PilotingMoveToListener_PARAM) {
        this._ARCommandARDrone3PilotingMoveToListener = _ARCommandARDrone3PilotingMoveToListener_PARAM;
    }

    public void setARDrone3PilotingCancelMoveToListener(ARCommandARDrone3PilotingCancelMoveToListener _ARCommandARDrone3PilotingCancelMoveToListener_PARAM) {
        this._ARCommandARDrone3PilotingCancelMoveToListener = _ARCommandARDrone3PilotingCancelMoveToListener_PARAM;
    }

    public void setARDrone3AnimationsFlipListener(ARCommandARDrone3AnimationsFlipListener _ARCommandARDrone3AnimationsFlipListener_PARAM) {
        this._ARCommandARDrone3AnimationsFlipListener = _ARCommandARDrone3AnimationsFlipListener_PARAM;
    }

    public void setARDrone3CameraOrientationListener(ARCommandARDrone3CameraOrientationListener _ARCommandARDrone3CameraOrientationListener_PARAM) {
        this._ARCommandARDrone3CameraOrientationListener = _ARCommandARDrone3CameraOrientationListener_PARAM;
    }

    public void setARDrone3CameraOrientationV2Listener(ARCommandARDrone3CameraOrientationV2Listener _ARCommandARDrone3CameraOrientationV2Listener_PARAM) {
        this._ARCommandARDrone3CameraOrientationV2Listener = _ARCommandARDrone3CameraOrientationV2Listener_PARAM;
    }

    public void setARDrone3CameraVelocityListener(ARCommandARDrone3CameraVelocityListener _ARCommandARDrone3CameraVelocityListener_PARAM) {
        this._ARCommandARDrone3CameraVelocityListener = _ARCommandARDrone3CameraVelocityListener_PARAM;
    }

    public void setARDrone3MediaRecordPictureListener(ARCommandARDrone3MediaRecordPictureListener _ARCommandARDrone3MediaRecordPictureListener_PARAM) {
        this._ARCommandARDrone3MediaRecordPictureListener = _ARCommandARDrone3MediaRecordPictureListener_PARAM;
    }

    public void setARDrone3MediaRecordVideoListener(ARCommandARDrone3MediaRecordVideoListener _ARCommandARDrone3MediaRecordVideoListener_PARAM) {
        this._ARCommandARDrone3MediaRecordVideoListener = _ARCommandARDrone3MediaRecordVideoListener_PARAM;
    }

    public void setARDrone3MediaRecordPictureV2Listener(ARCommandARDrone3MediaRecordPictureV2Listener _ARCommandARDrone3MediaRecordPictureV2Listener_PARAM) {
        this._ARCommandARDrone3MediaRecordPictureV2Listener = _ARCommandARDrone3MediaRecordPictureV2Listener_PARAM;
    }

    public void setARDrone3MediaRecordVideoV2Listener(ARCommandARDrone3MediaRecordVideoV2Listener _ARCommandARDrone3MediaRecordVideoV2Listener_PARAM) {
        this._ARCommandARDrone3MediaRecordVideoV2Listener = _ARCommandARDrone3MediaRecordVideoV2Listener_PARAM;
    }

    public void setARDrone3NetworkWifiScanListener(ARCommandARDrone3NetworkWifiScanListener _ARCommandARDrone3NetworkWifiScanListener_PARAM) {
        this._ARCommandARDrone3NetworkWifiScanListener = _ARCommandARDrone3NetworkWifiScanListener_PARAM;
    }

    public void setARDrone3NetworkWifiAuthChannelListener(ARCommandARDrone3NetworkWifiAuthChannelListener _ARCommandARDrone3NetworkWifiAuthChannelListener_PARAM) {
        this._ARCommandARDrone3NetworkWifiAuthChannelListener = _ARCommandARDrone3NetworkWifiAuthChannelListener_PARAM;
    }

    public void setARDrone3PilotingSettingsMaxAltitudeListener(ARCommandARDrone3PilotingSettingsMaxAltitudeListener _ARCommandARDrone3PilotingSettingsMaxAltitudeListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsMaxAltitudeListener = _ARCommandARDrone3PilotingSettingsMaxAltitudeListener_PARAM;
    }

    public void setARDrone3PilotingSettingsMaxTiltListener(ARCommandARDrone3PilotingSettingsMaxTiltListener _ARCommandARDrone3PilotingSettingsMaxTiltListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsMaxTiltListener = _ARCommandARDrone3PilotingSettingsMaxTiltListener_PARAM;
    }

    public void setARDrone3PilotingSettingsAbsolutControlListener(ARCommandARDrone3PilotingSettingsAbsolutControlListener _ARCommandARDrone3PilotingSettingsAbsolutControlListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsAbsolutControlListener = _ARCommandARDrone3PilotingSettingsAbsolutControlListener_PARAM;
    }

    public void setARDrone3PilotingSettingsMaxDistanceListener(ARCommandARDrone3PilotingSettingsMaxDistanceListener _ARCommandARDrone3PilotingSettingsMaxDistanceListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsMaxDistanceListener = _ARCommandARDrone3PilotingSettingsMaxDistanceListener_PARAM;
    }

    public void setARDrone3PilotingSettingsNoFlyOverMaxDistanceListener(ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener _ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener = _ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalSpeedListener */
    public void m62xf0cb099a(C1486x8848ab22 _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalSpeedListener_PARAM) {
        this.f904x3074a141 = _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalSpeedListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalSpeedListener */
    public void m65xaf561848(C1489x275e7bd0 _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalSpeedListener_PARAM) {
        this.f907x73ff6daf = _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalSpeedListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalAccelerationListener */
    public void m61x575948f5(C1485x96145e6d _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalAccelerationListener_PARAM) {
        this.f903x6cec176e = _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalAccelerationListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalAccelerationListener */
    public void m64x21eefa87(C1488x54e10dff _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalAccelerationListener_PARAM) {
        this.f906xca51340 = _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalAccelerationListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsSetAutonomousFlightMaxRotationSpeedListener */
    public void m63xfc38bd40(C1487x744120c8 _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxRotationSpeedListener_PARAM) {
        this.f905xc0e212a7 = _ARCommandARDrone3PilotingSettingsSetAutonomousFlightMaxRotationSpeedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsBankedTurnListener(ARCommandARDrone3PilotingSettingsBankedTurnListener _ARCommandARDrone3PilotingSettingsBankedTurnListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsBankedTurnListener = _ARCommandARDrone3PilotingSettingsBankedTurnListener_PARAM;
    }

    public void setARDrone3PilotingSettingsMinAltitudeListener(ARCommandARDrone3PilotingSettingsMinAltitudeListener _ARCommandARDrone3PilotingSettingsMinAltitudeListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsMinAltitudeListener = _ARCommandARDrone3PilotingSettingsMinAltitudeListener_PARAM;
    }

    public void setARDrone3PilotingSettingsCirclingDirectionListener(ARCommandARDrone3PilotingSettingsCirclingDirectionListener _ARCommandARDrone3PilotingSettingsCirclingDirectionListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsCirclingDirectionListener = _ARCommandARDrone3PilotingSettingsCirclingDirectionListener_PARAM;
    }

    public void setARDrone3PilotingSettingsCirclingRadiusListener(ARCommandARDrone3PilotingSettingsCirclingRadiusListener _ARCommandARDrone3PilotingSettingsCirclingRadiusListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsCirclingRadiusListener = _ARCommandARDrone3PilotingSettingsCirclingRadiusListener_PARAM;
    }

    public void setARDrone3PilotingSettingsCirclingAltitudeListener(ARCommandARDrone3PilotingSettingsCirclingAltitudeListener _ARCommandARDrone3PilotingSettingsCirclingAltitudeListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsCirclingAltitudeListener = _ARCommandARDrone3PilotingSettingsCirclingAltitudeListener_PARAM;
    }

    public void setARDrone3PilotingSettingsPitchModeListener(ARCommandARDrone3PilotingSettingsPitchModeListener _ARCommandARDrone3PilotingSettingsPitchModeListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsPitchModeListener = _ARCommandARDrone3PilotingSettingsPitchModeListener_PARAM;
    }

    public void setARDrone3SpeedSettingsMaxVerticalSpeedListener(ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener _ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener_PARAM) {
        this._ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener = _ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener_PARAM;
    }

    public void setARDrone3SpeedSettingsMaxRotationSpeedListener(ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener _ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener_PARAM) {
        this._ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener = _ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener_PARAM;
    }

    public void setARDrone3SpeedSettingsHullProtectionListener(ARCommandARDrone3SpeedSettingsHullProtectionListener _ARCommandARDrone3SpeedSettingsHullProtectionListener_PARAM) {
        this._ARCommandARDrone3SpeedSettingsHullProtectionListener = _ARCommandARDrone3SpeedSettingsHullProtectionListener_PARAM;
    }

    public void setARDrone3SpeedSettingsOutdoorListener(ARCommandARDrone3SpeedSettingsOutdoorListener _ARCommandARDrone3SpeedSettingsOutdoorListener_PARAM) {
        this._ARCommandARDrone3SpeedSettingsOutdoorListener = _ARCommandARDrone3SpeedSettingsOutdoorListener_PARAM;
    }

    public void setARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener(ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener _ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener_PARAM) {
        this._ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener = _ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener_PARAM;
    }

    public void setARDrone3NetworkSettingsWifiSelectionListener(ARCommandARDrone3NetworkSettingsWifiSelectionListener _ARCommandARDrone3NetworkSettingsWifiSelectionListener_PARAM) {
        this._ARCommandARDrone3NetworkSettingsWifiSelectionListener = _ARCommandARDrone3NetworkSettingsWifiSelectionListener_PARAM;
    }

    public void setARDrone3NetworkSettingsWifiSecurityListener(ARCommandARDrone3NetworkSettingsWifiSecurityListener _ARCommandARDrone3NetworkSettingsWifiSecurityListener_PARAM) {
        this._ARCommandARDrone3NetworkSettingsWifiSecurityListener = _ARCommandARDrone3NetworkSettingsWifiSecurityListener_PARAM;
    }

    public void setARDrone3PictureSettingsPictureFormatSelectionListener(ARCommandARDrone3PictureSettingsPictureFormatSelectionListener _ARCommandARDrone3PictureSettingsPictureFormatSelectionListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsPictureFormatSelectionListener = _ARCommandARDrone3PictureSettingsPictureFormatSelectionListener_PARAM;
    }

    public void setARDrone3PictureSettingsAutoWhiteBalanceSelectionListener(C1477xe12d7523 _ARCommandARDrone3PictureSettingsAutoWhiteBalanceSelectionListener_PARAM) {
        this.f894x48d0f8a4 = _ARCommandARDrone3PictureSettingsAutoWhiteBalanceSelectionListener_PARAM;
    }

    public void setARDrone3PictureSettingsExpositionSelectionListener(ARCommandARDrone3PictureSettingsExpositionSelectionListener _ARCommandARDrone3PictureSettingsExpositionSelectionListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsExpositionSelectionListener = _ARCommandARDrone3PictureSettingsExpositionSelectionListener_PARAM;
    }

    public void setARDrone3PictureSettingsSaturationSelectionListener(ARCommandARDrone3PictureSettingsSaturationSelectionListener _ARCommandARDrone3PictureSettingsSaturationSelectionListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsSaturationSelectionListener = _ARCommandARDrone3PictureSettingsSaturationSelectionListener_PARAM;
    }

    public void setARDrone3PictureSettingsTimelapseSelectionListener(ARCommandARDrone3PictureSettingsTimelapseSelectionListener _ARCommandARDrone3PictureSettingsTimelapseSelectionListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsTimelapseSelectionListener = _ARCommandARDrone3PictureSettingsTimelapseSelectionListener_PARAM;
    }

    public void setARDrone3PictureSettingsVideoAutorecordSelectionListener(ARCommandARDrone3PictureSettingsVideoAutorecordSelectionListener _ARCommandARDrone3PictureSettingsVideoAutorecordSelectionListener_PARAM) {
        this.f902x1e99a95f = _ARCommandARDrone3PictureSettingsVideoAutorecordSelectionListener_PARAM;
    }

    public void setARDrone3PictureSettingsVideoStabilizationModeListener(ARCommandARDrone3PictureSettingsVideoStabilizationModeListener _ARCommandARDrone3PictureSettingsVideoStabilizationModeListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsVideoStabilizationModeListener = _ARCommandARDrone3PictureSettingsVideoStabilizationModeListener_PARAM;
    }

    public void setARDrone3PictureSettingsVideoRecordingModeListener(ARCommandARDrone3PictureSettingsVideoRecordingModeListener _ARCommandARDrone3PictureSettingsVideoRecordingModeListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsVideoRecordingModeListener = _ARCommandARDrone3PictureSettingsVideoRecordingModeListener_PARAM;
    }

    public void setARDrone3PictureSettingsVideoFramerateListener(ARCommandARDrone3PictureSettingsVideoFramerateListener _ARCommandARDrone3PictureSettingsVideoFramerateListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsVideoFramerateListener = _ARCommandARDrone3PictureSettingsVideoFramerateListener_PARAM;
    }

    public void setARDrone3PictureSettingsVideoResolutionsListener(ARCommandARDrone3PictureSettingsVideoResolutionsListener _ARCommandARDrone3PictureSettingsVideoResolutionsListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsVideoResolutionsListener = _ARCommandARDrone3PictureSettingsVideoResolutionsListener_PARAM;
    }

    public void setARDrone3MediaStreamingVideoEnableListener(ARCommandARDrone3MediaStreamingVideoEnableListener _ARCommandARDrone3MediaStreamingVideoEnableListener_PARAM) {
        this._ARCommandARDrone3MediaStreamingVideoEnableListener = _ARCommandARDrone3MediaStreamingVideoEnableListener_PARAM;
    }

    public void setARDrone3MediaStreamingVideoStreamModeListener(ARCommandARDrone3MediaStreamingVideoStreamModeListener _ARCommandARDrone3MediaStreamingVideoStreamModeListener_PARAM) {
        this._ARCommandARDrone3MediaStreamingVideoStreamModeListener = _ARCommandARDrone3MediaStreamingVideoStreamModeListener_PARAM;
    }

    public void setARDrone3GPSSettingsSetHomeListener(ARCommandARDrone3GPSSettingsSetHomeListener _ARCommandARDrone3GPSSettingsSetHomeListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsSetHomeListener = _ARCommandARDrone3GPSSettingsSetHomeListener_PARAM;
    }

    public void setARDrone3GPSSettingsResetHomeListener(ARCommandARDrone3GPSSettingsResetHomeListener _ARCommandARDrone3GPSSettingsResetHomeListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsResetHomeListener = _ARCommandARDrone3GPSSettingsResetHomeListener_PARAM;
    }

    public void setARDrone3GPSSettingsSendControllerGPSListener(ARCommandARDrone3GPSSettingsSendControllerGPSListener _ARCommandARDrone3GPSSettingsSendControllerGPSListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsSendControllerGPSListener = _ARCommandARDrone3GPSSettingsSendControllerGPSListener_PARAM;
    }

    public void setARDrone3GPSSettingsHomeTypeListener(ARCommandARDrone3GPSSettingsHomeTypeListener _ARCommandARDrone3GPSSettingsHomeTypeListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsHomeTypeListener = _ARCommandARDrone3GPSSettingsHomeTypeListener_PARAM;
    }

    public void setARDrone3GPSSettingsReturnHomeDelayListener(ARCommandARDrone3GPSSettingsReturnHomeDelayListener _ARCommandARDrone3GPSSettingsReturnHomeDelayListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsReturnHomeDelayListener = _ARCommandARDrone3GPSSettingsReturnHomeDelayListener_PARAM;
    }

    public void setARDrone3AntiflickeringElectricFrequencyListener(ARCommandARDrone3AntiflickeringElectricFrequencyListener _ARCommandARDrone3AntiflickeringElectricFrequencyListener_PARAM) {
        this._ARCommandARDrone3AntiflickeringElectricFrequencyListener = _ARCommandARDrone3AntiflickeringElectricFrequencyListener_PARAM;
    }

    public void setARDrone3AntiflickeringSetModeListener(ARCommandARDrone3AntiflickeringSetModeListener _ARCommandARDrone3AntiflickeringSetModeListener_PARAM) {
        this._ARCommandARDrone3AntiflickeringSetModeListener = _ARCommandARDrone3AntiflickeringSetModeListener_PARAM;
    }

    public void setARDrone3MediaRecordStatePictureStateChangedListener(ARCommandARDrone3MediaRecordStatePictureStateChangedListener _ARCommandARDrone3MediaRecordStatePictureStateChangedListener_PARAM) {
        this._ARCommandARDrone3MediaRecordStatePictureStateChangedListener = _ARCommandARDrone3MediaRecordStatePictureStateChangedListener_PARAM;
    }

    public void setARDrone3MediaRecordStateVideoStateChangedListener(ARCommandARDrone3MediaRecordStateVideoStateChangedListener _ARCommandARDrone3MediaRecordStateVideoStateChangedListener_PARAM) {
        this._ARCommandARDrone3MediaRecordStateVideoStateChangedListener = _ARCommandARDrone3MediaRecordStateVideoStateChangedListener_PARAM;
    }

    public void setARDrone3MediaRecordStatePictureStateChangedV2Listener(ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener _ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener_PARAM) {
        this._ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener = _ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener_PARAM;
    }

    public void setARDrone3MediaRecordStateVideoStateChangedV2Listener(ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener _ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener_PARAM) {
        this._ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener = _ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener_PARAM;
    }

    public void setARDrone3MediaRecordStateVideoResolutionStateListener(ARCommandARDrone3MediaRecordStateVideoResolutionStateListener _ARCommandARDrone3MediaRecordStateVideoResolutionStateListener_PARAM) {
        this._ARCommandARDrone3MediaRecordStateVideoResolutionStateListener = _ARCommandARDrone3MediaRecordStateVideoResolutionStateListener_PARAM;
    }

    public void setARDrone3MediaRecordEventPictureEventChangedListener(ARCommandARDrone3MediaRecordEventPictureEventChangedListener _ARCommandARDrone3MediaRecordEventPictureEventChangedListener_PARAM) {
        this._ARCommandARDrone3MediaRecordEventPictureEventChangedListener = _ARCommandARDrone3MediaRecordEventPictureEventChangedListener_PARAM;
    }

    public void setARDrone3MediaRecordEventVideoEventChangedListener(ARCommandARDrone3MediaRecordEventVideoEventChangedListener _ARCommandARDrone3MediaRecordEventVideoEventChangedListener_PARAM) {
        this._ARCommandARDrone3MediaRecordEventVideoEventChangedListener = _ARCommandARDrone3MediaRecordEventVideoEventChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateFlatTrimChangedListener(ARCommandARDrone3PilotingStateFlatTrimChangedListener _ARCommandARDrone3PilotingStateFlatTrimChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateFlatTrimChangedListener = _ARCommandARDrone3PilotingStateFlatTrimChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateFlyingStateChangedListener(ARCommandARDrone3PilotingStateFlyingStateChangedListener _ARCommandARDrone3PilotingStateFlyingStateChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateFlyingStateChangedListener = _ARCommandARDrone3PilotingStateFlyingStateChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateAlertStateChangedListener(ARCommandARDrone3PilotingStateAlertStateChangedListener _ARCommandARDrone3PilotingStateAlertStateChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateAlertStateChangedListener = _ARCommandARDrone3PilotingStateAlertStateChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateNavigateHomeStateChangedListener(ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener _ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener = _ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener_PARAM;
    }

    public void setARDrone3PilotingStatePositionChangedListener(ARCommandARDrone3PilotingStatePositionChangedListener _ARCommandARDrone3PilotingStatePositionChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStatePositionChangedListener = _ARCommandARDrone3PilotingStatePositionChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateSpeedChangedListener(ARCommandARDrone3PilotingStateSpeedChangedListener _ARCommandARDrone3PilotingStateSpeedChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateSpeedChangedListener = _ARCommandARDrone3PilotingStateSpeedChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateAttitudeChangedListener(ARCommandARDrone3PilotingStateAttitudeChangedListener _ARCommandARDrone3PilotingStateAttitudeChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateAttitudeChangedListener = _ARCommandARDrone3PilotingStateAttitudeChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateAutoTakeOffModeChangedListener(ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener _ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener = _ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateAltitudeChangedListener(ARCommandARDrone3PilotingStateAltitudeChangedListener _ARCommandARDrone3PilotingStateAltitudeChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateAltitudeChangedListener = _ARCommandARDrone3PilotingStateAltitudeChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateGpsLocationChangedListener(ARCommandARDrone3PilotingStateGpsLocationChangedListener _ARCommandARDrone3PilotingStateGpsLocationChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateGpsLocationChangedListener = _ARCommandARDrone3PilotingStateGpsLocationChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateLandingStateChangedListener(ARCommandARDrone3PilotingStateLandingStateChangedListener _ARCommandARDrone3PilotingStateLandingStateChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateLandingStateChangedListener = _ARCommandARDrone3PilotingStateLandingStateChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateAirSpeedChangedListener(ARCommandARDrone3PilotingStateAirSpeedChangedListener _ARCommandARDrone3PilotingStateAirSpeedChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateAirSpeedChangedListener = _ARCommandARDrone3PilotingStateAirSpeedChangedListener_PARAM;
    }

    public void setARDrone3PilotingStateMoveToChangedListener(ARCommandARDrone3PilotingStateMoveToChangedListener _ARCommandARDrone3PilotingStateMoveToChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingStateMoveToChangedListener = _ARCommandARDrone3PilotingStateMoveToChangedListener_PARAM;
    }

    public void setARDrone3PilotingEventMoveByEndListener(ARCommandARDrone3PilotingEventMoveByEndListener _ARCommandARDrone3PilotingEventMoveByEndListener_PARAM) {
        this._ARCommandARDrone3PilotingEventMoveByEndListener = _ARCommandARDrone3PilotingEventMoveByEndListener_PARAM;
    }

    public void setARDrone3NetworkStateWifiScanListChangedListener(ARCommandARDrone3NetworkStateWifiScanListChangedListener _ARCommandARDrone3NetworkStateWifiScanListChangedListener_PARAM) {
        this._ARCommandARDrone3NetworkStateWifiScanListChangedListener = _ARCommandARDrone3NetworkStateWifiScanListChangedListener_PARAM;
    }

    public void setARDrone3NetworkStateAllWifiScanChangedListener(ARCommandARDrone3NetworkStateAllWifiScanChangedListener _ARCommandARDrone3NetworkStateAllWifiScanChangedListener_PARAM) {
        this._ARCommandARDrone3NetworkStateAllWifiScanChangedListener = _ARCommandARDrone3NetworkStateAllWifiScanChangedListener_PARAM;
    }

    public void setARDrone3NetworkStateWifiAuthChannelListChangedListener(ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener _ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener_PARAM) {
        this._ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener = _ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener_PARAM;
    }

    public void setARDrone3NetworkStateAllWifiAuthChannelChangedListener(ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener _ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener_PARAM) {
        this._ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener = _ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateMaxAltitudeChangedListener(ARCommandARDrone3PilotingSettingsStateMaxAltitudeChangedListener _ARCommandARDrone3PilotingSettingsStateMaxAltitudeChangedListener_PARAM) {
        this.f917x6ee3f9bf = _ARCommandARDrone3PilotingSettingsStateMaxAltitudeChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateMaxTiltChangedListener(ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener _ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener = _ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateAbsolutControlChangedListener(C1490x7118b1b _ARCommandARDrone3PilotingSettingsStateAbsolutControlChangedListener_PARAM) {
        this.f908x13e2325c = _ARCommandARDrone3PilotingSettingsStateAbsolutControlChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateMaxDistanceChangedListener(ARCommandARDrone3PilotingSettingsStateMaxDistanceChangedListener _ARCommandARDrone3PilotingSettingsStateMaxDistanceChangedListener_PARAM) {
        this.f918xacf6880c = _ARCommandARDrone3PilotingSettingsStateMaxDistanceChangedListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsStateNoFlyOverMaxDistanceChangedListener */
    public void m71x6a18bdbf(C1499x946e4737 _ARCommandARDrone3PilotingSettingsStateNoFlyOverMaxDistanceChangedListener_PARAM) {
        this.f920x645ab9b8 = _ARCommandARDrone3PilotingSettingsStateNoFlyOverMaxDistanceChangedListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalSpeedListener */
    public void m67xde99b1c9(C1492x8d351151 _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalSpeedListener_PARAM) {
        this.f910xda3bfbb0 = _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalSpeedListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalSpeedListener */
    public void m70x13bf0037(C1495xab3ca1bf _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalSpeedListener_PARAM) {
        this.f913x536897de = _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalSpeedListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalAccelerationListener */
    public void m66xbd94dde6(C1491x39e0755e _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalAccelerationListener_PARAM) {
        this.f909xb9adf21f = _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalAccelerationListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalAccelerationListener */
    public void m69xa33d17b8(C1494xe1f82d30 _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalAccelerationListener_PARAM) {
        this.f912xb8cfe631 = _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalAccelerationListener_PARAM;
    }

    /* renamed from: setARDrone3PilotingSettingsStateAutonomousFlightMaxRotationSpeedListener */
    public void m68x60a1a52f(C1493xf81f46b7 _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxRotationSpeedListener_PARAM) {
        this.f911xa04b3cd6 = _ARCommandARDrone3PilotingSettingsStateAutonomousFlightMaxRotationSpeedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateBankedTurnChangedListener(ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener _ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener = _ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateMinAltitudeChangedListener(ARCommandARDrone3PilotingSettingsStateMinAltitudeChangedListener _ARCommandARDrone3PilotingSettingsStateMinAltitudeChangedListener_PARAM) {
        this.f919xb856cd11 = _ARCommandARDrone3PilotingSettingsStateMinAltitudeChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateCirclingDirectionChangedListener(C1497x42c9b114 _ARCommandARDrone3PilotingSettingsStateCirclingDirectionChangedListener_PARAM) {
        this.f915x90013633 = _ARCommandARDrone3PilotingSettingsStateCirclingDirectionChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateCirclingRadiusChangedListener(C1498x181f096b _ARCommandARDrone3PilotingSettingsStateCirclingRadiusChangedListener_PARAM) {
        this.f916x24efb0ac = _ARCommandARDrone3PilotingSettingsStateCirclingRadiusChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStateCirclingAltitudeChangedListener(C1496x3bfc681b _ARCommandARDrone3PilotingSettingsStateCirclingAltitudeChangedListener_PARAM) {
        this.f914x5740431c = _ARCommandARDrone3PilotingSettingsStateCirclingAltitudeChangedListener_PARAM;
    }

    public void setARDrone3PilotingSettingsStatePitchModeChangedListener(ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener _ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener_PARAM) {
        this._ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener = _ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener_PARAM;
    }

    public void setARDrone3SpeedSettingsStateMaxVerticalSpeedChangedListener(C1504x6e88e34e _ARCommandARDrone3SpeedSettingsStateMaxVerticalSpeedChangedListener_PARAM) {
        this.f927xfb55cfed = _ARCommandARDrone3SpeedSettingsStateMaxVerticalSpeedChangedListener_PARAM;
    }

    public void setARDrone3SpeedSettingsStateMaxRotationSpeedChangedListener(C1503x22493756 _ARCommandARDrone3SpeedSettingsStateMaxRotationSpeedChangedListener_PARAM) {
        this.f926xaf1623f5 = _ARCommandARDrone3SpeedSettingsStateMaxRotationSpeedChangedListener_PARAM;
    }

    public void setARDrone3SpeedSettingsStateHullProtectionChangedListener(ARCommandARDrone3SpeedSettingsStateHullProtectionChangedListener _ARCommandARDrone3SpeedSettingsStateHullProtectionChangedListener_PARAM) {
        this.f924x3a21b0b4 = _ARCommandARDrone3SpeedSettingsStateHullProtectionChangedListener_PARAM;
    }

    public void setARDrone3SpeedSettingsStateOutdoorChangedListener(ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener _ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener_PARAM) {
        this._ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener = _ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener_PARAM;
    }

    /* renamed from: setARDrone3SpeedSettingsStateMaxPitchRollRotationSpeedChangedListener */
    public void m72x131ae34d(C1502xfe33eec5 _ARCommandARDrone3SpeedSettingsStateMaxPitchRollRotationSpeedChangedListener_PARAM) {
        this.f925x84cdc506 = _ARCommandARDrone3SpeedSettingsStateMaxPitchRollRotationSpeedChangedListener_PARAM;
    }

    public void setARDrone3NetworkSettingsStateWifiSelectionChangedListener(C1476xab550ef7 _ARCommandARDrone3NetworkSettingsStateWifiSelectionChangedListener_PARAM) {
        this.f893x12f89278 = _ARCommandARDrone3NetworkSettingsStateWifiSelectionChangedListener_PARAM;
    }

    public void setARDrone3NetworkSettingsStateWifiSecurityChangedListener(ARCommandARDrone3NetworkSettingsStateWifiSecurityChangedListener _ARCommandARDrone3NetworkSettingsStateWifiSecurityChangedListener_PARAM) {
        this.f892xcf58be8c = _ARCommandARDrone3NetworkSettingsStateWifiSecurityChangedListener_PARAM;
    }

    public void setARDrone3NetworkSettingsStateWifiSecurityListener(ARCommandARDrone3NetworkSettingsStateWifiSecurityListener _ARCommandARDrone3NetworkSettingsStateWifiSecurityListener_PARAM) {
        this._ARCommandARDrone3NetworkSettingsStateWifiSecurityListener = _ARCommandARDrone3NetworkSettingsStateWifiSecurityListener_PARAM;
    }

    public void setARDrone3SettingsStateProductMotorVersionListChangedListener(C1501xad2d1ee0 _ARCommandARDrone3SettingsStateProductMotorVersionListChangedListener_PARAM) {
        this.f923x3a715fbf = _ARCommandARDrone3SettingsStateProductMotorVersionListChangedListener_PARAM;
    }

    public void setARDrone3SettingsStateProductGPSVersionChangedListener(ARCommandARDrone3SettingsStateProductGPSVersionChangedListener _ARCommandARDrone3SettingsStateProductGPSVersionChangedListener_PARAM) {
        this._ARCommandARDrone3SettingsStateProductGPSVersionChangedListener = _ARCommandARDrone3SettingsStateProductGPSVersionChangedListener_PARAM;
    }

    public void setARDrone3SettingsStateMotorErrorStateChangedListener(ARCommandARDrone3SettingsStateMotorErrorStateChangedListener _ARCommandARDrone3SettingsStateMotorErrorStateChangedListener_PARAM) {
        this._ARCommandARDrone3SettingsStateMotorErrorStateChangedListener = _ARCommandARDrone3SettingsStateMotorErrorStateChangedListener_PARAM;
    }

    public void setARDrone3SettingsStateMotorSoftwareVersionChangedListener(C1500x12e11684 _ARCommandARDrone3SettingsStateMotorSoftwareVersionChangedListener_PARAM) {
        this.f922x7a849a05 = _ARCommandARDrone3SettingsStateMotorSoftwareVersionChangedListener_PARAM;
    }

    public void setARDrone3SettingsStateMotorFlightsStatusChangedListener(ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener _ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener_PARAM) {
        this._ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener = _ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener_PARAM;
    }

    public void setARDrone3SettingsStateMotorErrorLastErrorChangedListener(ARCommandARDrone3SettingsStateMotorErrorLastErrorChangedListener _ARCommandARDrone3SettingsStateMotorErrorLastErrorChangedListener_PARAM) {
        this.f921x328a8890 = _ARCommandARDrone3SettingsStateMotorErrorLastErrorChangedListener_PARAM;
    }

    public void setARDrone3SettingsStateP7IDListener(ARCommandARDrone3SettingsStateP7IDListener _ARCommandARDrone3SettingsStateP7IDListener_PARAM) {
        this._ARCommandARDrone3SettingsStateP7IDListener = _ARCommandARDrone3SettingsStateP7IDListener_PARAM;
    }

    public void setARDrone3SettingsStateCPUIDListener(ARCommandARDrone3SettingsStateCPUIDListener _ARCommandARDrone3SettingsStateCPUIDListener_PARAM) {
        this._ARCommandARDrone3SettingsStateCPUIDListener = _ARCommandARDrone3SettingsStateCPUIDListener_PARAM;
    }

    public void setARDrone3PictureSettingsStatePictureFormatChangedListener(C1479x873165c9 _ARCommandARDrone3PictureSettingsStatePictureFormatChangedListener_PARAM) {
        this.f896xeed4e94a = _ARCommandARDrone3PictureSettingsStatePictureFormatChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateAutoWhiteBalanceChangedListener(C1478x18639810 _ARCommandARDrone3PictureSettingsStateAutoWhiteBalanceChangedListener_PARAM) {
        this.f895xa5a7d8ef = _ARCommandARDrone3PictureSettingsStateAutoWhiteBalanceChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateExpositionChangedListener(ARCommandARDrone3PictureSettingsStateExpositionChangedListener _ARCommandARDrone3PictureSettingsStateExpositionChangedListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsStateExpositionChangedListener = _ARCommandARDrone3PictureSettingsStateExpositionChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateSaturationChangedListener(ARCommandARDrone3PictureSettingsStateSaturationChangedListener _ARCommandARDrone3PictureSettingsStateSaturationChangedListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsStateSaturationChangedListener = _ARCommandARDrone3PictureSettingsStateSaturationChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateTimelapseChangedListener(ARCommandARDrone3PictureSettingsStateTimelapseChangedListener _ARCommandARDrone3PictureSettingsStateTimelapseChangedListener_PARAM) {
        this._ARCommandARDrone3PictureSettingsStateTimelapseChangedListener = _ARCommandARDrone3PictureSettingsStateTimelapseChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateVideoAutorecordChangedListener(C1480x355a5883 _ARCommandARDrone3PictureSettingsStateVideoAutorecordChangedListener_PARAM) {
        this.f897x422affc4 = _ARCommandARDrone3PictureSettingsStateVideoAutorecordChangedListener_PARAM;
    }

    /* renamed from: setARDrone3PictureSettingsStateVideoStabilizationModeChangedListener */
    public void m60xcbe2f543(C1484xec3e9acb _ARCommandARDrone3PictureSettingsStateVideoStabilizationModeChangedListener_PARAM) {
        this.f901x19e0786a = _ARCommandARDrone3PictureSettingsStateVideoStabilizationModeChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateVideoRecordingModeChangedListener(C1482xa66af7f9 _ARCommandARDrone3PictureSettingsStateVideoRecordingModeChangedListener_PARAM) {
        this.f899xf3a27d18 = _ARCommandARDrone3PictureSettingsStateVideoRecordingModeChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateVideoFramerateChangedListener(C1481x949850c0 _ARCommandARDrone3PictureSettingsStateVideoFramerateChangedListener_PARAM) {
        this.f898x21653d5f = _ARCommandARDrone3PictureSettingsStateVideoFramerateChangedListener_PARAM;
    }

    public void setARDrone3PictureSettingsStateVideoResolutionsChangedListener(C1483x24732ac6 _ARCommandARDrone3PictureSettingsStateVideoResolutionsChangedListener_PARAM) {
        this.f900xb1b76ba5 = _ARCommandARDrone3PictureSettingsStateVideoResolutionsChangedListener_PARAM;
    }

    public void setARDrone3MediaStreamingStateVideoEnableChangedListener(ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener _ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener_PARAM) {
        this._ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener = _ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener_PARAM;
    }

    public void setARDrone3MediaStreamingStateVideoStreamModeChangedListener(C1475x98fc87d7 _ARCommandARDrone3MediaStreamingStateVideoStreamModeChangedListener_PARAM) {
        this.f891x25c97476 = _ARCommandARDrone3MediaStreamingStateVideoStreamModeChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateHomeChangedListener(ARCommandARDrone3GPSSettingsStateHomeChangedListener _ARCommandARDrone3GPSSettingsStateHomeChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateHomeChangedListener = _ARCommandARDrone3GPSSettingsStateHomeChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateResetHomeChangedListener(ARCommandARDrone3GPSSettingsStateResetHomeChangedListener _ARCommandARDrone3GPSSettingsStateResetHomeChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateResetHomeChangedListener = _ARCommandARDrone3GPSSettingsStateResetHomeChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateGPSFixStateChangedListener(ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener _ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener = _ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateGPSUpdateStateChangedListener(ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener _ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener = _ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateHomeTypeChangedListener(ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener _ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener = _ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateReturnHomeDelayChangedListener(ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener _ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener = _ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener_PARAM;
    }

    public void setARDrone3GPSSettingsStateGeofenceCenterChangedListener(ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener _ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener_PARAM) {
        this._ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener = _ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener_PARAM;
    }

    public void setARDrone3CameraStateOrientationListener(ARCommandARDrone3CameraStateOrientationListener _ARCommandARDrone3CameraStateOrientationListener_PARAM) {
        this._ARCommandARDrone3CameraStateOrientationListener = _ARCommandARDrone3CameraStateOrientationListener_PARAM;
    }

    public void setARDrone3CameraStateDefaultCameraOrientationListener(ARCommandARDrone3CameraStateDefaultCameraOrientationListener _ARCommandARDrone3CameraStateDefaultCameraOrientationListener_PARAM) {
        this._ARCommandARDrone3CameraStateDefaultCameraOrientationListener = _ARCommandARDrone3CameraStateDefaultCameraOrientationListener_PARAM;
    }

    public void setARDrone3CameraStateOrientationV2Listener(ARCommandARDrone3CameraStateOrientationV2Listener _ARCommandARDrone3CameraStateOrientationV2Listener_PARAM) {
        this._ARCommandARDrone3CameraStateOrientationV2Listener = _ARCommandARDrone3CameraStateOrientationV2Listener_PARAM;
    }

    public void setARDrone3CameraStateDefaultCameraOrientationV2Listener(ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener _ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener_PARAM) {
        this._ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener = _ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener_PARAM;
    }

    public void setARDrone3CameraStateVelocityRangeListener(ARCommandARDrone3CameraStateVelocityRangeListener _ARCommandARDrone3CameraStateVelocityRangeListener_PARAM) {
        this._ARCommandARDrone3CameraStateVelocityRangeListener = _ARCommandARDrone3CameraStateVelocityRangeListener_PARAM;
    }

    public void setARDrone3AntiflickeringStateElectricFrequencyChangedListener(C1474x9d9d43a8 _ARCommandARDrone3AntiflickeringStateElectricFrequencyChangedListener_PARAM) {
        this.f890x2ae18487 = _ARCommandARDrone3AntiflickeringStateElectricFrequencyChangedListener_PARAM;
    }

    public void setARDrone3AntiflickeringStateModeChangedListener(ARCommandARDrone3AntiflickeringStateModeChangedListener _ARCommandARDrone3AntiflickeringStateModeChangedListener_PARAM) {
        this._ARCommandARDrone3AntiflickeringStateModeChangedListener = _ARCommandARDrone3AntiflickeringStateModeChangedListener_PARAM;
    }

    public void setARDrone3GPSStateNumberOfSatelliteChangedListener(ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener _ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener_PARAM) {
        this._ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener = _ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener_PARAM;
    }

    public void setARDrone3GPSStateHomeTypeAvailabilityChangedListener(ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener _ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener_PARAM) {
        this._ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener = _ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener_PARAM;
    }

    public void setARDrone3GPSStateHomeTypeChosenChangedListener(ARCommandARDrone3GPSStateHomeTypeChosenChangedListener _ARCommandARDrone3GPSStateHomeTypeChosenChangedListener_PARAM) {
        this._ARCommandARDrone3GPSStateHomeTypeChosenChangedListener = _ARCommandARDrone3GPSStateHomeTypeChosenChangedListener_PARAM;
    }

    public void setARDrone3PROStateFeaturesListener(ARCommandARDrone3PROStateFeaturesListener _ARCommandARDrone3PROStateFeaturesListener_PARAM) {
        this._ARCommandARDrone3PROStateFeaturesListener = _ARCommandARDrone3PROStateFeaturesListener_PARAM;
    }

    public void setARDrone3AccessoryStateConnectedAccessoriesListener(ARCommandARDrone3AccessoryStateConnectedAccessoriesListener _ARCommandARDrone3AccessoryStateConnectedAccessoriesListener_PARAM) {
        this._ARCommandARDrone3AccessoryStateConnectedAccessoriesListener = _ARCommandARDrone3AccessoryStateConnectedAccessoriesListener_PARAM;
    }

    public void setCommonNetworkDisconnectListener(ARCommandCommonNetworkDisconnectListener _ARCommandCommonNetworkDisconnectListener_PARAM) {
        this._ARCommandCommonNetworkDisconnectListener = _ARCommandCommonNetworkDisconnectListener_PARAM;
    }

    public void setCommonSettingsAllSettingsListener(ARCommandCommonSettingsAllSettingsListener _ARCommandCommonSettingsAllSettingsListener_PARAM) {
        this._ARCommandCommonSettingsAllSettingsListener = _ARCommandCommonSettingsAllSettingsListener_PARAM;
    }

    public void setCommonSettingsResetListener(ARCommandCommonSettingsResetListener _ARCommandCommonSettingsResetListener_PARAM) {
        this._ARCommandCommonSettingsResetListener = _ARCommandCommonSettingsResetListener_PARAM;
    }

    public void setCommonSettingsProductNameListener(ARCommandCommonSettingsProductNameListener _ARCommandCommonSettingsProductNameListener_PARAM) {
        this._ARCommandCommonSettingsProductNameListener = _ARCommandCommonSettingsProductNameListener_PARAM;
    }

    public void setCommonSettingsCountryListener(ARCommandCommonSettingsCountryListener _ARCommandCommonSettingsCountryListener_PARAM) {
        this._ARCommandCommonSettingsCountryListener = _ARCommandCommonSettingsCountryListener_PARAM;
    }

    public void setCommonSettingsAutoCountryListener(ARCommandCommonSettingsAutoCountryListener _ARCommandCommonSettingsAutoCountryListener_PARAM) {
        this._ARCommandCommonSettingsAutoCountryListener = _ARCommandCommonSettingsAutoCountryListener_PARAM;
    }

    public void setCommonCommonAllStatesListener(ARCommandCommonCommonAllStatesListener _ARCommandCommonCommonAllStatesListener_PARAM) {
        this._ARCommandCommonCommonAllStatesListener = _ARCommandCommonCommonAllStatesListener_PARAM;
    }

    public void setCommonCommonCurrentDateListener(ARCommandCommonCommonCurrentDateListener _ARCommandCommonCommonCurrentDateListener_PARAM) {
        this._ARCommandCommonCommonCurrentDateListener = _ARCommandCommonCommonCurrentDateListener_PARAM;
    }

    public void setCommonCommonCurrentTimeListener(ARCommandCommonCommonCurrentTimeListener _ARCommandCommonCommonCurrentTimeListener_PARAM) {
        this._ARCommandCommonCommonCurrentTimeListener = _ARCommandCommonCommonCurrentTimeListener_PARAM;
    }

    public void setCommonCommonRebootListener(ARCommandCommonCommonRebootListener _ARCommandCommonCommonRebootListener_PARAM) {
        this._ARCommandCommonCommonRebootListener = _ARCommandCommonCommonRebootListener_PARAM;
    }

    public void setCommonOverHeatSwitchOffListener(ARCommandCommonOverHeatSwitchOffListener _ARCommandCommonOverHeatSwitchOffListener_PARAM) {
        this._ARCommandCommonOverHeatSwitchOffListener = _ARCommandCommonOverHeatSwitchOffListener_PARAM;
    }

    public void setCommonOverHeatVentilateListener(ARCommandCommonOverHeatVentilateListener _ARCommandCommonOverHeatVentilateListener_PARAM) {
        this._ARCommandCommonOverHeatVentilateListener = _ARCommandCommonOverHeatVentilateListener_PARAM;
    }

    public void setCommonControllerIsPilotingListener(ARCommandCommonControllerIsPilotingListener _ARCommandCommonControllerIsPilotingListener_PARAM) {
        this._ARCommandCommonControllerIsPilotingListener = _ARCommandCommonControllerIsPilotingListener_PARAM;
    }

    public void setCommonWifiSettingsOutdoorSettingListener(ARCommandCommonWifiSettingsOutdoorSettingListener _ARCommandCommonWifiSettingsOutdoorSettingListener_PARAM) {
        this._ARCommandCommonWifiSettingsOutdoorSettingListener = _ARCommandCommonWifiSettingsOutdoorSettingListener_PARAM;
    }

    public void setCommonMavlinkStartListener(ARCommandCommonMavlinkStartListener _ARCommandCommonMavlinkStartListener_PARAM) {
        this._ARCommandCommonMavlinkStartListener = _ARCommandCommonMavlinkStartListener_PARAM;
    }

    public void setCommonMavlinkPauseListener(ARCommandCommonMavlinkPauseListener _ARCommandCommonMavlinkPauseListener_PARAM) {
        this._ARCommandCommonMavlinkPauseListener = _ARCommandCommonMavlinkPauseListener_PARAM;
    }

    public void setCommonMavlinkStopListener(ARCommandCommonMavlinkStopListener _ARCommandCommonMavlinkStopListener_PARAM) {
        this._ARCommandCommonMavlinkStopListener = _ARCommandCommonMavlinkStopListener_PARAM;
    }

    public void setCommonFlightPlanSettingsReturnHomeOnDisconnectListener(ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener _ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener_PARAM) {
        this._ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener = _ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener_PARAM;
    }

    public void setCommonCalibrationMagnetoCalibrationListener(ARCommandCommonCalibrationMagnetoCalibrationListener _ARCommandCommonCalibrationMagnetoCalibrationListener_PARAM) {
        this._ARCommandCommonCalibrationMagnetoCalibrationListener = _ARCommandCommonCalibrationMagnetoCalibrationListener_PARAM;
    }

    public void setCommonCalibrationPitotCalibrationListener(ARCommandCommonCalibrationPitotCalibrationListener _ARCommandCommonCalibrationPitotCalibrationListener_PARAM) {
        this._ARCommandCommonCalibrationPitotCalibrationListener = _ARCommandCommonCalibrationPitotCalibrationListener_PARAM;
    }

    public void setCommonGPSControllerPositionForRunListener(ARCommandCommonGPSControllerPositionForRunListener _ARCommandCommonGPSControllerPositionForRunListener_PARAM) {
        this._ARCommandCommonGPSControllerPositionForRunListener = _ARCommandCommonGPSControllerPositionForRunListener_PARAM;
    }

    public void setCommonAudioControllerReadyForStreamingListener(ARCommandCommonAudioControllerReadyForStreamingListener _ARCommandCommonAudioControllerReadyForStreamingListener_PARAM) {
        this._ARCommandCommonAudioControllerReadyForStreamingListener = _ARCommandCommonAudioControllerReadyForStreamingListener_PARAM;
    }

    public void setCommonHeadlightsIntensityListener(ARCommandCommonHeadlightsIntensityListener _ARCommandCommonHeadlightsIntensityListener_PARAM) {
        this._ARCommandCommonHeadlightsIntensityListener = _ARCommandCommonHeadlightsIntensityListener_PARAM;
    }

    public void setCommonAnimationsStartAnimationListener(ARCommandCommonAnimationsStartAnimationListener _ARCommandCommonAnimationsStartAnimationListener_PARAM) {
        this._ARCommandCommonAnimationsStartAnimationListener = _ARCommandCommonAnimationsStartAnimationListener_PARAM;
    }

    public void setCommonAnimationsStopAnimationListener(ARCommandCommonAnimationsStopAnimationListener _ARCommandCommonAnimationsStopAnimationListener_PARAM) {
        this._ARCommandCommonAnimationsStopAnimationListener = _ARCommandCommonAnimationsStopAnimationListener_PARAM;
    }

    public void setCommonAnimationsStopAllAnimationsListener(ARCommandCommonAnimationsStopAllAnimationsListener _ARCommandCommonAnimationsStopAllAnimationsListener_PARAM) {
        this._ARCommandCommonAnimationsStopAllAnimationsListener = _ARCommandCommonAnimationsStopAllAnimationsListener_PARAM;
    }

    public void setCommonAccessoryConfigListener(ARCommandCommonAccessoryConfigListener _ARCommandCommonAccessoryConfigListener_PARAM) {
        this._ARCommandCommonAccessoryConfigListener = _ARCommandCommonAccessoryConfigListener_PARAM;
    }

    public void setCommonChargerSetMaxChargeRateListener(ARCommandCommonChargerSetMaxChargeRateListener _ARCommandCommonChargerSetMaxChargeRateListener_PARAM) {
        this._ARCommandCommonChargerSetMaxChargeRateListener = _ARCommandCommonChargerSetMaxChargeRateListener_PARAM;
    }

    public void setCommonFactoryResetListener(ARCommandCommonFactoryResetListener _ARCommandCommonFactoryResetListener_PARAM) {
        this._ARCommandCommonFactoryResetListener = _ARCommandCommonFactoryResetListener_PARAM;
    }

    public void setCommonNetworkEventDisconnectionListener(ARCommandCommonNetworkEventDisconnectionListener _ARCommandCommonNetworkEventDisconnectionListener_PARAM) {
        this._ARCommandCommonNetworkEventDisconnectionListener = _ARCommandCommonNetworkEventDisconnectionListener_PARAM;
    }

    public void setCommonSettingsStateAllSettingsChangedListener(ARCommandCommonSettingsStateAllSettingsChangedListener _ARCommandCommonSettingsStateAllSettingsChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateAllSettingsChangedListener = _ARCommandCommonSettingsStateAllSettingsChangedListener_PARAM;
    }

    public void setCommonSettingsStateResetChangedListener(ARCommandCommonSettingsStateResetChangedListener _ARCommandCommonSettingsStateResetChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateResetChangedListener = _ARCommandCommonSettingsStateResetChangedListener_PARAM;
    }

    public void setCommonSettingsStateProductNameChangedListener(ARCommandCommonSettingsStateProductNameChangedListener _ARCommandCommonSettingsStateProductNameChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateProductNameChangedListener = _ARCommandCommonSettingsStateProductNameChangedListener_PARAM;
    }

    public void setCommonSettingsStateProductVersionChangedListener(ARCommandCommonSettingsStateProductVersionChangedListener _ARCommandCommonSettingsStateProductVersionChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateProductVersionChangedListener = _ARCommandCommonSettingsStateProductVersionChangedListener_PARAM;
    }

    public void setCommonSettingsStateProductSerialHighChangedListener(ARCommandCommonSettingsStateProductSerialHighChangedListener _ARCommandCommonSettingsStateProductSerialHighChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateProductSerialHighChangedListener = _ARCommandCommonSettingsStateProductSerialHighChangedListener_PARAM;
    }

    public void setCommonSettingsStateProductSerialLowChangedListener(ARCommandCommonSettingsStateProductSerialLowChangedListener _ARCommandCommonSettingsStateProductSerialLowChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateProductSerialLowChangedListener = _ARCommandCommonSettingsStateProductSerialLowChangedListener_PARAM;
    }

    public void setCommonSettingsStateCountryChangedListener(ARCommandCommonSettingsStateCountryChangedListener _ARCommandCommonSettingsStateCountryChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateCountryChangedListener = _ARCommandCommonSettingsStateCountryChangedListener_PARAM;
    }

    public void setCommonSettingsStateAutoCountryChangedListener(ARCommandCommonSettingsStateAutoCountryChangedListener _ARCommandCommonSettingsStateAutoCountryChangedListener_PARAM) {
        this._ARCommandCommonSettingsStateAutoCountryChangedListener = _ARCommandCommonSettingsStateAutoCountryChangedListener_PARAM;
    }

    public void setCommonCommonStateAllStatesChangedListener(ARCommandCommonCommonStateAllStatesChangedListener _ARCommandCommonCommonStateAllStatesChangedListener_PARAM) {
        this._ARCommandCommonCommonStateAllStatesChangedListener = _ARCommandCommonCommonStateAllStatesChangedListener_PARAM;
    }

    public void setCommonCommonStateBatteryStateChangedListener(ARCommandCommonCommonStateBatteryStateChangedListener _ARCommandCommonCommonStateBatteryStateChangedListener_PARAM) {
        this._ARCommandCommonCommonStateBatteryStateChangedListener = _ARCommandCommonCommonStateBatteryStateChangedListener_PARAM;
    }

    public void setCommonCommonStateMassStorageStateListChangedListener(ARCommandCommonCommonStateMassStorageStateListChangedListener _ARCommandCommonCommonStateMassStorageStateListChangedListener_PARAM) {
        this._ARCommandCommonCommonStateMassStorageStateListChangedListener = _ARCommandCommonCommonStateMassStorageStateListChangedListener_PARAM;
    }

    public void setCommonCommonStateMassStorageInfoStateListChangedListener(C1518x23468f0d _ARCommandCommonCommonStateMassStorageInfoStateListChangedListener_PARAM) {
        this.f941x8aea128e = _ARCommandCommonCommonStateMassStorageInfoStateListChangedListener_PARAM;
    }

    public void setCommonCommonStateCurrentDateChangedListener(ARCommandCommonCommonStateCurrentDateChangedListener _ARCommandCommonCommonStateCurrentDateChangedListener_PARAM) {
        this._ARCommandCommonCommonStateCurrentDateChangedListener = _ARCommandCommonCommonStateCurrentDateChangedListener_PARAM;
    }

    public void setCommonCommonStateCurrentTimeChangedListener(ARCommandCommonCommonStateCurrentTimeChangedListener _ARCommandCommonCommonStateCurrentTimeChangedListener_PARAM) {
        this._ARCommandCommonCommonStateCurrentTimeChangedListener = _ARCommandCommonCommonStateCurrentTimeChangedListener_PARAM;
    }

    public void setCommonCommonStateMassStorageInfoRemainingListChangedListener(C1517x4e74f88 _ARCommandCommonCommonStateMassStorageInfoRemainingListChangedListener_PARAM) {
        this.f940x202b2a89 = _ARCommandCommonCommonStateMassStorageInfoRemainingListChangedListener_PARAM;
    }

    public void setCommonCommonStateWifiSignalChangedListener(ARCommandCommonCommonStateWifiSignalChangedListener _ARCommandCommonCommonStateWifiSignalChangedListener_PARAM) {
        this._ARCommandCommonCommonStateWifiSignalChangedListener = _ARCommandCommonCommonStateWifiSignalChangedListener_PARAM;
    }

    public void setCommonCommonStateSensorsStatesListChangedListener(ARCommandCommonCommonStateSensorsStatesListChangedListener _ARCommandCommonCommonStateSensorsStatesListChangedListener_PARAM) {
        this._ARCommandCommonCommonStateSensorsStatesListChangedListener = _ARCommandCommonCommonStateSensorsStatesListChangedListener_PARAM;
    }

    public void setCommonCommonStateProductModelListener(ARCommandCommonCommonStateProductModelListener _ARCommandCommonCommonStateProductModelListener_PARAM) {
        this._ARCommandCommonCommonStateProductModelListener = _ARCommandCommonCommonStateProductModelListener_PARAM;
    }

    public void setCommonCommonStateCountryListKnownListener(ARCommandCommonCommonStateCountryListKnownListener _ARCommandCommonCommonStateCountryListKnownListener_PARAM) {
        this._ARCommandCommonCommonStateCountryListKnownListener = _ARCommandCommonCommonStateCountryListKnownListener_PARAM;
    }

    public void setCommonCommonStateDeprecatedMassStorageContentChangedListener(C1515xf597a1a2 _ARCommandCommonCommonStateDeprecatedMassStorageContentChangedListener_PARAM) {
        this.f938x10db7ca3 = _ARCommandCommonCommonStateDeprecatedMassStorageContentChangedListener_PARAM;
    }

    public void setCommonCommonStateMassStorageContentListener(ARCommandCommonCommonStateMassStorageContentListener _ARCommandCommonCommonStateMassStorageContentListener_PARAM) {
        this._ARCommandCommonCommonStateMassStorageContentListener = _ARCommandCommonCommonStateMassStorageContentListener_PARAM;
    }

    public void setCommonCommonStateMassStorageContentForCurrentRunListener(C1516x4ff7285c _ARCommandCommonCommonStateMassStorageContentForCurrentRunListener_PARAM) {
        this.f939xb79aabdd = _ARCommandCommonCommonStateMassStorageContentForCurrentRunListener_PARAM;
    }

    public void setCommonCommonStateVideoRecordingTimestampListener(ARCommandCommonCommonStateVideoRecordingTimestampListener _ARCommandCommonCommonStateVideoRecordingTimestampListener_PARAM) {
        this._ARCommandCommonCommonStateVideoRecordingTimestampListener = _ARCommandCommonCommonStateVideoRecordingTimestampListener_PARAM;
    }

    public void setCommonOverHeatStateOverHeatChangedListener(ARCommandCommonOverHeatStateOverHeatChangedListener _ARCommandCommonOverHeatStateOverHeatChangedListener_PARAM) {
        this._ARCommandCommonOverHeatStateOverHeatChangedListener = _ARCommandCommonOverHeatStateOverHeatChangedListener_PARAM;
    }

    public void setCommonOverHeatStateOverHeatRegulationChangedListener(ARCommandCommonOverHeatStateOverHeatRegulationChangedListener _ARCommandCommonOverHeatStateOverHeatRegulationChangedListener_PARAM) {
        this._ARCommandCommonOverHeatStateOverHeatRegulationChangedListener = _ARCommandCommonOverHeatStateOverHeatRegulationChangedListener_PARAM;
    }

    public void setCommonWifiSettingsStateOutdoorSettingsChangedListener(ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener _ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener_PARAM) {
        this._ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener = _ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener_PARAM;
    }

    public void setCommonMavlinkStateMavlinkFilePlayingStateChangedListener(C1520xc5448c27 _ARCommandCommonMavlinkStateMavlinkFilePlayingStateChangedListener_PARAM) {
        this.f943x2ce80fa8 = _ARCommandCommonMavlinkStateMavlinkFilePlayingStateChangedListener_PARAM;
    }

    public void setCommonMavlinkStateMavlinkPlayErrorStateChangedListener(ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener _ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener_PARAM) {
        this._ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener = _ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener_PARAM;
    }

    public void setCommonMavlinkStateMissionItemExecutedListener(ARCommandCommonMavlinkStateMissionItemExecutedListener _ARCommandCommonMavlinkStateMissionItemExecutedListener_PARAM) {
        this._ARCommandCommonMavlinkStateMissionItemExecutedListener = _ARCommandCommonMavlinkStateMissionItemExecutedListener_PARAM;
    }

    /* renamed from: setCommonFlightPlanSettingsStateReturnHomeOnDisconnectChangedListener */
    public void m78x56b72c16(C1519x41d0378e _ARCommandCommonFlightPlanSettingsStateReturnHomeOnDisconnectChangedListener_PARAM) {
        this.f942xc86a0dcf = _ARCommandCommonFlightPlanSettingsStateReturnHomeOnDisconnectChangedListener_PARAM;
    }

    public void setCommonCalibrationStateMagnetoCalibrationStateChangedListener(C1513x8aea728 _ARCommandCommonCalibrationStateMagnetoCalibrationStateChangedListener_PARAM) {
        this.f936x23f28229 = _ARCommandCommonCalibrationStateMagnetoCalibrationStateChangedListener_PARAM;
    }

    public void setCommonCalibrationStateMagnetoCalibrationRequiredStateListener(C1511x234108b5 _ARCommandCommonCalibrationStateMagnetoCalibrationRequiredStateListener_PARAM) {
        this.f934x70788dd4 = _ARCommandCommonCalibrationStateMagnetoCalibrationRequiredStateListener_PARAM;
    }

    /* renamed from: setCommonCalibrationStateMagnetoCalibrationAxisToCalibrateChangedListener */
    public void m76x614d3b96(C1510xb983cb0e _ARCommandCommonCalibrationStateMagnetoCalibrationAxisToCalibrateChangedListener_PARAM) {
        this.f933x16d698cf = _ARCommandCommonCalibrationStateMagnetoCalibrationAxisToCalibrateChangedListener_PARAM;
    }

    /* renamed from: setCommonCalibrationStateMagnetoCalibrationStartedChangedListener */
    public void m77xd554ed80(C1512x3fee74f8 _ARCommandCommonCalibrationStateMagnetoCalibrationStartedChangedListener_PARAM) {
        this.f935x99a793b9 = _ARCommandCommonCalibrationStateMagnetoCalibrationStartedChangedListener_PARAM;
    }

    public void setCommonCalibrationStatePitotCalibrationStateChangedListener(C1514x29acc4d _ARCommandCommonCalibrationStatePitotCalibrationStateChangedListener_PARAM) {
        this.f937xf6b738e = _ARCommandCommonCalibrationStatePitotCalibrationStateChangedListener_PARAM;
    }

    public void setCommonCameraSettingsStateCameraSettingsChangedListener(ARCommandCommonCameraSettingsStateCameraSettingsChangedListener _ARCommandCommonCameraSettingsStateCameraSettingsChangedListener_PARAM) {
        this._ARCommandCommonCameraSettingsStateCameraSettingsChangedListener = _ARCommandCommonCameraSettingsStateCameraSettingsChangedListener_PARAM;
    }

    public void setCommonFlightPlanStateAvailabilityStateChangedListener(ARCommandCommonFlightPlanStateAvailabilityStateChangedListener _ARCommandCommonFlightPlanStateAvailabilityStateChangedListener_PARAM) {
        this._ARCommandCommonFlightPlanStateAvailabilityStateChangedListener = _ARCommandCommonFlightPlanStateAvailabilityStateChangedListener_PARAM;
    }

    public void setCommonFlightPlanStateComponentStateListChangedListener(ARCommandCommonFlightPlanStateComponentStateListChangedListener _ARCommandCommonFlightPlanStateComponentStateListChangedListener_PARAM) {
        this._ARCommandCommonFlightPlanStateComponentStateListChangedListener = _ARCommandCommonFlightPlanStateComponentStateListChangedListener_PARAM;
    }

    public void setCommonFlightPlanStateLockStateChangedListener(ARCommandCommonFlightPlanStateLockStateChangedListener _ARCommandCommonFlightPlanStateLockStateChangedListener_PARAM) {
        this._ARCommandCommonFlightPlanStateLockStateChangedListener = _ARCommandCommonFlightPlanStateLockStateChangedListener_PARAM;
    }

    public void setCommonFlightPlanEventStartingErrorEventListener(ARCommandCommonFlightPlanEventStartingErrorEventListener _ARCommandCommonFlightPlanEventStartingErrorEventListener_PARAM) {
        this._ARCommandCommonFlightPlanEventStartingErrorEventListener = _ARCommandCommonFlightPlanEventStartingErrorEventListener_PARAM;
    }

    public void setCommonFlightPlanEventSpeedBridleEventListener(ARCommandCommonFlightPlanEventSpeedBridleEventListener _ARCommandCommonFlightPlanEventSpeedBridleEventListener_PARAM) {
        this._ARCommandCommonFlightPlanEventSpeedBridleEventListener = _ARCommandCommonFlightPlanEventSpeedBridleEventListener_PARAM;
    }

    /* renamed from: setCommonARLibsVersionsStateControllerLibARCommandsVersionListener */
    public void m73x5674e694(C1505x3f0c4e1c _ARCommandCommonARLibsVersionsStateControllerLibARCommandsVersionListener_PARAM) {
        this.f928x1c77077b = _ARCommandCommonARLibsVersionsStateControllerLibARCommandsVersionListener_PARAM;
    }

    /* renamed from: setCommonARLibsVersionsStateSkyControllerLibARCommandsVersionListener */
    public void m74x20f7a481(C1507xc10aff9 _ARCommandCommonARLibsVersionsStateSkyControllerLibARCommandsVersionListener_PARAM) {
        this.f930x92aa863a = _ARCommandCommonARLibsVersionsStateSkyControllerLibARCommandsVersionListener_PARAM;
    }

    public void setCommonARLibsVersionsStateDeviceLibARCommandsVersionListener(C1506xf72e36d6 _ARCommandCommonARLibsVersionsStateDeviceLibARCommandsVersionListener_PARAM) {
        this.f929x847277b5 = _ARCommandCommonARLibsVersionsStateDeviceLibARCommandsVersionListener_PARAM;
    }

    public void setCommonAudioStateAudioStreamingRunningListener(ARCommandCommonAudioStateAudioStreamingRunningListener _ARCommandCommonAudioStateAudioStreamingRunningListener_PARAM) {
        this._ARCommandCommonAudioStateAudioStreamingRunningListener = _ARCommandCommonAudioStateAudioStreamingRunningListener_PARAM;
    }

    public void setCommonHeadlightsStateIntensityChangedListener(ARCommandCommonHeadlightsStateIntensityChangedListener _ARCommandCommonHeadlightsStateIntensityChangedListener_PARAM) {
        this._ARCommandCommonHeadlightsStateIntensityChangedListener = _ARCommandCommonHeadlightsStateIntensityChangedListener_PARAM;
    }

    public void setCommonAnimationsStateListListener(ARCommandCommonAnimationsStateListListener _ARCommandCommonAnimationsStateListListener_PARAM) {
        this._ARCommandCommonAnimationsStateListListener = _ARCommandCommonAnimationsStateListListener_PARAM;
    }

    public void setCommonAccessoryStateSupportedAccessoriesListChangedListener(C1509x59840904 _ARCommandCommonAccessoryStateSupportedAccessoriesListChangedListener_PARAM) {
        this.f932xe6c849e3 = _ARCommandCommonAccessoryStateSupportedAccessoriesListChangedListener_PARAM;
    }

    public void setCommonAccessoryStateAccessoryConfigChangedListener(ARCommandCommonAccessoryStateAccessoryConfigChangedListener _ARCommandCommonAccessoryStateAccessoryConfigChangedListener_PARAM) {
        this._ARCommandCommonAccessoryStateAccessoryConfigChangedListener = _ARCommandCommonAccessoryStateAccessoryConfigChangedListener_PARAM;
    }

    /* renamed from: setCommonAccessoryStateAccessoryConfigModificationEnabledListener */
    public void m75x4762e451(C1508xb1fc6bc9 _ARCommandCommonAccessoryStateAccessoryConfigModificationEnabledListener_PARAM) {
        this.f931xbb58a8a = _ARCommandCommonAccessoryStateAccessoryConfigModificationEnabledListener_PARAM;
    }

    public void setCommonChargerStateMaxChargeRateChangedListener(ARCommandCommonChargerStateMaxChargeRateChangedListener _ARCommandCommonChargerStateMaxChargeRateChangedListener_PARAM) {
        this._ARCommandCommonChargerStateMaxChargeRateChangedListener = _ARCommandCommonChargerStateMaxChargeRateChangedListener_PARAM;
    }

    public void setCommonChargerStateCurrentChargeStateChangedListener(ARCommandCommonChargerStateCurrentChargeStateChangedListener _ARCommandCommonChargerStateCurrentChargeStateChangedListener_PARAM) {
        this._ARCommandCommonChargerStateCurrentChargeStateChangedListener = _ARCommandCommonChargerStateCurrentChargeStateChangedListener_PARAM;
    }

    public void setCommonChargerStateLastChargeRateChangedListener(ARCommandCommonChargerStateLastChargeRateChangedListener _ARCommandCommonChargerStateLastChargeRateChangedListener_PARAM) {
        this._ARCommandCommonChargerStateLastChargeRateChangedListener = _ARCommandCommonChargerStateLastChargeRateChangedListener_PARAM;
    }

    public void setCommonChargerStateChargingInfoListener(ARCommandCommonChargerStateChargingInfoListener _ARCommandCommonChargerStateChargingInfoListener_PARAM) {
        this._ARCommandCommonChargerStateChargingInfoListener = _ARCommandCommonChargerStateChargingInfoListener_PARAM;
    }

    public void setCommonRunStateRunIdChangedListener(ARCommandCommonRunStateRunIdChangedListener _ARCommandCommonRunStateRunIdChangedListener_PARAM) {
        this._ARCommandCommonRunStateRunIdChangedListener = _ARCommandCommonRunStateRunIdChangedListener_PARAM;
    }

    public void setControllerInfoGpsListener(ARCommandControllerInfoGpsListener _ARCommandControllerInfoGpsListener_PARAM) {
        this._ARCommandControllerInfoGpsListener = _ARCommandControllerInfoGpsListener_PARAM;
    }

    public void setControllerInfoBarometerListener(ARCommandControllerInfoBarometerListener _ARCommandControllerInfoBarometerListener_PARAM) {
        this._ARCommandControllerInfoBarometerListener = _ARCommandControllerInfoBarometerListener_PARAM;
    }

    public void setDebugGetAllSettingsListener(ARCommandDebugGetAllSettingsListener _ARCommandDebugGetAllSettingsListener_PARAM) {
        this._ARCommandDebugGetAllSettingsListener = _ARCommandDebugGetAllSettingsListener_PARAM;
    }

    public void setDebugSetSettingListener(ARCommandDebugSetSettingListener _ARCommandDebugSetSettingListener_PARAM) {
        this._ARCommandDebugSetSettingListener = _ARCommandDebugSetSettingListener_PARAM;
    }

    public void setDebugSettingsInfoListener(ARCommandDebugSettingsInfoListener _ARCommandDebugSettingsInfoListener_PARAM) {
        this._ARCommandDebugSettingsInfoListener = _ARCommandDebugSettingsInfoListener_PARAM;
    }

    public void setDebugSettingsListListener(ARCommandDebugSettingsListListener _ARCommandDebugSettingsListListener_PARAM) {
        this._ARCommandDebugSettingsListListener = _ARCommandDebugSettingsListListener_PARAM;
    }

    public void setDroneManagerDiscoverDronesListener(ARCommandDroneManagerDiscoverDronesListener _ARCommandDroneManagerDiscoverDronesListener_PARAM) {
        this._ARCommandDroneManagerDiscoverDronesListener = _ARCommandDroneManagerDiscoverDronesListener_PARAM;
    }

    public void setDroneManagerConnectListener(ARCommandDroneManagerConnectListener _ARCommandDroneManagerConnectListener_PARAM) {
        this._ARCommandDroneManagerConnectListener = _ARCommandDroneManagerConnectListener_PARAM;
    }

    public void setDroneManagerForgetListener(ARCommandDroneManagerForgetListener _ARCommandDroneManagerForgetListener_PARAM) {
        this._ARCommandDroneManagerForgetListener = _ARCommandDroneManagerForgetListener_PARAM;
    }

    public void setDroneManagerDroneListItemListener(ARCommandDroneManagerDroneListItemListener _ARCommandDroneManagerDroneListItemListener_PARAM) {
        this._ARCommandDroneManagerDroneListItemListener = _ARCommandDroneManagerDroneListItemListener_PARAM;
    }

    public void setDroneManagerConnectionStateListener(ARCommandDroneManagerConnectionStateListener _ARCommandDroneManagerConnectionStateListener_PARAM) {
        this._ARCommandDroneManagerConnectionStateListener = _ARCommandDroneManagerConnectionStateListener_PARAM;
    }

    public void setDroneManagerAuthenticationFailedListener(ARCommandDroneManagerAuthenticationFailedListener _ARCommandDroneManagerAuthenticationFailedListener_PARAM) {
        this._ARCommandDroneManagerAuthenticationFailedListener = _ARCommandDroneManagerAuthenticationFailedListener_PARAM;
    }

    public void setDroneManagerConnectionRefusedListener(ARCommandDroneManagerConnectionRefusedListener _ARCommandDroneManagerConnectionRefusedListener_PARAM) {
        this._ARCommandDroneManagerConnectionRefusedListener = _ARCommandDroneManagerConnectionRefusedListener_PARAM;
    }

    public void setDroneManagerKnownDroneItemListener(ARCommandDroneManagerKnownDroneItemListener _ARCommandDroneManagerKnownDroneItemListener_PARAM) {
        this._ARCommandDroneManagerKnownDroneItemListener = _ARCommandDroneManagerKnownDroneItemListener_PARAM;
    }

    public void setFollowMeStartListener(ARCommandFollowMeStartListener _ARCommandFollowMeStartListener_PARAM) {
        this._ARCommandFollowMeStartListener = _ARCommandFollowMeStartListener_PARAM;
    }

    public void setFollowMeStopListener(ARCommandFollowMeStopListener _ARCommandFollowMeStopListener_PARAM) {
        this._ARCommandFollowMeStopListener = _ARCommandFollowMeStopListener_PARAM;
    }

    public void setFollowMeConfigureGeographicListener(ARCommandFollowMeConfigureGeographicListener _ARCommandFollowMeConfigureGeographicListener_PARAM) {
        this._ARCommandFollowMeConfigureGeographicListener = _ARCommandFollowMeConfigureGeographicListener_PARAM;
    }

    public void setFollowMeConfigureRelativeListener(ARCommandFollowMeConfigureRelativeListener _ARCommandFollowMeConfigureRelativeListener_PARAM) {
        this._ARCommandFollowMeConfigureRelativeListener = _ARCommandFollowMeConfigureRelativeListener_PARAM;
    }

    public void setFollowMeStopAnimationListener(ARCommandFollowMeStopAnimationListener _ARCommandFollowMeStopAnimationListener_PARAM) {
        this._ARCommandFollowMeStopAnimationListener = _ARCommandFollowMeStopAnimationListener_PARAM;
    }

    public void setFollowMeStartHelicoidAnimListener(ARCommandFollowMeStartHelicoidAnimListener _ARCommandFollowMeStartHelicoidAnimListener_PARAM) {
        this._ARCommandFollowMeStartHelicoidAnimListener = _ARCommandFollowMeStartHelicoidAnimListener_PARAM;
    }

    public void setFollowMeStartSwingAnimListener(ARCommandFollowMeStartSwingAnimListener _ARCommandFollowMeStartSwingAnimListener_PARAM) {
        this._ARCommandFollowMeStartSwingAnimListener = _ARCommandFollowMeStartSwingAnimListener_PARAM;
    }

    public void setFollowMeStartBoomerangAnimListener(ARCommandFollowMeStartBoomerangAnimListener _ARCommandFollowMeStartBoomerangAnimListener_PARAM) {
        this._ARCommandFollowMeStartBoomerangAnimListener = _ARCommandFollowMeStartBoomerangAnimListener_PARAM;
    }

    public void setFollowMeStartCandleAnimListener(ARCommandFollowMeStartCandleAnimListener _ARCommandFollowMeStartCandleAnimListener_PARAM) {
        this._ARCommandFollowMeStartCandleAnimListener = _ARCommandFollowMeStartCandleAnimListener_PARAM;
    }

    public void setFollowMeStartDollySlideAnimListener(ARCommandFollowMeStartDollySlideAnimListener _ARCommandFollowMeStartDollySlideAnimListener_PARAM) {
        this._ARCommandFollowMeStartDollySlideAnimListener = _ARCommandFollowMeStartDollySlideAnimListener_PARAM;
    }

    public void setFollowMeTargetFramingPositionListener(ARCommandFollowMeTargetFramingPositionListener _ARCommandFollowMeTargetFramingPositionListener_PARAM) {
        this._ARCommandFollowMeTargetFramingPositionListener = _ARCommandFollowMeTargetFramingPositionListener_PARAM;
    }

    public void setFollowMeTargetImageDetectionListener(ARCommandFollowMeTargetImageDetectionListener _ARCommandFollowMeTargetImageDetectionListener_PARAM) {
        this._ARCommandFollowMeTargetImageDetectionListener = _ARCommandFollowMeTargetImageDetectionListener_PARAM;
    }

    public void setFollowMeStateListener(ARCommandFollowMeStateListener _ARCommandFollowMeStateListener_PARAM) {
        this._ARCommandFollowMeStateListener = _ARCommandFollowMeStateListener_PARAM;
    }

    public void setFollowMeModeInfoListener(ARCommandFollowMeModeInfoListener _ARCommandFollowMeModeInfoListener_PARAM) {
        this._ARCommandFollowMeModeInfoListener = _ARCommandFollowMeModeInfoListener_PARAM;
    }

    public void setFollowMeGeographicConfigListener(ARCommandFollowMeGeographicConfigListener _ARCommandFollowMeGeographicConfigListener_PARAM) {
        this._ARCommandFollowMeGeographicConfigListener = _ARCommandFollowMeGeographicConfigListener_PARAM;
    }

    public void setFollowMeRelativeConfigListener(ARCommandFollowMeRelativeConfigListener _ARCommandFollowMeRelativeConfigListener_PARAM) {
        this._ARCommandFollowMeRelativeConfigListener = _ARCommandFollowMeRelativeConfigListener_PARAM;
    }

    public void setFollowMeTargetTrajectoryListener(ARCommandFollowMeTargetTrajectoryListener _ARCommandFollowMeTargetTrajectoryListener_PARAM) {
        this._ARCommandFollowMeTargetTrajectoryListener = _ARCommandFollowMeTargetTrajectoryListener_PARAM;
    }

    public void setFollowMeHelicoidAnimConfigListener(ARCommandFollowMeHelicoidAnimConfigListener _ARCommandFollowMeHelicoidAnimConfigListener_PARAM) {
        this._ARCommandFollowMeHelicoidAnimConfigListener = _ARCommandFollowMeHelicoidAnimConfigListener_PARAM;
    }

    public void setFollowMeSwingAnimConfigListener(ARCommandFollowMeSwingAnimConfigListener _ARCommandFollowMeSwingAnimConfigListener_PARAM) {
        this._ARCommandFollowMeSwingAnimConfigListener = _ARCommandFollowMeSwingAnimConfigListener_PARAM;
    }

    public void setFollowMeBoomerangAnimConfigListener(ARCommandFollowMeBoomerangAnimConfigListener _ARCommandFollowMeBoomerangAnimConfigListener_PARAM) {
        this._ARCommandFollowMeBoomerangAnimConfigListener = _ARCommandFollowMeBoomerangAnimConfigListener_PARAM;
    }

    public void setFollowMeCandleAnimConfigListener(ARCommandFollowMeCandleAnimConfigListener _ARCommandFollowMeCandleAnimConfigListener_PARAM) {
        this._ARCommandFollowMeCandleAnimConfigListener = _ARCommandFollowMeCandleAnimConfigListener_PARAM;
    }

    public void setFollowMeDollySlideAnimConfigListener(ARCommandFollowMeDollySlideAnimConfigListener _ARCommandFollowMeDollySlideAnimConfigListener_PARAM) {
        this._ARCommandFollowMeDollySlideAnimConfigListener = _ARCommandFollowMeDollySlideAnimConfigListener_PARAM;
    }

    public void setFollowMeTargetFramingPositionChangedListener(ARCommandFollowMeTargetFramingPositionChangedListener _ARCommandFollowMeTargetFramingPositionChangedListener_PARAM) {
        this._ARCommandFollowMeTargetFramingPositionChangedListener = _ARCommandFollowMeTargetFramingPositionChangedListener_PARAM;
    }

    public void setFollowMeTargetImageDetectionStateListener(ARCommandFollowMeTargetImageDetectionStateListener _ARCommandFollowMeTargetImageDetectionStateListener_PARAM) {
        this._ARCommandFollowMeTargetImageDetectionStateListener = _ARCommandFollowMeTargetImageDetectionStateListener_PARAM;
    }

    public void setJumpingSumoPilotingPCMDListener(ARCommandJumpingSumoPilotingPCMDListener _ARCommandJumpingSumoPilotingPCMDListener_PARAM) {
        this._ARCommandJumpingSumoPilotingPCMDListener = _ARCommandJumpingSumoPilotingPCMDListener_PARAM;
    }

    public void setJumpingSumoPilotingPostureListener(ARCommandJumpingSumoPilotingPostureListener _ARCommandJumpingSumoPilotingPostureListener_PARAM) {
        this._ARCommandJumpingSumoPilotingPostureListener = _ARCommandJumpingSumoPilotingPostureListener_PARAM;
    }

    public void setJumpingSumoPilotingAddCapOffsetListener(ARCommandJumpingSumoPilotingAddCapOffsetListener _ARCommandJumpingSumoPilotingAddCapOffsetListener_PARAM) {
        this._ARCommandJumpingSumoPilotingAddCapOffsetListener = _ARCommandJumpingSumoPilotingAddCapOffsetListener_PARAM;
    }

    public void setJumpingSumoAnimationsJumpStopListener(ARCommandJumpingSumoAnimationsJumpStopListener _ARCommandJumpingSumoAnimationsJumpStopListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsJumpStopListener = _ARCommandJumpingSumoAnimationsJumpStopListener_PARAM;
    }

    public void setJumpingSumoAnimationsJumpCancelListener(ARCommandJumpingSumoAnimationsJumpCancelListener _ARCommandJumpingSumoAnimationsJumpCancelListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsJumpCancelListener = _ARCommandJumpingSumoAnimationsJumpCancelListener_PARAM;
    }

    public void setJumpingSumoAnimationsJumpLoadListener(ARCommandJumpingSumoAnimationsJumpLoadListener _ARCommandJumpingSumoAnimationsJumpLoadListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsJumpLoadListener = _ARCommandJumpingSumoAnimationsJumpLoadListener_PARAM;
    }

    public void setJumpingSumoAnimationsJumpListener(ARCommandJumpingSumoAnimationsJumpListener _ARCommandJumpingSumoAnimationsJumpListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsJumpListener = _ARCommandJumpingSumoAnimationsJumpListener_PARAM;
    }

    public void setJumpingSumoAnimationsSimpleAnimationListener(ARCommandJumpingSumoAnimationsSimpleAnimationListener _ARCommandJumpingSumoAnimationsSimpleAnimationListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsSimpleAnimationListener = _ARCommandJumpingSumoAnimationsSimpleAnimationListener_PARAM;
    }

    public void setJumpingSumoMediaRecordPictureListener(ARCommandJumpingSumoMediaRecordPictureListener _ARCommandJumpingSumoMediaRecordPictureListener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordPictureListener = _ARCommandJumpingSumoMediaRecordPictureListener_PARAM;
    }

    public void setJumpingSumoMediaRecordVideoListener(ARCommandJumpingSumoMediaRecordVideoListener _ARCommandJumpingSumoMediaRecordVideoListener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordVideoListener = _ARCommandJumpingSumoMediaRecordVideoListener_PARAM;
    }

    public void setJumpingSumoMediaRecordPictureV2Listener(ARCommandJumpingSumoMediaRecordPictureV2Listener _ARCommandJumpingSumoMediaRecordPictureV2Listener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordPictureV2Listener = _ARCommandJumpingSumoMediaRecordPictureV2Listener_PARAM;
    }

    public void setJumpingSumoMediaRecordVideoV2Listener(ARCommandJumpingSumoMediaRecordVideoV2Listener _ARCommandJumpingSumoMediaRecordVideoV2Listener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordVideoV2Listener = _ARCommandJumpingSumoMediaRecordVideoV2Listener_PARAM;
    }

    public void setJumpingSumoNetworkSettingsWifiSelectionListener(ARCommandJumpingSumoNetworkSettingsWifiSelectionListener _ARCommandJumpingSumoNetworkSettingsWifiSelectionListener_PARAM) {
        this._ARCommandJumpingSumoNetworkSettingsWifiSelectionListener = _ARCommandJumpingSumoNetworkSettingsWifiSelectionListener_PARAM;
    }

    public void setJumpingSumoNetworkWifiScanListener(ARCommandJumpingSumoNetworkWifiScanListener _ARCommandJumpingSumoNetworkWifiScanListener_PARAM) {
        this._ARCommandJumpingSumoNetworkWifiScanListener = _ARCommandJumpingSumoNetworkWifiScanListener_PARAM;
    }

    public void setJumpingSumoNetworkWifiAuthChannelListener(ARCommandJumpingSumoNetworkWifiAuthChannelListener _ARCommandJumpingSumoNetworkWifiAuthChannelListener_PARAM) {
        this._ARCommandJumpingSumoNetworkWifiAuthChannelListener = _ARCommandJumpingSumoNetworkWifiAuthChannelListener_PARAM;
    }

    public void setJumpingSumoAudioSettingsMasterVolumeListener(ARCommandJumpingSumoAudioSettingsMasterVolumeListener _ARCommandJumpingSumoAudioSettingsMasterVolumeListener_PARAM) {
        this._ARCommandJumpingSumoAudioSettingsMasterVolumeListener = _ARCommandJumpingSumoAudioSettingsMasterVolumeListener_PARAM;
    }

    public void setJumpingSumoAudioSettingsThemeListener(ARCommandJumpingSumoAudioSettingsThemeListener _ARCommandJumpingSumoAudioSettingsThemeListener_PARAM) {
        this._ARCommandJumpingSumoAudioSettingsThemeListener = _ARCommandJumpingSumoAudioSettingsThemeListener_PARAM;
    }

    public void setJumpingSumoRoadPlanAllScriptsMetadataListener(ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener _ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener = _ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener_PARAM;
    }

    public void setJumpingSumoRoadPlanScriptUploadedListener(ARCommandJumpingSumoRoadPlanScriptUploadedListener _ARCommandJumpingSumoRoadPlanScriptUploadedListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanScriptUploadedListener = _ARCommandJumpingSumoRoadPlanScriptUploadedListener_PARAM;
    }

    public void setJumpingSumoRoadPlanScriptDeleteListener(ARCommandJumpingSumoRoadPlanScriptDeleteListener _ARCommandJumpingSumoRoadPlanScriptDeleteListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanScriptDeleteListener = _ARCommandJumpingSumoRoadPlanScriptDeleteListener_PARAM;
    }

    public void setJumpingSumoRoadPlanPlayScriptListener(ARCommandJumpingSumoRoadPlanPlayScriptListener _ARCommandJumpingSumoRoadPlanPlayScriptListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanPlayScriptListener = _ARCommandJumpingSumoRoadPlanPlayScriptListener_PARAM;
    }

    public void setJumpingSumoSpeedSettingsOutdoorListener(ARCommandJumpingSumoSpeedSettingsOutdoorListener _ARCommandJumpingSumoSpeedSettingsOutdoorListener_PARAM) {
        this._ARCommandJumpingSumoSpeedSettingsOutdoorListener = _ARCommandJumpingSumoSpeedSettingsOutdoorListener_PARAM;
    }

    public void setJumpingSumoMediaStreamingVideoEnableListener(ARCommandJumpingSumoMediaStreamingVideoEnableListener _ARCommandJumpingSumoMediaStreamingVideoEnableListener_PARAM) {
        this._ARCommandJumpingSumoMediaStreamingVideoEnableListener = _ARCommandJumpingSumoMediaStreamingVideoEnableListener_PARAM;
    }

    public void setJumpingSumoVideoSettingsAutorecordListener(ARCommandJumpingSumoVideoSettingsAutorecordListener _ARCommandJumpingSumoVideoSettingsAutorecordListener_PARAM) {
        this._ARCommandJumpingSumoVideoSettingsAutorecordListener = _ARCommandJumpingSumoVideoSettingsAutorecordListener_PARAM;
    }

    public void setJumpingSumoPilotingStatePostureChangedListener(ARCommandJumpingSumoPilotingStatePostureChangedListener _ARCommandJumpingSumoPilotingStatePostureChangedListener_PARAM) {
        this._ARCommandJumpingSumoPilotingStatePostureChangedListener = _ARCommandJumpingSumoPilotingStatePostureChangedListener_PARAM;
    }

    public void setJumpingSumoPilotingStateAlertStateChangedListener(ARCommandJumpingSumoPilotingStateAlertStateChangedListener _ARCommandJumpingSumoPilotingStateAlertStateChangedListener_PARAM) {
        this._ARCommandJumpingSumoPilotingStateAlertStateChangedListener = _ARCommandJumpingSumoPilotingStateAlertStateChangedListener_PARAM;
    }

    public void setJumpingSumoPilotingStateSpeedChangedListener(ARCommandJumpingSumoPilotingStateSpeedChangedListener _ARCommandJumpingSumoPilotingStateSpeedChangedListener_PARAM) {
        this._ARCommandJumpingSumoPilotingStateSpeedChangedListener = _ARCommandJumpingSumoPilotingStateSpeedChangedListener_PARAM;
    }

    public void setJumpingSumoAnimationsStateJumpLoadChangedListener(ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener _ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener = _ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener_PARAM;
    }

    public void setJumpingSumoAnimationsStateJumpTypeChangedListener(ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener _ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener_PARAM) {
        this._ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener = _ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener_PARAM;
    }

    public void setJumpingSumoAnimationsStateJumpMotorProblemChangedListener(C1521x7c2fcfec _ARCommandJumpingSumoAnimationsStateJumpMotorProblemChangedListener_PARAM) {
        this.f944x8fcbc8b = _ARCommandJumpingSumoAnimationsStateJumpMotorProblemChangedListener_PARAM;
    }

    public void setJumpingSumoSettingsStateProductGPSVersionChangedListener(C1530x8955fd3b _ARCommandJumpingSumoSettingsStateProductGPSVersionChangedListener_PARAM) {
        this.f953xf0f980bc = _ARCommandJumpingSumoSettingsStateProductGPSVersionChangedListener_PARAM;
    }

    public void setJumpingSumoMediaRecordStatePictureStateChangedListener(ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener _ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener = _ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener_PARAM;
    }

    public void setJumpingSumoMediaRecordStateVideoStateChangedListener(ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener _ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener = _ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener_PARAM;
    }

    public void setJumpingSumoMediaRecordStatePictureStateChangedV2Listener(C1523x390b8c97 _ARCommandJumpingSumoMediaRecordStatePictureStateChangedV2Listener_PARAM) {
        this.f946xa0af1018 = _ARCommandJumpingSumoMediaRecordStatePictureStateChangedV2Listener_PARAM;
    }

    public void setJumpingSumoMediaRecordStateVideoStateChangedV2Listener(ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener _ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener = _ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener_PARAM;
    }

    public void setJumpingSumoMediaRecordEventPictureEventChangedListener(ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener _ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener = _ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener_PARAM;
    }

    public void setJumpingSumoMediaRecordEventVideoEventChangedListener(ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener _ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener_PARAM) {
        this._ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener = _ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener_PARAM;
    }

    public void setJumpingSumoNetworkSettingsStateWifiSelectionChangedListener(C1525x56533bcf _ARCommandJumpingSumoNetworkSettingsStateWifiSelectionChangedListener_PARAM) {
        this.f948xe3977cae = _ARCommandJumpingSumoNetworkSettingsStateWifiSelectionChangedListener_PARAM;
    }

    public void setJumpingSumoNetworkStateWifiScanListChangedListener(ARCommandJumpingSumoNetworkStateWifiScanListChangedListener _ARCommandJumpingSumoNetworkStateWifiScanListChangedListener_PARAM) {
        this._ARCommandJumpingSumoNetworkStateWifiScanListChangedListener = _ARCommandJumpingSumoNetworkStateWifiScanListChangedListener_PARAM;
    }

    public void setJumpingSumoNetworkStateAllWifiScanChangedListener(ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener _ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener_PARAM) {
        this._ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener = _ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener_PARAM;
    }

    public void setJumpingSumoNetworkStateWifiAuthChannelListChangedListener(C1527x71e11fa5 _ARCommandJumpingSumoNetworkStateWifiAuthChannelListChangedListener_PARAM) {
        this.f950xfeae0c44 = _ARCommandJumpingSumoNetworkStateWifiAuthChannelListChangedListener_PARAM;
    }

    public void setJumpingSumoNetworkStateAllWifiAuthChannelChangedListener(C1526x7a81b642 _ARCommandJumpingSumoNetworkStateAllWifiAuthChannelChangedListener_PARAM) {
        this.f949xe22539c3 = _ARCommandJumpingSumoNetworkStateAllWifiAuthChannelChangedListener_PARAM;
    }

    public void setJumpingSumoNetworkStateLinkQualityChangedListener(ARCommandJumpingSumoNetworkStateLinkQualityChangedListener _ARCommandJumpingSumoNetworkStateLinkQualityChangedListener_PARAM) {
        this._ARCommandJumpingSumoNetworkStateLinkQualityChangedListener = _ARCommandJumpingSumoNetworkStateLinkQualityChangedListener_PARAM;
    }

    public void setJumpingSumoAudioSettingsStateMasterVolumeChangedListener(C1522x83aa06f6 _ARCommandJumpingSumoAudioSettingsStateMasterVolumeChangedListener_PARAM) {
        this.f945xeb4d8a77 = _ARCommandJumpingSumoAudioSettingsStateMasterVolumeChangedListener_PARAM;
    }

    public void setJumpingSumoAudioSettingsStateThemeChangedListener(ARCommandJumpingSumoAudioSettingsStateThemeChangedListener _ARCommandJumpingSumoAudioSettingsStateThemeChangedListener_PARAM) {
        this._ARCommandJumpingSumoAudioSettingsStateThemeChangedListener = _ARCommandJumpingSumoAudioSettingsStateThemeChangedListener_PARAM;
    }

    public void setJumpingSumoRoadPlanStateScriptMetadataListChangedListener(C1529x3c747cc6 _ARCommandJumpingSumoRoadPlanStateScriptMetadataListChangedListener_PARAM) {
        this.f952xc9416965 = _ARCommandJumpingSumoRoadPlanStateScriptMetadataListChangedListener_PARAM;
    }

    public void setJumpingSumoRoadPlanStateAllScriptsMetadataChangedListener(C1528xdd328168 _ARCommandJumpingSumoRoadPlanStateAllScriptsMetadataChangedListener_PARAM) {
        this.f951x69ff6e07 = _ARCommandJumpingSumoRoadPlanStateAllScriptsMetadataChangedListener_PARAM;
    }

    public void setJumpingSumoRoadPlanStateScriptUploadChangedListener(ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener _ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener = _ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener_PARAM;
    }

    public void setJumpingSumoRoadPlanStateScriptDeleteChangedListener(ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener _ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener = _ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener_PARAM;
    }

    public void setJumpingSumoRoadPlanStatePlayScriptChangedListener(ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener _ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener_PARAM) {
        this._ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener = _ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener_PARAM;
    }

    public void setJumpingSumoSpeedSettingsStateOutdoorChangedListener(ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener _ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener_PARAM) {
        this._ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener = _ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener_PARAM;
    }

    public void setJumpingSumoMediaStreamingStateVideoEnableChangedListener(C1524x1975b2bf _ARCommandJumpingSumoMediaStreamingStateVideoEnableChangedListener_PARAM) {
        this.f947x81193640 = _ARCommandJumpingSumoMediaStreamingStateVideoEnableChangedListener_PARAM;
    }

    public void setJumpingSumoVideoSettingsStateAutorecordChangedListener(ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener _ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener_PARAM) {
        this._ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener = _ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener_PARAM;
    }

    public void setMapperGrabListener(ARCommandMapperGrabListener _ARCommandMapperGrabListener_PARAM) {
        this._ARCommandMapperGrabListener = _ARCommandMapperGrabListener_PARAM;
    }

    public void setMapperMapButtonActionListener(ARCommandMapperMapButtonActionListener _ARCommandMapperMapButtonActionListener_PARAM) {
        this._ARCommandMapperMapButtonActionListener = _ARCommandMapperMapButtonActionListener_PARAM;
    }

    public void setMapperMapAxisActionListener(ARCommandMapperMapAxisActionListener _ARCommandMapperMapAxisActionListener_PARAM) {
        this._ARCommandMapperMapAxisActionListener = _ARCommandMapperMapAxisActionListener_PARAM;
    }

    public void setMapperResetMappingListener(ARCommandMapperResetMappingListener _ARCommandMapperResetMappingListener_PARAM) {
        this._ARCommandMapperResetMappingListener = _ARCommandMapperResetMappingListener_PARAM;
    }

    public void setMapperSetExpoListener(ARCommandMapperSetExpoListener _ARCommandMapperSetExpoListener_PARAM) {
        this._ARCommandMapperSetExpoListener = _ARCommandMapperSetExpoListener_PARAM;
    }

    public void setMapperSetInvertedListener(ARCommandMapperSetInvertedListener _ARCommandMapperSetInvertedListener_PARAM) {
        this._ARCommandMapperSetInvertedListener = _ARCommandMapperSetInvertedListener_PARAM;
    }

    public void setMapperGrabStateListener(ARCommandMapperGrabStateListener _ARCommandMapperGrabStateListener_PARAM) {
        this._ARCommandMapperGrabStateListener = _ARCommandMapperGrabStateListener_PARAM;
    }

    public void setMapperGrabButtonEventListener(ARCommandMapperGrabButtonEventListener _ARCommandMapperGrabButtonEventListener_PARAM) {
        this._ARCommandMapperGrabButtonEventListener = _ARCommandMapperGrabButtonEventListener_PARAM;
    }

    public void setMapperGrabAxisEventListener(ARCommandMapperGrabAxisEventListener _ARCommandMapperGrabAxisEventListener_PARAM) {
        this._ARCommandMapperGrabAxisEventListener = _ARCommandMapperGrabAxisEventListener_PARAM;
    }

    public void setMapperButtonMappingItemListener(ARCommandMapperButtonMappingItemListener _ARCommandMapperButtonMappingItemListener_PARAM) {
        this._ARCommandMapperButtonMappingItemListener = _ARCommandMapperButtonMappingItemListener_PARAM;
    }

    public void setMapperAxisMappingItemListener(ARCommandMapperAxisMappingItemListener _ARCommandMapperAxisMappingItemListener_PARAM) {
        this._ARCommandMapperAxisMappingItemListener = _ARCommandMapperAxisMappingItemListener_PARAM;
    }

    public void setMapperApplicationAxisEventListener(ARCommandMapperApplicationAxisEventListener _ARCommandMapperApplicationAxisEventListener_PARAM) {
        this._ARCommandMapperApplicationAxisEventListener = _ARCommandMapperApplicationAxisEventListener_PARAM;
    }

    public void setMapperApplicationButtonEventListener(ARCommandMapperApplicationButtonEventListener _ARCommandMapperApplicationButtonEventListener_PARAM) {
        this._ARCommandMapperApplicationButtonEventListener = _ARCommandMapperApplicationButtonEventListener_PARAM;
    }

    public void setMapperExpoMapItemListener(ARCommandMapperExpoMapItemListener _ARCommandMapperExpoMapItemListener_PARAM) {
        this._ARCommandMapperExpoMapItemListener = _ARCommandMapperExpoMapItemListener_PARAM;
    }

    public void setMapperInvertedMapItemListener(ARCommandMapperInvertedMapItemListener _ARCommandMapperInvertedMapItemListener_PARAM) {
        this._ARCommandMapperInvertedMapItemListener = _ARCommandMapperInvertedMapItemListener_PARAM;
    }

    public void setMapperActiveProductListener(ARCommandMapperActiveProductListener _ARCommandMapperActiveProductListener_PARAM) {
        this._ARCommandMapperActiveProductListener = _ARCommandMapperActiveProductListener_PARAM;
    }

    public void setMapperMiniMapButtonActionListener(ARCommandMapperMiniMapButtonActionListener _ARCommandMapperMiniMapButtonActionListener_PARAM) {
        this._ARCommandMapperMiniMapButtonActionListener = _ARCommandMapperMiniMapButtonActionListener_PARAM;
    }

    public void setMapperMiniMapAxisActionListener(ARCommandMapperMiniMapAxisActionListener _ARCommandMapperMiniMapAxisActionListener_PARAM) {
        this._ARCommandMapperMiniMapAxisActionListener = _ARCommandMapperMiniMapAxisActionListener_PARAM;
    }

    public void setMapperMiniResetMappingListener(ARCommandMapperMiniResetMappingListener _ARCommandMapperMiniResetMappingListener_PARAM) {
        this._ARCommandMapperMiniResetMappingListener = _ARCommandMapperMiniResetMappingListener_PARAM;
    }

    public void setMapperMiniButtonMappingItemListener(ARCommandMapperMiniButtonMappingItemListener _ARCommandMapperMiniButtonMappingItemListener_PARAM) {
        this._ARCommandMapperMiniButtonMappingItemListener = _ARCommandMapperMiniButtonMappingItemListener_PARAM;
    }

    public void setMapperMiniAxisMappingItemListener(ARCommandMapperMiniAxisMappingItemListener _ARCommandMapperMiniAxisMappingItemListener_PARAM) {
        this._ARCommandMapperMiniAxisMappingItemListener = _ARCommandMapperMiniAxisMappingItemListener_PARAM;
    }

    public void setMiniDronePilotingFlatTrimListener(ARCommandMiniDronePilotingFlatTrimListener _ARCommandMiniDronePilotingFlatTrimListener_PARAM) {
        this._ARCommandMiniDronePilotingFlatTrimListener = _ARCommandMiniDronePilotingFlatTrimListener_PARAM;
    }

    public void setMiniDronePilotingTakeOffListener(ARCommandMiniDronePilotingTakeOffListener _ARCommandMiniDronePilotingTakeOffListener_PARAM) {
        this._ARCommandMiniDronePilotingTakeOffListener = _ARCommandMiniDronePilotingTakeOffListener_PARAM;
    }

    public void setMiniDronePilotingPCMDListener(ARCommandMiniDronePilotingPCMDListener _ARCommandMiniDronePilotingPCMDListener_PARAM) {
        this._ARCommandMiniDronePilotingPCMDListener = _ARCommandMiniDronePilotingPCMDListener_PARAM;
    }

    public void setMiniDronePilotingLandingListener(ARCommandMiniDronePilotingLandingListener _ARCommandMiniDronePilotingLandingListener_PARAM) {
        this._ARCommandMiniDronePilotingLandingListener = _ARCommandMiniDronePilotingLandingListener_PARAM;
    }

    public void setMiniDronePilotingEmergencyListener(ARCommandMiniDronePilotingEmergencyListener _ARCommandMiniDronePilotingEmergencyListener_PARAM) {
        this._ARCommandMiniDronePilotingEmergencyListener = _ARCommandMiniDronePilotingEmergencyListener_PARAM;
    }

    public void setMiniDronePilotingAutoTakeOffModeListener(ARCommandMiniDronePilotingAutoTakeOffModeListener _ARCommandMiniDronePilotingAutoTakeOffModeListener_PARAM) {
        this._ARCommandMiniDronePilotingAutoTakeOffModeListener = _ARCommandMiniDronePilotingAutoTakeOffModeListener_PARAM;
    }

    public void setMiniDronePilotingFlyingModeListener(ARCommandMiniDronePilotingFlyingModeListener _ARCommandMiniDronePilotingFlyingModeListener_PARAM) {
        this._ARCommandMiniDronePilotingFlyingModeListener = _ARCommandMiniDronePilotingFlyingModeListener_PARAM;
    }

    public void setMiniDronePilotingPlaneGearBoxListener(ARCommandMiniDronePilotingPlaneGearBoxListener _ARCommandMiniDronePilotingPlaneGearBoxListener_PARAM) {
        this._ARCommandMiniDronePilotingPlaneGearBoxListener = _ARCommandMiniDronePilotingPlaneGearBoxListener_PARAM;
    }

    public void setMiniDroneAnimationsFlipListener(ARCommandMiniDroneAnimationsFlipListener _ARCommandMiniDroneAnimationsFlipListener_PARAM) {
        this._ARCommandMiniDroneAnimationsFlipListener = _ARCommandMiniDroneAnimationsFlipListener_PARAM;
    }

    public void setMiniDroneAnimationsCapListener(ARCommandMiniDroneAnimationsCapListener _ARCommandMiniDroneAnimationsCapListener_PARAM) {
        this._ARCommandMiniDroneAnimationsCapListener = _ARCommandMiniDroneAnimationsCapListener_PARAM;
    }

    public void setMiniDroneMediaRecordPictureListener(ARCommandMiniDroneMediaRecordPictureListener _ARCommandMiniDroneMediaRecordPictureListener_PARAM) {
        this._ARCommandMiniDroneMediaRecordPictureListener = _ARCommandMiniDroneMediaRecordPictureListener_PARAM;
    }

    public void setMiniDroneMediaRecordPictureV2Listener(ARCommandMiniDroneMediaRecordPictureV2Listener _ARCommandMiniDroneMediaRecordPictureV2Listener_PARAM) {
        this._ARCommandMiniDroneMediaRecordPictureV2Listener = _ARCommandMiniDroneMediaRecordPictureV2Listener_PARAM;
    }

    public void setMiniDronePilotingSettingsMaxAltitudeListener(ARCommandMiniDronePilotingSettingsMaxAltitudeListener _ARCommandMiniDronePilotingSettingsMaxAltitudeListener_PARAM) {
        this._ARCommandMiniDronePilotingSettingsMaxAltitudeListener = _ARCommandMiniDronePilotingSettingsMaxAltitudeListener_PARAM;
    }

    public void setMiniDronePilotingSettingsMaxTiltListener(ARCommandMiniDronePilotingSettingsMaxTiltListener _ARCommandMiniDronePilotingSettingsMaxTiltListener_PARAM) {
        this._ARCommandMiniDronePilotingSettingsMaxTiltListener = _ARCommandMiniDronePilotingSettingsMaxTiltListener_PARAM;
    }

    public void setMiniDronePilotingSettingsBankedTurnListener(ARCommandMiniDronePilotingSettingsBankedTurnListener _ARCommandMiniDronePilotingSettingsBankedTurnListener_PARAM) {
        this._ARCommandMiniDronePilotingSettingsBankedTurnListener = _ARCommandMiniDronePilotingSettingsBankedTurnListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsMaxVerticalSpeedListener(ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener _ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener_PARAM) {
        this._ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener = _ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsMaxRotationSpeedListener(ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener _ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener_PARAM) {
        this._ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener = _ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsWheelsListener(ARCommandMiniDroneSpeedSettingsWheelsListener _ARCommandMiniDroneSpeedSettingsWheelsListener_PARAM) {
        this._ARCommandMiniDroneSpeedSettingsWheelsListener = _ARCommandMiniDroneSpeedSettingsWheelsListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsMaxHorizontalSpeedListener(ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener _ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener_PARAM) {
        this._ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener = _ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedListener(ARCommandMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedListener _ARCommandMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedListener_PARAM) {
        this.f958x58cb30fe = _ARCommandMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedListener_PARAM;
    }

    public void setMiniDroneSettingsCutOutModeListener(ARCommandMiniDroneSettingsCutOutModeListener _ARCommandMiniDroneSettingsCutOutModeListener_PARAM) {
        this._ARCommandMiniDroneSettingsCutOutModeListener = _ARCommandMiniDroneSettingsCutOutModeListener_PARAM;
    }

    public void setMiniDroneGPSControllerLatitudeForRunListener(ARCommandMiniDroneGPSControllerLatitudeForRunListener _ARCommandMiniDroneGPSControllerLatitudeForRunListener_PARAM) {
        this._ARCommandMiniDroneGPSControllerLatitudeForRunListener = _ARCommandMiniDroneGPSControllerLatitudeForRunListener_PARAM;
    }

    public void setMiniDroneGPSControllerLongitudeForRunListener(ARCommandMiniDroneGPSControllerLongitudeForRunListener _ARCommandMiniDroneGPSControllerLongitudeForRunListener_PARAM) {
        this._ARCommandMiniDroneGPSControllerLongitudeForRunListener = _ARCommandMiniDroneGPSControllerLongitudeForRunListener_PARAM;
    }

    public void setMiniDroneConfigurationControllerTypeListener(ARCommandMiniDroneConfigurationControllerTypeListener _ARCommandMiniDroneConfigurationControllerTypeListener_PARAM) {
        this._ARCommandMiniDroneConfigurationControllerTypeListener = _ARCommandMiniDroneConfigurationControllerTypeListener_PARAM;
    }

    public void setMiniDroneConfigurationControllerNameListener(ARCommandMiniDroneConfigurationControllerNameListener _ARCommandMiniDroneConfigurationControllerNameListener_PARAM) {
        this._ARCommandMiniDroneConfigurationControllerNameListener = _ARCommandMiniDroneConfigurationControllerNameListener_PARAM;
    }

    public void setMiniDroneUsbAccessoryLightControlListener(ARCommandMiniDroneUsbAccessoryLightControlListener _ARCommandMiniDroneUsbAccessoryLightControlListener_PARAM) {
        this._ARCommandMiniDroneUsbAccessoryLightControlListener = _ARCommandMiniDroneUsbAccessoryLightControlListener_PARAM;
    }

    public void setMiniDroneUsbAccessoryClawControlListener(ARCommandMiniDroneUsbAccessoryClawControlListener _ARCommandMiniDroneUsbAccessoryClawControlListener_PARAM) {
        this._ARCommandMiniDroneUsbAccessoryClawControlListener = _ARCommandMiniDroneUsbAccessoryClawControlListener_PARAM;
    }

    public void setMiniDroneUsbAccessoryGunControlListener(ARCommandMiniDroneUsbAccessoryGunControlListener _ARCommandMiniDroneUsbAccessoryGunControlListener_PARAM) {
        this._ARCommandMiniDroneUsbAccessoryGunControlListener = _ARCommandMiniDroneUsbAccessoryGunControlListener_PARAM;
    }

    public void setMiniDroneRemoteControllerSetPairedRemoteListener(ARCommandMiniDroneRemoteControllerSetPairedRemoteListener _ARCommandMiniDroneRemoteControllerSetPairedRemoteListener_PARAM) {
        this._ARCommandMiniDroneRemoteControllerSetPairedRemoteListener = _ARCommandMiniDroneRemoteControllerSetPairedRemoteListener_PARAM;
    }

    public void setMiniDronePilotingStateFlatTrimChangedListener(ARCommandMiniDronePilotingStateFlatTrimChangedListener _ARCommandMiniDronePilotingStateFlatTrimChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingStateFlatTrimChangedListener = _ARCommandMiniDronePilotingStateFlatTrimChangedListener_PARAM;
    }

    public void setMiniDronePilotingStateFlyingStateChangedListener(ARCommandMiniDronePilotingStateFlyingStateChangedListener _ARCommandMiniDronePilotingStateFlyingStateChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingStateFlyingStateChangedListener = _ARCommandMiniDronePilotingStateFlyingStateChangedListener_PARAM;
    }

    public void setMiniDronePilotingStateAlertStateChangedListener(ARCommandMiniDronePilotingStateAlertStateChangedListener _ARCommandMiniDronePilotingStateAlertStateChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingStateAlertStateChangedListener = _ARCommandMiniDronePilotingStateAlertStateChangedListener_PARAM;
    }

    public void setMiniDronePilotingStateAutoTakeOffModeChangedListener(ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener _ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener = _ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener_PARAM;
    }

    public void setMiniDronePilotingStateFlyingModeChangedListener(ARCommandMiniDronePilotingStateFlyingModeChangedListener _ARCommandMiniDronePilotingStateFlyingModeChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingStateFlyingModeChangedListener = _ARCommandMiniDronePilotingStateFlyingModeChangedListener_PARAM;
    }

    public void setMiniDronePilotingStatePlaneGearBoxChangedListener(ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener _ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener = _ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener_PARAM;
    }

    public void setMiniDroneMediaRecordStatePictureStateChangedListener(ARCommandMiniDroneMediaRecordStatePictureStateChangedListener _ARCommandMiniDroneMediaRecordStatePictureStateChangedListener_PARAM) {
        this._ARCommandMiniDroneMediaRecordStatePictureStateChangedListener = _ARCommandMiniDroneMediaRecordStatePictureStateChangedListener_PARAM;
    }

    public void setMiniDroneMediaRecordStatePictureStateChangedV2Listener(ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener _ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener_PARAM) {
        this._ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener = _ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener_PARAM;
    }

    public void setMiniDroneMediaRecordEventPictureEventChangedListener(ARCommandMiniDroneMediaRecordEventPictureEventChangedListener _ARCommandMiniDroneMediaRecordEventPictureEventChangedListener_PARAM) {
        this._ARCommandMiniDroneMediaRecordEventPictureEventChangedListener = _ARCommandMiniDroneMediaRecordEventPictureEventChangedListener_PARAM;
    }

    public void setMiniDronePilotingSettingsStateMaxAltitudeChangedListener(C1531xc19b3e7f _ARCommandMiniDronePilotingSettingsStateMaxAltitudeChangedListener_PARAM) {
        this.f955x293ec200 = _ARCommandMiniDronePilotingSettingsStateMaxAltitudeChangedListener_PARAM;
    }

    public void setMiniDronePilotingSettingsStateMaxTiltChangedListener(ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener _ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener_PARAM) {
        this._ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener = _ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener_PARAM;
    }

    public void setMiniDronePilotingSettingsStateBankedTurnChangedListener(ARCommandMiniDronePilotingSettingsStateBankedTurnChangedListener _ARCommandMiniDronePilotingSettingsStateBankedTurnChangedListener_PARAM) {
        this.f954x647c6232 = _ARCommandMiniDronePilotingSettingsStateBankedTurnChangedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsStateMaxVerticalSpeedChangedListener(C1537x7d4ee4ad _ARCommandMiniDroneSpeedSettingsStateMaxVerticalSpeedChangedListener_PARAM) {
        this.f962x8a1f8bee = _ARCommandMiniDroneSpeedSettingsStateMaxVerticalSpeedChangedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsStateMaxRotationSpeedChangedListener(C1536x310f38b5 _ARCommandMiniDroneSpeedSettingsStateMaxRotationSpeedChangedListener_PARAM) {
        this.f961x3ddfdff6 = _ARCommandMiniDroneSpeedSettingsStateMaxRotationSpeedChangedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsStateWheelsChangedListener(ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener _ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener_PARAM) {
        this._ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener = _ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener_PARAM;
    }

    public void setMiniDroneSpeedSettingsStateMaxHorizontalSpeedChangedListener(C1534x2b3248db _ARCommandMiniDroneSpeedSettingsStateMaxHorizontalSpeedChangedListener_PARAM) {
        this.f959x467623dc = _ARCommandMiniDroneSpeedSettingsStateMaxHorizontalSpeedChangedListener_PARAM;
    }

    /* renamed from: setMiniDroneSpeedSettingsStateMaxPlaneModeRotationSpeedChangedListener */
    public void m79xb8cf7000(C1535x30d7d388 _ARCommandMiniDroneSpeedSettingsStateMaxPlaneModeRotationSpeedChangedListener_PARAM) {
        this.f960x7d78c567 = _ARCommandMiniDroneSpeedSettingsStateMaxPlaneModeRotationSpeedChangedListener_PARAM;
    }

    public void setMiniDroneSettingsStateProductMotorsVersionChangedListener(C1533xd43a29b6 _ARCommandMiniDroneSettingsStateProductMotorsVersionChangedListener_PARAM) {
        this.f957x61071655 = _ARCommandMiniDroneSettingsStateProductMotorsVersionChangedListener_PARAM;
    }

    public void setMiniDroneSettingsStateProductInertialVersionChangedListener(C1532x9a315f0a _ARCommandMiniDroneSettingsStateProductInertialVersionChangedListener_PARAM) {
        this.f956x27759fe9 = _ARCommandMiniDroneSettingsStateProductInertialVersionChangedListener_PARAM;
    }

    public void setMiniDroneSettingsStateCutOutModeChangedListener(ARCommandMiniDroneSettingsStateCutOutModeChangedListener _ARCommandMiniDroneSettingsStateCutOutModeChangedListener_PARAM) {
        this._ARCommandMiniDroneSettingsStateCutOutModeChangedListener = _ARCommandMiniDroneSettingsStateCutOutModeChangedListener_PARAM;
    }

    public void setMiniDroneFloodControlStateFloodControlChangedListener(ARCommandMiniDroneFloodControlStateFloodControlChangedListener _ARCommandMiniDroneFloodControlStateFloodControlChangedListener_PARAM) {
        this._ARCommandMiniDroneFloodControlStateFloodControlChangedListener = _ARCommandMiniDroneFloodControlStateFloodControlChangedListener_PARAM;
    }

    public void setMiniDroneUsbAccessoryStateLightStateListener(ARCommandMiniDroneUsbAccessoryStateLightStateListener _ARCommandMiniDroneUsbAccessoryStateLightStateListener_PARAM) {
        this._ARCommandMiniDroneUsbAccessoryStateLightStateListener = _ARCommandMiniDroneUsbAccessoryStateLightStateListener_PARAM;
    }

    public void setMiniDroneUsbAccessoryStateClawStateListener(ARCommandMiniDroneUsbAccessoryStateClawStateListener _ARCommandMiniDroneUsbAccessoryStateClawStateListener_PARAM) {
        this._ARCommandMiniDroneUsbAccessoryStateClawStateListener = _ARCommandMiniDroneUsbAccessoryStateClawStateListener_PARAM;
    }

    public void setMiniDroneUsbAccessoryStateGunStateListener(ARCommandMiniDroneUsbAccessoryStateGunStateListener _ARCommandMiniDroneUsbAccessoryStateGunStateListener_PARAM) {
        this._ARCommandMiniDroneUsbAccessoryStateGunStateListener = _ARCommandMiniDroneUsbAccessoryStateGunStateListener_PARAM;
    }

    public void setMiniDroneNavigationDataStateDronePositionListener(ARCommandMiniDroneNavigationDataStateDronePositionListener _ARCommandMiniDroneNavigationDataStateDronePositionListener_PARAM) {
        this._ARCommandMiniDroneNavigationDataStateDronePositionListener = _ARCommandMiniDroneNavigationDataStateDronePositionListener_PARAM;
    }

    public void setPowerupPilotingPCMDListener(ARCommandPowerupPilotingPCMDListener _ARCommandPowerupPilotingPCMDListener_PARAM) {
        this._ARCommandPowerupPilotingPCMDListener = _ARCommandPowerupPilotingPCMDListener_PARAM;
    }

    public void setPowerupPilotingUserTakeOffListener(ARCommandPowerupPilotingUserTakeOffListener _ARCommandPowerupPilotingUserTakeOffListener_PARAM) {
        this._ARCommandPowerupPilotingUserTakeOffListener = _ARCommandPowerupPilotingUserTakeOffListener_PARAM;
    }

    public void setPowerupPilotingMotorModeListener(ARCommandPowerupPilotingMotorModeListener _ARCommandPowerupPilotingMotorModeListener_PARAM) {
        this._ARCommandPowerupPilotingMotorModeListener = _ARCommandPowerupPilotingMotorModeListener_PARAM;
    }

    public void setPowerupPilotingSettingsSetListener(ARCommandPowerupPilotingSettingsSetListener _ARCommandPowerupPilotingSettingsSetListener_PARAM) {
        this._ARCommandPowerupPilotingSettingsSetListener = _ARCommandPowerupPilotingSettingsSetListener_PARAM;
    }

    public void setPowerupMediaRecordPictureV2Listener(ARCommandPowerupMediaRecordPictureV2Listener _ARCommandPowerupMediaRecordPictureV2Listener_PARAM) {
        this._ARCommandPowerupMediaRecordPictureV2Listener = _ARCommandPowerupMediaRecordPictureV2Listener_PARAM;
    }

    public void setPowerupMediaRecordVideoV2Listener(ARCommandPowerupMediaRecordVideoV2Listener _ARCommandPowerupMediaRecordVideoV2Listener_PARAM) {
        this._ARCommandPowerupMediaRecordVideoV2Listener = _ARCommandPowerupMediaRecordVideoV2Listener_PARAM;
    }

    public void setPowerupNetworkSettingsWifiSelectionListener(ARCommandPowerupNetworkSettingsWifiSelectionListener _ARCommandPowerupNetworkSettingsWifiSelectionListener_PARAM) {
        this._ARCommandPowerupNetworkSettingsWifiSelectionListener = _ARCommandPowerupNetworkSettingsWifiSelectionListener_PARAM;
    }

    public void setPowerupNetworkWifiScanListener(ARCommandPowerupNetworkWifiScanListener _ARCommandPowerupNetworkWifiScanListener_PARAM) {
        this._ARCommandPowerupNetworkWifiScanListener = _ARCommandPowerupNetworkWifiScanListener_PARAM;
    }

    public void setPowerupNetworkWifiAuthChannelListener(ARCommandPowerupNetworkWifiAuthChannelListener _ARCommandPowerupNetworkWifiAuthChannelListener_PARAM) {
        this._ARCommandPowerupNetworkWifiAuthChannelListener = _ARCommandPowerupNetworkWifiAuthChannelListener_PARAM;
    }

    public void setPowerupMediaStreamingVideoEnableListener(ARCommandPowerupMediaStreamingVideoEnableListener _ARCommandPowerupMediaStreamingVideoEnableListener_PARAM) {
        this._ARCommandPowerupMediaStreamingVideoEnableListener = _ARCommandPowerupMediaStreamingVideoEnableListener_PARAM;
    }

    public void setPowerupVideoSettingsAutorecordListener(ARCommandPowerupVideoSettingsAutorecordListener _ARCommandPowerupVideoSettingsAutorecordListener_PARAM) {
        this._ARCommandPowerupVideoSettingsAutorecordListener = _ARCommandPowerupVideoSettingsAutorecordListener_PARAM;
    }

    public void setPowerupVideoSettingsVideoModeListener(ARCommandPowerupVideoSettingsVideoModeListener _ARCommandPowerupVideoSettingsVideoModeListener_PARAM) {
        this._ARCommandPowerupVideoSettingsVideoModeListener = _ARCommandPowerupVideoSettingsVideoModeListener_PARAM;
    }

    public void setPowerupSoundsBuzzListener(ARCommandPowerupSoundsBuzzListener _ARCommandPowerupSoundsBuzzListener_PARAM) {
        this._ARCommandPowerupSoundsBuzzListener = _ARCommandPowerupSoundsBuzzListener_PARAM;
    }

    public void setPowerupPilotingStateAlertStateChangedListener(ARCommandPowerupPilotingStateAlertStateChangedListener _ARCommandPowerupPilotingStateAlertStateChangedListener_PARAM) {
        this._ARCommandPowerupPilotingStateAlertStateChangedListener = _ARCommandPowerupPilotingStateAlertStateChangedListener_PARAM;
    }

    public void setPowerupPilotingStateFlyingStateChangedListener(ARCommandPowerupPilotingStateFlyingStateChangedListener _ARCommandPowerupPilotingStateFlyingStateChangedListener_PARAM) {
        this._ARCommandPowerupPilotingStateFlyingStateChangedListener = _ARCommandPowerupPilotingStateFlyingStateChangedListener_PARAM;
    }

    public void setPowerupPilotingStateMotorModeChangedListener(ARCommandPowerupPilotingStateMotorModeChangedListener _ARCommandPowerupPilotingStateMotorModeChangedListener_PARAM) {
        this._ARCommandPowerupPilotingStateMotorModeChangedListener = _ARCommandPowerupPilotingStateMotorModeChangedListener_PARAM;
    }

    public void setPowerupPilotingStateAttitudeChangedListener(ARCommandPowerupPilotingStateAttitudeChangedListener _ARCommandPowerupPilotingStateAttitudeChangedListener_PARAM) {
        this._ARCommandPowerupPilotingStateAttitudeChangedListener = _ARCommandPowerupPilotingStateAttitudeChangedListener_PARAM;
    }

    public void setPowerupPilotingStateAltitudeChangedListener(ARCommandPowerupPilotingStateAltitudeChangedListener _ARCommandPowerupPilotingStateAltitudeChangedListener_PARAM) {
        this._ARCommandPowerupPilotingStateAltitudeChangedListener = _ARCommandPowerupPilotingStateAltitudeChangedListener_PARAM;
    }

    public void setPowerupPilotingSettingsStateSettingChangedListener(ARCommandPowerupPilotingSettingsStateSettingChangedListener _ARCommandPowerupPilotingSettingsStateSettingChangedListener_PARAM) {
        this._ARCommandPowerupPilotingSettingsStateSettingChangedListener = _ARCommandPowerupPilotingSettingsStateSettingChangedListener_PARAM;
    }

    public void setPowerupMediaRecordStatePictureStateChangedV2Listener(ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener _ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener_PARAM) {
        this._ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener = _ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener_PARAM;
    }

    public void setPowerupMediaRecordStateVideoStateChangedV2Listener(ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener _ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener_PARAM) {
        this._ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener = _ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener_PARAM;
    }

    public void setPowerupMediaRecordEventPictureEventChangedListener(ARCommandPowerupMediaRecordEventPictureEventChangedListener _ARCommandPowerupMediaRecordEventPictureEventChangedListener_PARAM) {
        this._ARCommandPowerupMediaRecordEventPictureEventChangedListener = _ARCommandPowerupMediaRecordEventPictureEventChangedListener_PARAM;
    }

    public void setPowerupMediaRecordEventVideoEventChangedListener(ARCommandPowerupMediaRecordEventVideoEventChangedListener _ARCommandPowerupMediaRecordEventVideoEventChangedListener_PARAM) {
        this._ARCommandPowerupMediaRecordEventVideoEventChangedListener = _ARCommandPowerupMediaRecordEventVideoEventChangedListener_PARAM;
    }

    public void setPowerupNetworkSettingsStateWifiSelectionChangedListener(ARCommandPowerupNetworkSettingsStateWifiSelectionChangedListener _ARCommandPowerupNetworkSettingsStateWifiSelectionChangedListener_PARAM) {
        this.f963xf9d35ef6 = _ARCommandPowerupNetworkSettingsStateWifiSelectionChangedListener_PARAM;
    }

    public void setPowerupNetworkStateWifiScanListChangedListener(ARCommandPowerupNetworkStateWifiScanListChangedListener _ARCommandPowerupNetworkStateWifiScanListChangedListener_PARAM) {
        this._ARCommandPowerupNetworkStateWifiScanListChangedListener = _ARCommandPowerupNetworkStateWifiScanListChangedListener_PARAM;
    }

    public void setPowerupNetworkStateAllWifiScanChangedListener(ARCommandPowerupNetworkStateAllWifiScanChangedListener _ARCommandPowerupNetworkStateAllWifiScanChangedListener_PARAM) {
        this._ARCommandPowerupNetworkStateAllWifiScanChangedListener = _ARCommandPowerupNetworkStateAllWifiScanChangedListener_PARAM;
    }

    public void setPowerupNetworkStateWifiAuthChannelListChangedListener(ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener _ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener_PARAM) {
        this._ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener = _ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener_PARAM;
    }

    public void setPowerupNetworkStateAllWifiAuthChannelChangedListener(ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener _ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener_PARAM) {
        this._ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener = _ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener_PARAM;
    }

    public void setPowerupNetworkStateLinkQualityChangedListener(ARCommandPowerupNetworkStateLinkQualityChangedListener _ARCommandPowerupNetworkStateLinkQualityChangedListener_PARAM) {
        this._ARCommandPowerupNetworkStateLinkQualityChangedListener = _ARCommandPowerupNetworkStateLinkQualityChangedListener_PARAM;
    }

    public void setPowerupMediaStreamingStateVideoEnableChangedListener(ARCommandPowerupMediaStreamingStateVideoEnableChangedListener _ARCommandPowerupMediaStreamingStateVideoEnableChangedListener_PARAM) {
        this._ARCommandPowerupMediaStreamingStateVideoEnableChangedListener = _ARCommandPowerupMediaStreamingStateVideoEnableChangedListener_PARAM;
    }

    public void setPowerupVideoSettingsStateAutorecordChangedListener(ARCommandPowerupVideoSettingsStateAutorecordChangedListener _ARCommandPowerupVideoSettingsStateAutorecordChangedListener_PARAM) {
        this._ARCommandPowerupVideoSettingsStateAutorecordChangedListener = _ARCommandPowerupVideoSettingsStateAutorecordChangedListener_PARAM;
    }

    public void setPowerupVideoSettingsStateVideoModeChangedListener(ARCommandPowerupVideoSettingsStateVideoModeChangedListener _ARCommandPowerupVideoSettingsStateVideoModeChangedListener_PARAM) {
        this._ARCommandPowerupVideoSettingsStateVideoModeChangedListener = _ARCommandPowerupVideoSettingsStateVideoModeChangedListener_PARAM;
    }

    public void setPowerupSoundsStateBuzzChangedListener(ARCommandPowerupSoundsStateBuzzChangedListener _ARCommandPowerupSoundsStateBuzzChangedListener_PARAM) {
        this._ARCommandPowerupSoundsStateBuzzChangedListener = _ARCommandPowerupSoundsStateBuzzChangedListener_PARAM;
    }

    public void setRcMonitorChannelsListener(ARCommandRcMonitorChannelsListener _ARCommandRcMonitorChannelsListener_PARAM) {
        this._ARCommandRcMonitorChannelsListener = _ARCommandRcMonitorChannelsListener_PARAM;
    }

    public void setRcStartCalibrationListener(ARCommandRcStartCalibrationListener _ARCommandRcStartCalibrationListener_PARAM) {
        this._ARCommandRcStartCalibrationListener = _ARCommandRcStartCalibrationListener_PARAM;
    }

    public void setRcInvertChannelListener(ARCommandRcInvertChannelListener _ARCommandRcInvertChannelListener_PARAM) {
        this._ARCommandRcInvertChannelListener = _ARCommandRcInvertChannelListener_PARAM;
    }

    public void setRcAbortCalibrationListener(ARCommandRcAbortCalibrationListener _ARCommandRcAbortCalibrationListener_PARAM) {
        this._ARCommandRcAbortCalibrationListener = _ARCommandRcAbortCalibrationListener_PARAM;
    }

    public void setRcResetCalibrationListener(ARCommandRcResetCalibrationListener _ARCommandRcResetCalibrationListener_PARAM) {
        this._ARCommandRcResetCalibrationListener = _ARCommandRcResetCalibrationListener_PARAM;
    }

    public void setRcEnableReceiverListener(ARCommandRcEnableReceiverListener _ARCommandRcEnableReceiverListener_PARAM) {
        this._ARCommandRcEnableReceiverListener = _ARCommandRcEnableReceiverListener_PARAM;
    }

    public void setRcReceiverStateListener(ARCommandRcReceiverStateListener _ARCommandRcReceiverStateListener_PARAM) {
        this._ARCommandRcReceiverStateListener = _ARCommandRcReceiverStateListener_PARAM;
    }

    public void setRcChannelsMonitorStateListener(ARCommandRcChannelsMonitorStateListener _ARCommandRcChannelsMonitorStateListener_PARAM) {
        this._ARCommandRcChannelsMonitorStateListener = _ARCommandRcChannelsMonitorStateListener_PARAM;
    }

    public void setRcChannelValueListener(ARCommandRcChannelValueListener _ARCommandRcChannelValueListener_PARAM) {
        this._ARCommandRcChannelValueListener = _ARCommandRcChannelValueListener_PARAM;
    }

    public void setRcCalibrationStateListener(ARCommandRcCalibrationStateListener _ARCommandRcCalibrationStateListener_PARAM) {
        this._ARCommandRcCalibrationStateListener = _ARCommandRcCalibrationStateListener_PARAM;
    }

    public void setRcChannelActionItemListener(ARCommandRcChannelActionItemListener _ARCommandRcChannelActionItemListener_PARAM) {
        this._ARCommandRcChannelActionItemListener = _ARCommandRcChannelActionItemListener_PARAM;
    }

    public void setSkyControllerWifiRequestWifiListListener(ARCommandSkyControllerWifiRequestWifiListListener _ARCommandSkyControllerWifiRequestWifiListListener_PARAM) {
        this._ARCommandSkyControllerWifiRequestWifiListListener = _ARCommandSkyControllerWifiRequestWifiListListener_PARAM;
    }

    public void setSkyControllerWifiRequestCurrentWifiListener(ARCommandSkyControllerWifiRequestCurrentWifiListener _ARCommandSkyControllerWifiRequestCurrentWifiListener_PARAM) {
        this._ARCommandSkyControllerWifiRequestCurrentWifiListener = _ARCommandSkyControllerWifiRequestCurrentWifiListener_PARAM;
    }

    public void setSkyControllerWifiConnectToWifiListener(ARCommandSkyControllerWifiConnectToWifiListener _ARCommandSkyControllerWifiConnectToWifiListener_PARAM) {
        this._ARCommandSkyControllerWifiConnectToWifiListener = _ARCommandSkyControllerWifiConnectToWifiListener_PARAM;
    }

    public void setSkyControllerWifiForgetWifiListener(ARCommandSkyControllerWifiForgetWifiListener _ARCommandSkyControllerWifiForgetWifiListener_PARAM) {
        this._ARCommandSkyControllerWifiForgetWifiListener = _ARCommandSkyControllerWifiForgetWifiListener_PARAM;
    }

    public void setSkyControllerWifiWifiAuthChannelListener(ARCommandSkyControllerWifiWifiAuthChannelListener _ARCommandSkyControllerWifiWifiAuthChannelListener_PARAM) {
        this._ARCommandSkyControllerWifiWifiAuthChannelListener = _ARCommandSkyControllerWifiWifiAuthChannelListener_PARAM;
    }

    public void setSkyControllerDeviceRequestDeviceListListener(ARCommandSkyControllerDeviceRequestDeviceListListener _ARCommandSkyControllerDeviceRequestDeviceListListener_PARAM) {
        this._ARCommandSkyControllerDeviceRequestDeviceListListener = _ARCommandSkyControllerDeviceRequestDeviceListListener_PARAM;
    }

    public void setSkyControllerDeviceRequestCurrentDeviceListener(ARCommandSkyControllerDeviceRequestCurrentDeviceListener _ARCommandSkyControllerDeviceRequestCurrentDeviceListener_PARAM) {
        this._ARCommandSkyControllerDeviceRequestCurrentDeviceListener = _ARCommandSkyControllerDeviceRequestCurrentDeviceListener_PARAM;
    }

    public void setSkyControllerDeviceConnectToDeviceListener(ARCommandSkyControllerDeviceConnectToDeviceListener _ARCommandSkyControllerDeviceConnectToDeviceListener_PARAM) {
        this._ARCommandSkyControllerDeviceConnectToDeviceListener = _ARCommandSkyControllerDeviceConnectToDeviceListener_PARAM;
    }

    public void setSkyControllerSettingsAllSettingsListener(ARCommandSkyControllerSettingsAllSettingsListener _ARCommandSkyControllerSettingsAllSettingsListener_PARAM) {
        this._ARCommandSkyControllerSettingsAllSettingsListener = _ARCommandSkyControllerSettingsAllSettingsListener_PARAM;
    }

    public void setSkyControllerSettingsResetListener(ARCommandSkyControllerSettingsResetListener _ARCommandSkyControllerSettingsResetListener_PARAM) {
        this._ARCommandSkyControllerSettingsResetListener = _ARCommandSkyControllerSettingsResetListener_PARAM;
    }

    public void setSkyControllerCommonAllStatesListener(ARCommandSkyControllerCommonAllStatesListener _ARCommandSkyControllerCommonAllStatesListener_PARAM) {
        this._ARCommandSkyControllerCommonAllStatesListener = _ARCommandSkyControllerCommonAllStatesListener_PARAM;
    }

    public void setSkyControllerAccessPointSettingsAccessPointSSIDListener(ARCommandSkyControllerAccessPointSettingsAccessPointSSIDListener _ARCommandSkyControllerAccessPointSettingsAccessPointSSIDListener_PARAM) {
        this.f965x856b6eae = _ARCommandSkyControllerAccessPointSettingsAccessPointSSIDListener_PARAM;
    }

    public void setSkyControllerAccessPointSettingsAccessPointChannelListener(C1538x36391db7 _ARCommandSkyControllerAccessPointSettingsAccessPointChannelListener_PARAM) {
        this.f964x4309c4f8 = _ARCommandSkyControllerAccessPointSettingsAccessPointChannelListener_PARAM;
    }

    public void setSkyControllerAccessPointSettingsWifiSelectionListener(ARCommandSkyControllerAccessPointSettingsWifiSelectionListener _ARCommandSkyControllerAccessPointSettingsWifiSelectionListener_PARAM) {
        this._ARCommandSkyControllerAccessPointSettingsWifiSelectionListener = _ARCommandSkyControllerAccessPointSettingsWifiSelectionListener_PARAM;
    }

    public void setSkyControllerAccessPointSettingsWifiSecurityListener(ARCommandSkyControllerAccessPointSettingsWifiSecurityListener _ARCommandSkyControllerAccessPointSettingsWifiSecurityListener_PARAM) {
        this._ARCommandSkyControllerAccessPointSettingsWifiSecurityListener = _ARCommandSkyControllerAccessPointSettingsWifiSecurityListener_PARAM;
    }

    public void setSkyControllerCameraResetOrientationListener(ARCommandSkyControllerCameraResetOrientationListener _ARCommandSkyControllerCameraResetOrientationListener_PARAM) {
        this._ARCommandSkyControllerCameraResetOrientationListener = _ARCommandSkyControllerCameraResetOrientationListener_PARAM;
    }

    public void setSkyControllerGamepadInfosGetGamepadControlsListener(ARCommandSkyControllerGamepadInfosGetGamepadControlsListener _ARCommandSkyControllerGamepadInfosGetGamepadControlsListener_PARAM) {
        this._ARCommandSkyControllerGamepadInfosGetGamepadControlsListener = _ARCommandSkyControllerGamepadInfosGetGamepadControlsListener_PARAM;
    }

    public void setSkyControllerButtonMappingsGetCurrentButtonMappingsListener(C1551x39e41b48 _ARCommandSkyControllerButtonMappingsGetCurrentButtonMappingsListener_PARAM) {
        this.f981xc7285c27 = _ARCommandSkyControllerButtonMappingsGetCurrentButtonMappingsListener_PARAM;
    }

    public void setSkyControllerButtonMappingsGetAvailableButtonMappingsListener(C1550xcbb82398 _ARCommandSkyControllerButtonMappingsGetAvailableButtonMappingsListener_PARAM) {
        this.f980x18efa8b7 = _ARCommandSkyControllerButtonMappingsGetAvailableButtonMappingsListener_PARAM;
    }

    public void setSkyControllerButtonMappingsSetButtonMappingListener(ARCommandSkyControllerButtonMappingsSetButtonMappingListener _ARCommandSkyControllerButtonMappingsSetButtonMappingListener_PARAM) {
        this._ARCommandSkyControllerButtonMappingsSetButtonMappingListener = _ARCommandSkyControllerButtonMappingsSetButtonMappingListener_PARAM;
    }

    public void setSkyControllerButtonMappingsDefaultButtonMappingListener(ARCommandSkyControllerButtonMappingsDefaultButtonMappingListener _ARCommandSkyControllerButtonMappingsDefaultButtonMappingListener_PARAM) {
        this.f979xa6f0f948 = _ARCommandSkyControllerButtonMappingsDefaultButtonMappingListener_PARAM;
    }

    public void setSkyControllerAxisMappingsGetCurrentAxisMappingsListener(ARCommandSkyControllerAxisMappingsGetCurrentAxisMappingsListener _ARCommandSkyControllerAxisMappingsGetCurrentAxisMappingsListener_PARAM) {
        this.f974xf5b22b45 = _ARCommandSkyControllerAxisMappingsGetCurrentAxisMappingsListener_PARAM;
    }

    public void setSkyControllerAxisMappingsGetAvailableAxisMappingsListener(C1545x69a7bf76 _ARCommandSkyControllerAxisMappingsGetAvailableAxisMappingsListener_PARAM) {
        this.f973xf674ac15 = _ARCommandSkyControllerAxisMappingsGetAvailableAxisMappingsListener_PARAM;
    }

    public void setSkyControllerAxisMappingsSetAxisMappingListener(ARCommandSkyControllerAxisMappingsSetAxisMappingListener _ARCommandSkyControllerAxisMappingsSetAxisMappingListener_PARAM) {
        this._ARCommandSkyControllerAxisMappingsSetAxisMappingListener = _ARCommandSkyControllerAxisMappingsSetAxisMappingListener_PARAM;
    }

    public void setSkyControllerAxisMappingsDefaultAxisMappingListener(ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener _ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener_PARAM) {
        this._ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener = _ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener_PARAM;
    }

    public void setSkyControllerAxisFiltersGetCurrentAxisFiltersListener(ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener _ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener_PARAM) {
        this._ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener = _ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener_PARAM;
    }

    public void setSkyControllerAxisFiltersGetPresetAxisFiltersListener(ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener _ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener_PARAM) {
        this._ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener = _ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener_PARAM;
    }

    public void setSkyControllerAxisFiltersSetAxisFilterListener(ARCommandSkyControllerAxisFiltersSetAxisFilterListener _ARCommandSkyControllerAxisFiltersSetAxisFilterListener_PARAM) {
        this._ARCommandSkyControllerAxisFiltersSetAxisFilterListener = _ARCommandSkyControllerAxisFiltersSetAxisFilterListener_PARAM;
    }

    public void setSkyControllerAxisFiltersDefaultAxisFiltersListener(ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener _ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener_PARAM) {
        this._ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener = _ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener_PARAM;
    }

    public void setSkyControllerCoPilotingSetPilotingSourceListener(ARCommandSkyControllerCoPilotingSetPilotingSourceListener _ARCommandSkyControllerCoPilotingSetPilotingSourceListener_PARAM) {
        this._ARCommandSkyControllerCoPilotingSetPilotingSourceListener = _ARCommandSkyControllerCoPilotingSetPilotingSourceListener_PARAM;
    }

    /* renamed from: setSkyControllerCalibrationEnableMagnetoCalibrationQualityUpdatesListener */
    public void m89x3bca9676(C1556x940125ee _ARCommandSkyControllerCalibrationEnableMagnetoCalibrationQualityUpdatesListener_PARAM) {
        this.f986xf153f3af = _ARCommandSkyControllerCalibrationEnableMagnetoCalibrationQualityUpdatesListener_PARAM;
    }

    public void setSkyControllerFactoryResetListener(ARCommandSkyControllerFactoryResetListener _ARCommandSkyControllerFactoryResetListener_PARAM) {
        this._ARCommandSkyControllerFactoryResetListener = _ARCommandSkyControllerFactoryResetListener_PARAM;
    }

    public void setSkyControllerWifiStateWifiListListener(ARCommandSkyControllerWifiStateWifiListListener _ARCommandSkyControllerWifiStateWifiListListener_PARAM) {
        this._ARCommandSkyControllerWifiStateWifiListListener = _ARCommandSkyControllerWifiStateWifiListListener_PARAM;
    }

    public void setSkyControllerWifiStateConnexionChangedListener(ARCommandSkyControllerWifiStateConnexionChangedListener _ARCommandSkyControllerWifiStateConnexionChangedListener_PARAM) {
        this._ARCommandSkyControllerWifiStateConnexionChangedListener = _ARCommandSkyControllerWifiStateConnexionChangedListener_PARAM;
    }

    public void setSkyControllerWifiStateWifiAuthChannelListChangedListener(C1561x9d26f8fd _ARCommandSkyControllerWifiStateWifiAuthChannelListChangedListener_PARAM) {
        this.f994x4ca7c7e = _ARCommandSkyControllerWifiStateWifiAuthChannelListChangedListener_PARAM;
    }

    public void setSkyControllerWifiStateAllWifiAuthChannelChangedListener(ARCommandSkyControllerWifiStateAllWifiAuthChannelChangedListener _ARCommandSkyControllerWifiStateAllWifiAuthChannelChangedListener_PARAM) {
        this.f993x76fcda49 = _ARCommandSkyControllerWifiStateAllWifiAuthChannelChangedListener_PARAM;
    }

    public void setSkyControllerWifiStateWifiSignalChangedListener(ARCommandSkyControllerWifiStateWifiSignalChangedListener _ARCommandSkyControllerWifiStateWifiSignalChangedListener_PARAM) {
        this._ARCommandSkyControllerWifiStateWifiSignalChangedListener = _ARCommandSkyControllerWifiStateWifiSignalChangedListener_PARAM;
    }

    public void setSkyControllerWifiStateWifiAuthChannelListChangedV2Listener(C1562x9e7d4159 _ARCommandSkyControllerWifiStateWifiAuthChannelListChangedV2Listener_PARAM) {
        this.f995xab4de89a = _ARCommandSkyControllerWifiStateWifiAuthChannelListChangedV2Listener_PARAM;
    }

    public void setSkyControllerWifiStateWifiCountryChangedListener(ARCommandSkyControllerWifiStateWifiCountryChangedListener _ARCommandSkyControllerWifiStateWifiCountryChangedListener_PARAM) {
        this._ARCommandSkyControllerWifiStateWifiCountryChangedListener = _ARCommandSkyControllerWifiStateWifiCountryChangedListener_PARAM;
    }

    public void setSkyControllerWifiStateWifiEnvironmentChangedListener(ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener _ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener_PARAM) {
        this._ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener = _ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener_PARAM;
    }

    public void setSkyControllerDeviceStateDeviceListListener(ARCommandSkyControllerDeviceStateDeviceListListener _ARCommandSkyControllerDeviceStateDeviceListListener_PARAM) {
        this._ARCommandSkyControllerDeviceStateDeviceListListener = _ARCommandSkyControllerDeviceStateDeviceListListener_PARAM;
    }

    public void setSkyControllerDeviceStateConnexionChangedListener(ARCommandSkyControllerDeviceStateConnexionChangedListener _ARCommandSkyControllerDeviceStateConnexionChangedListener_PARAM) {
        this._ARCommandSkyControllerDeviceStateConnexionChangedListener = _ARCommandSkyControllerDeviceStateConnexionChangedListener_PARAM;
    }

    public void setSkyControllerSettingsStateAllSettingsChangedListener(ARCommandSkyControllerSettingsStateAllSettingsChangedListener _ARCommandSkyControllerSettingsStateAllSettingsChangedListener_PARAM) {
        this._ARCommandSkyControllerSettingsStateAllSettingsChangedListener = _ARCommandSkyControllerSettingsStateAllSettingsChangedListener_PARAM;
    }

    public void setSkyControllerSettingsStateResetChangedListener(ARCommandSkyControllerSettingsStateResetChangedListener _ARCommandSkyControllerSettingsStateResetChangedListener_PARAM) {
        this._ARCommandSkyControllerSettingsStateResetChangedListener = _ARCommandSkyControllerSettingsStateResetChangedListener_PARAM;
    }

    public void setSkyControllerSettingsStateProductSerialChangedListener(ARCommandSkyControllerSettingsStateProductSerialChangedListener _ARCommandSkyControllerSettingsStateProductSerialChangedListener_PARAM) {
        this._ARCommandSkyControllerSettingsStateProductSerialChangedListener = _ARCommandSkyControllerSettingsStateProductSerialChangedListener_PARAM;
    }

    public void setSkyControllerSettingsStateProductVariantChangedListener(ARCommandSkyControllerSettingsStateProductVariantChangedListener _ARCommandSkyControllerSettingsStateProductVariantChangedListener_PARAM) {
        this.f990xe3e2fd26 = _ARCommandSkyControllerSettingsStateProductVariantChangedListener_PARAM;
    }

    public void setSkyControllerSettingsStateProductVersionChangedListener(ARCommandSkyControllerSettingsStateProductVersionChangedListener _ARCommandSkyControllerSettingsStateProductVersionChangedListener_PARAM) {
        this.f991x4abc6073 = _ARCommandSkyControllerSettingsStateProductVersionChangedListener_PARAM;
    }

    public void setSkyControllerCommonStateAllStatesChangedListener(ARCommandSkyControllerCommonStateAllStatesChangedListener _ARCommandSkyControllerCommonStateAllStatesChangedListener_PARAM) {
        this._ARCommandSkyControllerCommonStateAllStatesChangedListener = _ARCommandSkyControllerCommonStateAllStatesChangedListener_PARAM;
    }

    public void setSkyControllerSkyControllerStateBatteryChangedListener(ARCommandSkyControllerSkyControllerStateBatteryChangedListener _ARCommandSkyControllerSkyControllerStateBatteryChangedListener_PARAM) {
        this._ARCommandSkyControllerSkyControllerStateBatteryChangedListener = _ARCommandSkyControllerSkyControllerStateBatteryChangedListener_PARAM;
    }

    public void setSkyControllerSkyControllerStateGpsFixChangedListener(ARCommandSkyControllerSkyControllerStateGpsFixChangedListener _ARCommandSkyControllerSkyControllerStateGpsFixChangedListener_PARAM) {
        this._ARCommandSkyControllerSkyControllerStateGpsFixChangedListener = _ARCommandSkyControllerSkyControllerStateGpsFixChangedListener_PARAM;
    }

    public void setSkyControllerSkyControllerStateGpsPositionChangedListener(C1560x246030ac _ARCommandSkyControllerSkyControllerStateGpsPositionChangedListener_PARAM) {
        this.f992xb12d1d4b = _ARCommandSkyControllerSkyControllerStateGpsPositionChangedListener_PARAM;
    }

    public void setSkyControllerSkyControllerStateBatteryStateListener(ARCommandSkyControllerSkyControllerStateBatteryStateListener _ARCommandSkyControllerSkyControllerStateBatteryStateListener_PARAM) {
        this._ARCommandSkyControllerSkyControllerStateBatteryStateListener = _ARCommandSkyControllerSkyControllerStateBatteryStateListener_PARAM;
    }

    public void setSkyControllerSkyControllerStateAttitudeChangedListener(ARCommandSkyControllerSkyControllerStateAttitudeChangedListener _ARCommandSkyControllerSkyControllerStateAttitudeChangedListener_PARAM) {
        this._ARCommandSkyControllerSkyControllerStateAttitudeChangedListener = _ARCommandSkyControllerSkyControllerStateAttitudeChangedListener_PARAM;
    }

    /* renamed from: setSkyControllerAccessPointSettingsStateAccessPointSSIDChangedListener */
    public void m81xb68b585e(C1540x2e93bbe6 _ARCommandSkyControllerAccessPointSettingsStateAccessPointSSIDChangedListener_PARAM) {
        this.f967x7b34adc5 = _ARCommandSkyControllerAccessPointSettingsStateAccessPointSSIDChangedListener_PARAM;
    }

    /* renamed from: setSkyControllerAccessPointSettingsStateAccessPointChannelChangedListener */
    public void m80xec7810b4(C1539x44aea02c _ARCommandSkyControllerAccessPointSettingsStateAccessPointChannelChangedListener_PARAM) {
        this.f966xa2016ded = _ARCommandSkyControllerAccessPointSettingsStateAccessPointChannelChangedListener_PARAM;
    }

    /* renamed from: setSkyControllerAccessPointSettingsStateWifiSelectionChangedListener */
    public void m83x9e9847ae(C1542xbef3ed36 _ARCommandSkyControllerAccessPointSettingsStateWifiSelectionChangedListener_PARAM) {
        this.f969xec95cad5 = _ARCommandSkyControllerAccessPointSettingsStateWifiSelectionChangedListener_PARAM;
    }

    /* renamed from: setSkyControllerAccessPointSettingsStateWifiSecurityChangedListener */
    public void m82x36f28a96(C1541x6148140e _ARCommandSkyControllerAccessPointSettingsStateWifiSecurityChangedListener_PARAM) {
        this.f968x3134868f = _ARCommandSkyControllerAccessPointSettingsStateWifiSecurityChangedListener_PARAM;
    }

    public void setSkyControllerGamepadInfosStateGamepadControlListener(ARCommandSkyControllerGamepadInfosStateGamepadControlListener _ARCommandSkyControllerGamepadInfosStateGamepadControlListener_PARAM) {
        this._ARCommandSkyControllerGamepadInfosStateGamepadControlListener = _ARCommandSkyControllerGamepadInfosStateGamepadControlListener_PARAM;
    }

    public void setSkyControllerGamepadInfosStateAllGamepadControlsSentListener(C1559x329e5e2c _ARCommandSkyControllerGamepadInfosStateAllGamepadControlsSentListener_PARAM) {
        this.f989x4de2392d = _ARCommandSkyControllerGamepadInfosStateAllGamepadControlsSentListener_PARAM;
    }

    public void setSkyControllerButtonMappingsStateCurrentButtonMappingsListener(C1555xd36d956d _ARCommandSkyControllerButtonMappingsStateCurrentButtonMappingsListener_PARAM) {
        this.f985x20a51a8c = _ARCommandSkyControllerButtonMappingsStateCurrentButtonMappingsListener_PARAM;
    }

    /* renamed from: setSkyControllerButtonMappingsStateAllCurrentButtonMappingsSentListener */
    public void m87x19aa5dda(C1553xa2ae6b52 _ARCommandSkyControllerButtonMappingsStateAllCurrentButtonMappingsSentListener_PARAM) {
        this.f983xea2bb553 = _ARCommandSkyControllerButtonMappingsStateAllCurrentButtonMappingsSentListener_PARAM;
    }

    /* renamed from: setSkyControllerButtonMappingsStateAvailableButtonMappingsListener */
    public void m88x403440f5(C1554x28cba87d _ARCommandSkyControllerButtonMappingsStateAvailableButtonMappingsListener_PARAM) {
        this.f984x63661dc = _ARCommandSkyControllerButtonMappingsStateAvailableButtonMappingsListener_PARAM;
    }

    /* renamed from: setSkyControllerButtonMappingsStateAllAvailableButtonsMappingsSentListener */
    public void m86x1a42f18b(C1552xc8de5113 _ARCommandSkyControllerButtonMappingsStateAllAvailableButtonsMappingsSentListener_PARAM) {
        this.f982x15e53b72 = _ARCommandSkyControllerButtonMappingsStateAllAvailableButtonsMappingsSentListener_PARAM;
    }

    public void setSkyControllerAxisMappingsStateCurrentAxisMappingsListener(C1549x1249a28b _ARCommandSkyControllerAxisMappingsStateCurrentAxisMappingsListener_PARAM) {
        this.f978x9f168f2a = _ARCommandSkyControllerAxisMappingsStateCurrentAxisMappingsListener_PARAM;
    }

    /* renamed from: setSkyControllerAxisMappingsStateAllCurrentAxisMappingsSentListener */
    public void m85xbde72f7a(C1547xe83cb8f2 _ARCommandSkyControllerAxisMappingsStateAllCurrentAxisMappingsSentListener_PARAM) {
        this.f976xb8292b73 = _ARCommandSkyControllerAxisMappingsStateAllCurrentAxisMappingsSentListener_PARAM;
    }

    public void setSkyControllerAxisMappingsStateAvailableAxisMappingsListener(C1548x4b0b69db _ARCommandSkyControllerAxisMappingsStateAvailableAxisMappingsListener_PARAM) {
        this.f977xd84faaba = _ARCommandSkyControllerAxisMappingsStateAvailableAxisMappingsListener_PARAM;
    }

    /* renamed from: setSkyControllerAxisMappingsStateAllAvailableAxisMappingsSentListener */
    public void m84x50da7d0a(C1546x3bf38882 _ARCommandSkyControllerAxisMappingsStateAllAvailableAxisMappingsSentListener_PARAM) {
        this.f975xc28d5ec3 = _ARCommandSkyControllerAxisMappingsStateAllAvailableAxisMappingsSentListener_PARAM;
    }

    public void setSkyControllerAxisFiltersStateCurrentAxisFiltersListener(ARCommandSkyControllerAxisFiltersStateCurrentAxisFiltersListener _ARCommandSkyControllerAxisFiltersStateCurrentAxisFiltersListener_PARAM) {
        this.f972x86097b4e = _ARCommandSkyControllerAxisFiltersStateCurrentAxisFiltersListener_PARAM;
    }

    public void setSkyControllerAxisFiltersStateAllCurrentFiltersSentListener(C1543xed4a78d5 _ARCommandSkyControllerAxisFiltersStateAllCurrentFiltersSentListener_PARAM) {
        this.f970xfa1b2016 = _ARCommandSkyControllerAxisFiltersStateAllCurrentFiltersSentListener_PARAM;
    }

    public void setSkyControllerAxisFiltersStatePresetAxisFiltersListener(ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener _ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener_PARAM) {
        this._ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener = _ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener_PARAM;
    }

    public void setSkyControllerAxisFiltersStateAllPresetFiltersSentListener(C1544x5c379ac1 _ARCommandSkyControllerAxisFiltersStateAllPresetFiltersSentListener_PARAM) {
        this.f971xe9048760 = _ARCommandSkyControllerAxisFiltersStateAllPresetFiltersSentListener_PARAM;
    }

    public void setSkyControllerCoPilotingStatePilotingSourceListener(ARCommandSkyControllerCoPilotingStatePilotingSourceListener _ARCommandSkyControllerCoPilotingStatePilotingSourceListener_PARAM) {
        this._ARCommandSkyControllerCoPilotingStatePilotingSourceListener = _ARCommandSkyControllerCoPilotingStatePilotingSourceListener_PARAM;
    }

    public void setSkyControllerCalibrationStateMagnetoCalibrationStateListener(C1558x351361d6 _ARCommandSkyControllerCalibrationStateMagnetoCalibrationStateListener_PARAM) {
        this.f988x50573cd7 = _ARCommandSkyControllerCalibrationStateMagnetoCalibrationStateListener_PARAM;
    }

    /* renamed from: setSkyControllerCalibrationStateMagnetoCalibrationQualityUpdatesStateListener */
    public void m90xb12a5b93(C1557xe41c6f0b _ARCommandSkyControllerCalibrationStateMagnetoCalibrationQualityUpdatesStateListener_PARAM) {
        this.f987x9be0744c = _ARCommandSkyControllerCalibrationStateMagnetoCalibrationQualityUpdatesStateListener_PARAM;
    }

    public void setSkyControllerButtonEventsSettingsListener(ARCommandSkyControllerButtonEventsSettingsListener _ARCommandSkyControllerButtonEventsSettingsListener_PARAM) {
        this._ARCommandSkyControllerButtonEventsSettingsListener = _ARCommandSkyControllerButtonEventsSettingsListener_PARAM;
    }

    public void setSkyControllerCommonEventStateShutdownListener(ARCommandSkyControllerCommonEventStateShutdownListener _ARCommandSkyControllerCommonEventStateShutdownListener_PARAM) {
        this._ARCommandSkyControllerCommonEventStateShutdownListener = _ARCommandSkyControllerCommonEventStateShutdownListener_PARAM;
    }

    public void setWifiScanListener(ARCommandWifiScanListener _ARCommandWifiScanListener_PARAM) {
        this._ARCommandWifiScanListener = _ARCommandWifiScanListener_PARAM;
    }

    public void setWifiUpdateAuthorizedChannelsListener(ARCommandWifiUpdateAuthorizedChannelsListener _ARCommandWifiUpdateAuthorizedChannelsListener_PARAM) {
        this._ARCommandWifiUpdateAuthorizedChannelsListener = _ARCommandWifiUpdateAuthorizedChannelsListener_PARAM;
    }

    public void setWifiSetApChannelListener(ARCommandWifiSetApChannelListener _ARCommandWifiSetApChannelListener_PARAM) {
        this._ARCommandWifiSetApChannelListener = _ARCommandWifiSetApChannelListener_PARAM;
    }

    public void setWifiSetSecurityListener(ARCommandWifiSetSecurityListener _ARCommandWifiSetSecurityListener_PARAM) {
        this._ARCommandWifiSetSecurityListener = _ARCommandWifiSetSecurityListener_PARAM;
    }

    public void setWifiSetCountryListener(ARCommandWifiSetCountryListener _ARCommandWifiSetCountryListener_PARAM) {
        this._ARCommandWifiSetCountryListener = _ARCommandWifiSetCountryListener_PARAM;
    }

    public void setWifiSetEnvironmentListener(ARCommandWifiSetEnvironmentListener _ARCommandWifiSetEnvironmentListener_PARAM) {
        this._ARCommandWifiSetEnvironmentListener = _ARCommandWifiSetEnvironmentListener_PARAM;
    }

    public void setWifiScannedItemListener(ARCommandWifiScannedItemListener _ARCommandWifiScannedItemListener_PARAM) {
        this._ARCommandWifiScannedItemListener = _ARCommandWifiScannedItemListener_PARAM;
    }

    public void setWifiAuthorizedChannelListener(ARCommandWifiAuthorizedChannelListener _ARCommandWifiAuthorizedChannelListener_PARAM) {
        this._ARCommandWifiAuthorizedChannelListener = _ARCommandWifiAuthorizedChannelListener_PARAM;
    }

    public void setWifiApChannelChangedListener(ARCommandWifiApChannelChangedListener _ARCommandWifiApChannelChangedListener_PARAM) {
        this._ARCommandWifiApChannelChangedListener = _ARCommandWifiApChannelChangedListener_PARAM;
    }

    public void setWifiSecurityChangedListener(ARCommandWifiSecurityChangedListener _ARCommandWifiSecurityChangedListener_PARAM) {
        this._ARCommandWifiSecurityChangedListener = _ARCommandWifiSecurityChangedListener_PARAM;
    }

    public void setWifiCountryChangedListener(ARCommandWifiCountryChangedListener _ARCommandWifiCountryChangedListener_PARAM) {
        this._ARCommandWifiCountryChangedListener = _ARCommandWifiCountryChangedListener_PARAM;
    }

    public void setWifiEnvironmentChangedListener(ARCommandWifiEnvironmentChangedListener _ARCommandWifiEnvironmentChangedListener_PARAM) {
        this._ARCommandWifiEnvironmentChangedListener = _ARCommandWifiEnvironmentChangedListener_PARAM;
    }

    public void setWifiRssiChangedListener(ARCommandWifiRssiChangedListener _ARCommandWifiRssiChangedListener_PARAM) {
        this._ARCommandWifiRssiChangedListener = _ARCommandWifiRssiChangedListener_PARAM;
    }

    public void setWifiSupportedCountriesListener(ARCommandWifiSupportedCountriesListener _ARCommandWifiSupportedCountriesListener_PARAM) {
        this._ARCommandWifiSupportedCountriesListener = _ARCommandWifiSupportedCountriesListener_PARAM;
    }

    void onGenericDefaultUpdate() {
        if (this._ARCommandGenericDefaultListener != null) {
            this._ARCommandGenericDefaultListener.onGenericDefaultUpdate();
        }
    }

    void onGenericSetDroneSettingsUpdate(ARCommandsGenericDroneSettings settings) {
        if (this._ARCommandGenericSetDroneSettingsListener != null) {
            this._ARCommandGenericSetDroneSettingsListener.onGenericSetDroneSettingsUpdate(settings);
        }
    }

    void onGenericDroneSettingsChangedUpdate(ARCommandsGenericDroneSettingsChanged settings) {
        if (this._ARCommandGenericDroneSettingsChangedListener != null) {
            this._ARCommandGenericDroneSettingsChangedListener.onGenericDroneSettingsChangedUpdate(settings);
        }
    }

    void onARDrone3PilotingFlatTrimUpdate() {
        if (this._ARCommandARDrone3PilotingFlatTrimListener != null) {
            this._ARCommandARDrone3PilotingFlatTrimListener.onARDrone3PilotingFlatTrimUpdate();
        }
    }

    void onARDrone3PilotingTakeOffUpdate() {
        if (this._ARCommandARDrone3PilotingTakeOffListener != null) {
            this._ARCommandARDrone3PilotingTakeOffListener.onARDrone3PilotingTakeOffUpdate();
        }
    }

    void onARDrone3PilotingPCMDUpdate(byte flag, byte roll, byte pitch, byte yaw, byte gaz, int timestampAndSeqNum) {
        if (this._ARCommandARDrone3PilotingPCMDListener != null) {
            this._ARCommandARDrone3PilotingPCMDListener.onARDrone3PilotingPCMDUpdate(flag, roll, pitch, yaw, gaz, timestampAndSeqNum);
        }
    }

    void onARDrone3PilotingLandingUpdate() {
        if (this._ARCommandARDrone3PilotingLandingListener != null) {
            this._ARCommandARDrone3PilotingLandingListener.onARDrone3PilotingLandingUpdate();
        }
    }

    void onARDrone3PilotingEmergencyUpdate() {
        if (this._ARCommandARDrone3PilotingEmergencyListener != null) {
            this._ARCommandARDrone3PilotingEmergencyListener.onARDrone3PilotingEmergencyUpdate();
        }
    }

    void onARDrone3PilotingNavigateHomeUpdate(byte start) {
        if (this._ARCommandARDrone3PilotingNavigateHomeListener != null) {
            this._ARCommandARDrone3PilotingNavigateHomeListener.onARDrone3PilotingNavigateHomeUpdate(start);
        }
    }

    void onARDrone3PilotingAutoTakeOffModeUpdate(byte state) {
        if (this._ARCommandARDrone3PilotingAutoTakeOffModeListener != null) {
            this._ARCommandARDrone3PilotingAutoTakeOffModeListener.onARDrone3PilotingAutoTakeOffModeUpdate(state);
        }
    }

    void onARDrone3PilotingMoveByUpdate(float dX, float dY, float dZ, float dPsi) {
        if (this._ARCommandARDrone3PilotingMoveByListener != null) {
            this._ARCommandARDrone3PilotingMoveByListener.onARDrone3PilotingMoveByUpdate(dX, dY, dZ, dPsi);
        }
    }

    void onARDrone3PilotingUserTakeOffUpdate(byte state) {
        if (this._ARCommandARDrone3PilotingUserTakeOffListener != null) {
            this._ARCommandARDrone3PilotingUserTakeOffListener.onARDrone3PilotingUserTakeOffUpdate(state);
        }
    }

    void onARDrone3PilotingCircleUpdate(ARCOMMANDS_ARDRONE3_PILOTING_CIRCLE_DIRECTION_ENUM direction) {
        if (this._ARCommandARDrone3PilotingCircleListener != null) {
            this._ARCommandARDrone3PilotingCircleListener.onARDrone3PilotingCircleUpdate(direction);
        }
    }

    void onARDrone3PilotingMoveToUpdate(double latitude, double longitude, double altitude, ARCOMMANDS_ARDRONE3_PILOTING_MOVETO_ORIENTATION_MODE_ENUM orientation_mode, float heading) {
        if (this._ARCommandARDrone3PilotingMoveToListener != null) {
            r0._ARCommandARDrone3PilotingMoveToListener.onARDrone3PilotingMoveToUpdate(latitude, longitude, altitude, orientation_mode, heading);
        }
    }

    void onARDrone3PilotingCancelMoveToUpdate() {
        if (this._ARCommandARDrone3PilotingCancelMoveToListener != null) {
            this._ARCommandARDrone3PilotingCancelMoveToListener.onARDrone3PilotingCancelMoveToUpdate();
        }
    }

    void onARDrone3AnimationsFlipUpdate(ARCOMMANDS_ARDRONE3_ANIMATIONS_FLIP_DIRECTION_ENUM direction) {
        if (this._ARCommandARDrone3AnimationsFlipListener != null) {
            this._ARCommandARDrone3AnimationsFlipListener.onARDrone3AnimationsFlipUpdate(direction);
        }
    }

    void onARDrone3CameraOrientationUpdate(byte tilt, byte pan) {
        if (this._ARCommandARDrone3CameraOrientationListener != null) {
            this._ARCommandARDrone3CameraOrientationListener.onARDrone3CameraOrientationUpdate(tilt, pan);
        }
    }

    void onARDrone3CameraOrientationV2Update(float tilt, float pan) {
        if (this._ARCommandARDrone3CameraOrientationV2Listener != null) {
            this._ARCommandARDrone3CameraOrientationV2Listener.onARDrone3CameraOrientationV2Update(tilt, pan);
        }
    }

    void onARDrone3CameraVelocityUpdate(float tilt, float pan) {
        if (this._ARCommandARDrone3CameraVelocityListener != null) {
            this._ARCommandARDrone3CameraVelocityListener.onARDrone3CameraVelocityUpdate(tilt, pan);
        }
    }

    void onARDrone3MediaRecordPictureUpdate(byte mass_storage_id) {
        if (this._ARCommandARDrone3MediaRecordPictureListener != null) {
            this._ARCommandARDrone3MediaRecordPictureListener.onARDrone3MediaRecordPictureUpdate(mass_storage_id);
        }
    }

    void onARDrone3MediaRecordVideoUpdate(ARCOMMANDS_ARDRONE3_MEDIARECORD_VIDEO_RECORD_ENUM record, byte mass_storage_id) {
        if (this._ARCommandARDrone3MediaRecordVideoListener != null) {
            this._ARCommandARDrone3MediaRecordVideoListener.onARDrone3MediaRecordVideoUpdate(record, mass_storage_id);
        }
    }

    void onARDrone3MediaRecordPictureV2Update() {
        if (this._ARCommandARDrone3MediaRecordPictureV2Listener != null) {
            this._ARCommandARDrone3MediaRecordPictureV2Listener.onARDrone3MediaRecordPictureV2Update();
        }
    }

    void onARDrone3MediaRecordVideoV2Update(ARCOMMANDS_ARDRONE3_MEDIARECORD_VIDEOV2_RECORD_ENUM record) {
        if (this._ARCommandARDrone3MediaRecordVideoV2Listener != null) {
            this._ARCommandARDrone3MediaRecordVideoV2Listener.onARDrone3MediaRecordVideoV2Update(record);
        }
    }

    void onARDrone3NetworkWifiScanUpdate(ARCOMMANDS_ARDRONE3_NETWORK_WIFISCAN_BAND_ENUM band) {
        if (this._ARCommandARDrone3NetworkWifiScanListener != null) {
            this._ARCommandARDrone3NetworkWifiScanListener.onARDrone3NetworkWifiScanUpdate(band);
        }
    }

    void onARDrone3NetworkWifiAuthChannelUpdate() {
        if (this._ARCommandARDrone3NetworkWifiAuthChannelListener != null) {
            this._ARCommandARDrone3NetworkWifiAuthChannelListener.onARDrone3NetworkWifiAuthChannelUpdate();
        }
    }

    void onARDrone3PilotingSettingsMaxAltitudeUpdate(float current) {
        if (this._ARCommandARDrone3PilotingSettingsMaxAltitudeListener != null) {
            this._ARCommandARDrone3PilotingSettingsMaxAltitudeListener.onARDrone3PilotingSettingsMaxAltitudeUpdate(current);
        }
    }

    void onARDrone3PilotingSettingsMaxTiltUpdate(float current) {
        if (this._ARCommandARDrone3PilotingSettingsMaxTiltListener != null) {
            this._ARCommandARDrone3PilotingSettingsMaxTiltListener.onARDrone3PilotingSettingsMaxTiltUpdate(current);
        }
    }

    void onARDrone3PilotingSettingsAbsolutControlUpdate(byte on) {
        if (this._ARCommandARDrone3PilotingSettingsAbsolutControlListener != null) {
            this._ARCommandARDrone3PilotingSettingsAbsolutControlListener.onARDrone3PilotingSettingsAbsolutControlUpdate(on);
        }
    }

    void onARDrone3PilotingSettingsMaxDistanceUpdate(float value) {
        if (this._ARCommandARDrone3PilotingSettingsMaxDistanceListener != null) {
            this._ARCommandARDrone3PilotingSettingsMaxDistanceListener.onARDrone3PilotingSettingsMaxDistanceUpdate(value);
        }
    }

    void onARDrone3PilotingSettingsNoFlyOverMaxDistanceUpdate(byte shouldNotFlyOver) {
        if (this._ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener != null) {
            this._ARCommandARDrone3PilotingSettingsNoFlyOverMaxDistanceListener.onARDrone3PilotingSettingsNoFlyOverMaxDistanceUpdate(shouldNotFlyOver);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalSpeedUpdate */
    void m38xccd6c892(float value) {
        if (this.f904x3074a141 != null) {
            this.f904x3074a141.m14xccd6c892(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalSpeedUpdate */
    void m41xabcaa780(float value) {
        if (this.f907x73ff6daf != null) {
            this.f907x73ff6daf.m17xabcaa780(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsSetAutonomousFlightMaxHorizontalAccelerationUpdate */
    void m37x1d52ca87(float value) {
        if (this.f903x6cec176e != null) {
            this.f903x6cec176e.m13x1d52ca87(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsSetAutonomousFlightMaxVerticalAccelerationUpdate */
    void m40xef40e3d9(float value) {
        if (this.f906xca51340 != null) {
            this.f906xca51340.m16xef40e3d9(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsSetAutonomousFlightMaxRotationSpeedUpdate */
    void m39x48822a78(float value) {
        if (this.f905xc0e212a7 != null) {
            this.f905xc0e212a7.m15x48822a78(value);
        }
    }

    void onARDrone3PilotingSettingsBankedTurnUpdate(byte value) {
        if (this._ARCommandARDrone3PilotingSettingsBankedTurnListener != null) {
            this._ARCommandARDrone3PilotingSettingsBankedTurnListener.onARDrone3PilotingSettingsBankedTurnUpdate(value);
        }
    }

    void onARDrone3PilotingSettingsMinAltitudeUpdate(float current) {
        if (this._ARCommandARDrone3PilotingSettingsMinAltitudeListener != null) {
            this._ARCommandARDrone3PilotingSettingsMinAltitudeListener.onARDrone3PilotingSettingsMinAltitudeUpdate(current);
        }
    }

    void onARDrone3PilotingSettingsCirclingDirectionUpdate(C1402xbc6011c1 value) {
        if (this._ARCommandARDrone3PilotingSettingsCirclingDirectionListener != null) {
            this._ARCommandARDrone3PilotingSettingsCirclingDirectionListener.onARDrone3PilotingSettingsCirclingDirectionUpdate(value);
        }
    }

    void onARDrone3PilotingSettingsCirclingRadiusUpdate(short value) {
        if (this._ARCommandARDrone3PilotingSettingsCirclingRadiusListener != null) {
            this._ARCommandARDrone3PilotingSettingsCirclingRadiusListener.onARDrone3PilotingSettingsCirclingRadiusUpdate(value);
        }
    }

    void onARDrone3PilotingSettingsCirclingAltitudeUpdate(short value) {
        if (this._ARCommandARDrone3PilotingSettingsCirclingAltitudeListener != null) {
            this._ARCommandARDrone3PilotingSettingsCirclingAltitudeListener.onARDrone3PilotingSettingsCirclingAltitudeUpdate(value);
        }
    }

    void onARDrone3PilotingSettingsPitchModeUpdate(ARCOMMANDS_ARDRONE3_PILOTINGSETTINGS_PITCHMODE_VALUE_ENUM value) {
        if (this._ARCommandARDrone3PilotingSettingsPitchModeListener != null) {
            this._ARCommandARDrone3PilotingSettingsPitchModeListener.onARDrone3PilotingSettingsPitchModeUpdate(value);
        }
    }

    void onARDrone3SpeedSettingsMaxVerticalSpeedUpdate(float current) {
        if (this._ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener != null) {
            this._ARCommandARDrone3SpeedSettingsMaxVerticalSpeedListener.onARDrone3SpeedSettingsMaxVerticalSpeedUpdate(current);
        }
    }

    void onARDrone3SpeedSettingsMaxRotationSpeedUpdate(float current) {
        if (this._ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener != null) {
            this._ARCommandARDrone3SpeedSettingsMaxRotationSpeedListener.onARDrone3SpeedSettingsMaxRotationSpeedUpdate(current);
        }
    }

    void onARDrone3SpeedSettingsHullProtectionUpdate(byte present) {
        if (this._ARCommandARDrone3SpeedSettingsHullProtectionListener != null) {
            this._ARCommandARDrone3SpeedSettingsHullProtectionListener.onARDrone3SpeedSettingsHullProtectionUpdate(present);
        }
    }

    void onARDrone3SpeedSettingsOutdoorUpdate(byte outdoor) {
        if (this._ARCommandARDrone3SpeedSettingsOutdoorListener != null) {
            this._ARCommandARDrone3SpeedSettingsOutdoorListener.onARDrone3SpeedSettingsOutdoorUpdate(outdoor);
        }
    }

    void onARDrone3SpeedSettingsMaxPitchRollRotationSpeedUpdate(float current) {
        if (this._ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener != null) {
            this._ARCommandARDrone3SpeedSettingsMaxPitchRollRotationSpeedListener.onARDrone3SpeedSettingsMaxPitchRollRotationSpeedUpdate(current);
        }
    }

    void onARDrone3NetworkSettingsWifiSelectionUpdate(ARCOMMANDS_ARDRONE3_NETWORKSETTINGS_WIFISELECTION_TYPE_ENUM type, ARCOMMANDS_ARDRONE3_NETWORKSETTINGS_WIFISELECTION_BAND_ENUM band, byte channel) {
        if (this._ARCommandARDrone3NetworkSettingsWifiSelectionListener != null) {
            this._ARCommandARDrone3NetworkSettingsWifiSelectionListener.onARDrone3NetworkSettingsWifiSelectionUpdate(type, band, channel);
        }
    }

    void onARDrone3NetworkSettingsWifiSecurityUpdate(ARCOMMANDS_ARDRONE3_NETWORKSETTINGS_WIFISECURITY_TYPE_ENUM type, String key, ARCOMMANDS_ARDRONE3_NETWORKSETTINGS_WIFISECURITY_KEYTYPE_ENUM keyType) {
        if (this._ARCommandARDrone3NetworkSettingsWifiSecurityListener != null) {
            this._ARCommandARDrone3NetworkSettingsWifiSecurityListener.onARDrone3NetworkSettingsWifiSecurityUpdate(type, key, keyType);
        }
    }

    void onARDrone3PictureSettingsPictureFormatSelectionUpdate(C1397x91f54a09 type) {
        if (this._ARCommandARDrone3PictureSettingsPictureFormatSelectionListener != null) {
            this._ARCommandARDrone3PictureSettingsPictureFormatSelectionListener.onARDrone3PictureSettingsPictureFormatSelectionUpdate(type);
        }
    }

    void onARDrone3PictureSettingsAutoWhiteBalanceSelectionUpdate(C1396x10f9ec46 type) {
        if (this.f894x48d0f8a4 != null) {
            this.f894x48d0f8a4.onARDrone3PictureSettingsAutoWhiteBalanceSelectionUpdate(type);
        }
    }

    void onARDrone3PictureSettingsExpositionSelectionUpdate(float value) {
        if (this._ARCommandARDrone3PictureSettingsExpositionSelectionListener != null) {
            this._ARCommandARDrone3PictureSettingsExpositionSelectionListener.onARDrone3PictureSettingsExpositionSelectionUpdate(value);
        }
    }

    void onARDrone3PictureSettingsSaturationSelectionUpdate(float value) {
        if (this._ARCommandARDrone3PictureSettingsSaturationSelectionListener != null) {
            this._ARCommandARDrone3PictureSettingsSaturationSelectionListener.onARDrone3PictureSettingsSaturationSelectionUpdate(value);
        }
    }

    void onARDrone3PictureSettingsTimelapseSelectionUpdate(byte enabled, float interval) {
        if (this._ARCommandARDrone3PictureSettingsTimelapseSelectionListener != null) {
            this._ARCommandARDrone3PictureSettingsTimelapseSelectionListener.onARDrone3PictureSettingsTimelapseSelectionUpdate(enabled, interval);
        }
    }

    void onARDrone3PictureSettingsVideoAutorecordSelectionUpdate(byte enabled, byte mass_storage_id) {
        if (this.f902x1e99a95f != null) {
            this.f902x1e99a95f.onARDrone3PictureSettingsVideoAutorecordSelectionUpdate(enabled, mass_storage_id);
        }
    }

    void onARDrone3PictureSettingsVideoStabilizationModeUpdate(C1399x62185770 mode) {
        if (this._ARCommandARDrone3PictureSettingsVideoStabilizationModeListener != null) {
            this._ARCommandARDrone3PictureSettingsVideoStabilizationModeListener.onARDrone3PictureSettingsVideoStabilizationModeUpdate(mode);
        }
    }

    void onARDrone3PictureSettingsVideoRecordingModeUpdate(ARCOMMANDS_ARDRONE3_PICTURESETTINGS_VIDEORECORDINGMODE_MODE_ENUM mode) {
        if (this._ARCommandARDrone3PictureSettingsVideoRecordingModeListener != null) {
            this._ARCommandARDrone3PictureSettingsVideoRecordingModeListener.onARDrone3PictureSettingsVideoRecordingModeUpdate(mode);
        }
    }

    void onARDrone3PictureSettingsVideoFramerateUpdate(C1398xcc3fb1b5 framerate) {
        if (this._ARCommandARDrone3PictureSettingsVideoFramerateListener != null) {
            this._ARCommandARDrone3PictureSettingsVideoFramerateListener.onARDrone3PictureSettingsVideoFramerateUpdate(framerate);
        }
    }

    void onARDrone3PictureSettingsVideoResolutionsUpdate(ARCOMMANDS_ARDRONE3_PICTURESETTINGS_VIDEORESOLUTIONS_TYPE_ENUM type) {
        if (this._ARCommandARDrone3PictureSettingsVideoResolutionsListener != null) {
            this._ARCommandARDrone3PictureSettingsVideoResolutionsListener.onARDrone3PictureSettingsVideoResolutionsUpdate(type);
        }
    }

    void onARDrone3MediaStreamingVideoEnableUpdate(byte enable) {
        if (this._ARCommandARDrone3MediaStreamingVideoEnableListener != null) {
            this._ARCommandARDrone3MediaStreamingVideoEnableListener.onARDrone3MediaStreamingVideoEnableUpdate(enable);
        }
    }

    void onARDrone3MediaStreamingVideoStreamModeUpdate(ARCOMMANDS_ARDRONE3_MEDIASTREAMING_VIDEOSTREAMMODE_MODE_ENUM mode) {
        if (this._ARCommandARDrone3MediaStreamingVideoStreamModeListener != null) {
            this._ARCommandARDrone3MediaStreamingVideoStreamModeListener.onARDrone3MediaStreamingVideoStreamModeUpdate(mode);
        }
    }

    void onARDrone3GPSSettingsSetHomeUpdate(double latitude, double longitude, double altitude) {
        if (this._ARCommandARDrone3GPSSettingsSetHomeListener != null) {
            this._ARCommandARDrone3GPSSettingsSetHomeListener.onARDrone3GPSSettingsSetHomeUpdate(latitude, longitude, altitude);
        }
    }

    void onARDrone3GPSSettingsResetHomeUpdate() {
        if (this._ARCommandARDrone3GPSSettingsResetHomeListener != null) {
            this._ARCommandARDrone3GPSSettingsResetHomeListener.onARDrone3GPSSettingsResetHomeUpdate();
        }
    }

    void onARDrone3GPSSettingsSendControllerGPSUpdate(double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy) {
        if (this._ARCommandARDrone3GPSSettingsSendControllerGPSListener != null) {
            r0._ARCommandARDrone3GPSSettingsSendControllerGPSListener.onARDrone3GPSSettingsSendControllerGPSUpdate(latitude, longitude, altitude, horizontalAccuracy, verticalAccuracy);
        }
    }

    void onARDrone3GPSSettingsHomeTypeUpdate(ARCOMMANDS_ARDRONE3_GPSSETTINGS_HOMETYPE_TYPE_ENUM type) {
        if (this._ARCommandARDrone3GPSSettingsHomeTypeListener != null) {
            this._ARCommandARDrone3GPSSettingsHomeTypeListener.onARDrone3GPSSettingsHomeTypeUpdate(type);
        }
    }

    void onARDrone3GPSSettingsReturnHomeDelayUpdate(short delay) {
        if (this._ARCommandARDrone3GPSSettingsReturnHomeDelayListener != null) {
            this._ARCommandARDrone3GPSSettingsReturnHomeDelayListener.onARDrone3GPSSettingsReturnHomeDelayUpdate(delay);
        }
    }

    void onARDrone3AntiflickeringElectricFrequencyUpdate(C1369x263150ea frequency) {
        if (this._ARCommandARDrone3AntiflickeringElectricFrequencyListener != null) {
            this._ARCommandARDrone3AntiflickeringElectricFrequencyListener.onARDrone3AntiflickeringElectricFrequencyUpdate(frequency);
        }
    }

    void onARDrone3AntiflickeringSetModeUpdate(ARCOMMANDS_ARDRONE3_ANTIFLICKERING_SETMODE_MODE_ENUM mode) {
        if (this._ARCommandARDrone3AntiflickeringSetModeListener != null) {
            this._ARCommandARDrone3AntiflickeringSetModeListener.onARDrone3AntiflickeringSetModeUpdate(mode);
        }
    }

    void onARDrone3MediaRecordStatePictureStateChangedUpdate(byte state, byte mass_storage_id) {
        if (this._ARCommandARDrone3MediaRecordStatePictureStateChangedListener != null) {
            this._ARCommandARDrone3MediaRecordStatePictureStateChangedListener.onARDrone3MediaRecordStatePictureStateChangedUpdate(state, mass_storage_id);
        }
    }

    void onARDrone3MediaRecordStateVideoStateChangedUpdate(C1382x735058e6 state, byte mass_storage_id) {
        if (this._ARCommandARDrone3MediaRecordStateVideoStateChangedListener != null) {
            this._ARCommandARDrone3MediaRecordStateVideoStateChangedListener.onARDrone3MediaRecordStateVideoStateChangedUpdate(state, mass_storage_id);
        }
    }

    void onARDrone3MediaRecordStatePictureStateChangedV2Update(C1377x75f32627 state, C1376xe509eb10 error) {
        if (this._ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener != null) {
            this._ARCommandARDrone3MediaRecordStatePictureStateChangedV2Listener.onARDrone3MediaRecordStatePictureStateChangedV2Update(state, error);
        }
    }

    void onARDrone3MediaRecordStateVideoStateChangedV2Update(C1381x2e98e6ca state, C1380x9dafabb3 error) {
        if (this._ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener != null) {
            this._ARCommandARDrone3MediaRecordStateVideoStateChangedV2Listener.onARDrone3MediaRecordStateVideoStateChangedV2Update(state, error);
        }
    }

    void onARDrone3MediaRecordStateVideoResolutionStateUpdate(C1379x6f240e9d streaming, C1378xf397ca6e recording) {
        if (this._ARCommandARDrone3MediaRecordStateVideoResolutionStateListener != null) {
            this._ARCommandARDrone3MediaRecordStateVideoResolutionStateListener.onARDrone3MediaRecordStateVideoResolutionStateUpdate(streaming, recording);
        }
    }

    void onARDrone3MediaRecordEventPictureEventChangedUpdate(C1373xbaa3e9ba event, C1372xe17dff0c error) {
        if (this._ARCommandARDrone3MediaRecordEventPictureEventChangedListener != null) {
            this._ARCommandARDrone3MediaRecordEventPictureEventChangedListener.onARDrone3MediaRecordEventPictureEventChangedUpdate(event, error);
        }
    }

    void onARDrone3MediaRecordEventVideoEventChangedUpdate(C1375xdcd3c0dd event, C1374x3add62f error) {
        if (this._ARCommandARDrone3MediaRecordEventVideoEventChangedListener != null) {
            this._ARCommandARDrone3MediaRecordEventVideoEventChangedListener.onARDrone3MediaRecordEventVideoEventChangedUpdate(event, error);
        }
    }

    void onARDrone3PilotingStateFlatTrimChangedUpdate() {
        if (this._ARCommandARDrone3PilotingStateFlatTrimChangedListener != null) {
            this._ARCommandARDrone3PilotingStateFlatTrimChangedListener.onARDrone3PilotingStateFlatTrimChangedUpdate();
        }
    }

    void onARDrone3PilotingStateFlyingStateChangedUpdate(ARCOMMANDS_ARDRONE3_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandARDrone3PilotingStateFlyingStateChangedListener != null) {
            this._ARCommandARDrone3PilotingStateFlyingStateChangedListener.onARDrone3PilotingStateFlyingStateChangedUpdate(state);
        }
    }

    void onARDrone3PilotingStateAlertStateChangedUpdate(ARCOMMANDS_ARDRONE3_PILOTINGSTATE_ALERTSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandARDrone3PilotingStateAlertStateChangedListener != null) {
            this._ARCommandARDrone3PilotingStateAlertStateChangedListener.onARDrone3PilotingStateAlertStateChangedUpdate(state);
        }
    }

    void onARDrone3PilotingStateNavigateHomeStateChangedUpdate(C1405xa48cc1b6 state, C1404x955e1555 reason) {
        if (this._ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener != null) {
            this._ARCommandARDrone3PilotingStateNavigateHomeStateChangedListener.onARDrone3PilotingStateNavigateHomeStateChangedUpdate(state, reason);
        }
    }

    void onARDrone3PilotingStatePositionChangedUpdate(double latitude, double longitude, double altitude) {
        if (this._ARCommandARDrone3PilotingStatePositionChangedListener != null) {
            this._ARCommandARDrone3PilotingStatePositionChangedListener.onARDrone3PilotingStatePositionChangedUpdate(latitude, longitude, altitude);
        }
    }

    void onARDrone3PilotingStateSpeedChangedUpdate(float speedX, float speedY, float speedZ) {
        if (this._ARCommandARDrone3PilotingStateSpeedChangedListener != null) {
            this._ARCommandARDrone3PilotingStateSpeedChangedListener.onARDrone3PilotingStateSpeedChangedUpdate(speedX, speedY, speedZ);
        }
    }

    void onARDrone3PilotingStateAttitudeChangedUpdate(float roll, float pitch, float yaw) {
        if (this._ARCommandARDrone3PilotingStateAttitudeChangedListener != null) {
            this._ARCommandARDrone3PilotingStateAttitudeChangedListener.onARDrone3PilotingStateAttitudeChangedUpdate(roll, pitch, yaw);
        }
    }

    void onARDrone3PilotingStateAutoTakeOffModeChangedUpdate(byte state) {
        if (this._ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener != null) {
            this._ARCommandARDrone3PilotingStateAutoTakeOffModeChangedListener.onARDrone3PilotingStateAutoTakeOffModeChangedUpdate(state);
        }
    }

    void onARDrone3PilotingStateAltitudeChangedUpdate(double altitude) {
        if (this._ARCommandARDrone3PilotingStateAltitudeChangedListener != null) {
            this._ARCommandARDrone3PilotingStateAltitudeChangedListener.onARDrone3PilotingStateAltitudeChangedUpdate(altitude);
        }
    }

    void onARDrone3PilotingStateGpsLocationChangedUpdate(double latitude, double longitude, double altitude, byte latitude_accuracy, byte longitude_accuracy, byte altitude_accuracy) {
        if (this._ARCommandARDrone3PilotingStateGpsLocationChangedListener != null) {
            r0._ARCommandARDrone3PilotingStateGpsLocationChangedListener.onARDrone3PilotingStateGpsLocationChangedUpdate(latitude, longitude, altitude, latitude_accuracy, longitude_accuracy, altitude_accuracy);
        }
    }

    void onARDrone3PilotingStateLandingStateChangedUpdate(ARCOMMANDS_ARDRONE3_PILOTINGSTATE_LANDINGSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandARDrone3PilotingStateLandingStateChangedListener != null) {
            this._ARCommandARDrone3PilotingStateLandingStateChangedListener.onARDrone3PilotingStateLandingStateChangedUpdate(state);
        }
    }

    void onARDrone3PilotingStateAirSpeedChangedUpdate(float airSpeed) {
        if (this._ARCommandARDrone3PilotingStateAirSpeedChangedListener != null) {
            this._ARCommandARDrone3PilotingStateAirSpeedChangedListener.onARDrone3PilotingStateAirSpeedChangedUpdate(airSpeed);
        }
    }

    void onARDrone3PilotingStateMoveToChangedUpdate(double latitude, double longitude, double altitude, C1403x808e9112 orientation_mode, float heading, ARCOMMANDS_ARDRONE3_PILOTINGSTATE_MOVETOCHANGED_STATUS_ENUM status) {
        if (this._ARCommandARDrone3PilotingStateMoveToChangedListener != null) {
            r0._ARCommandARDrone3PilotingStateMoveToChangedListener.onARDrone3PilotingStateMoveToChangedUpdate(latitude, longitude, altitude, orientation_mode, heading, status);
        }
    }

    void onARDrone3PilotingEventMoveByEndUpdate(float dX, float dY, float dZ, float dPsi, ARCOMMANDS_ARDRONE3_PILOTINGEVENT_MOVEBYEND_ERROR_ENUM error) {
        if (this._ARCommandARDrone3PilotingEventMoveByEndListener != null) {
            this._ARCommandARDrone3PilotingEventMoveByEndListener.onARDrone3PilotingEventMoveByEndUpdate(dX, dY, dZ, dPsi, error);
        }
    }

    void onARDrone3NetworkStateWifiScanListChangedUpdate(String ssid, short rssi, ARCOMMANDS_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_BAND_ENUM band, byte channel) {
        if (this._ARCommandARDrone3NetworkStateWifiScanListChangedListener != null) {
            this._ARCommandARDrone3NetworkStateWifiScanListChangedListener.onARDrone3NetworkStateWifiScanListChangedUpdate(ssid, rssi, band, channel);
        }
    }

    void onARDrone3NetworkStateAllWifiScanChangedUpdate() {
        if (this._ARCommandARDrone3NetworkStateAllWifiScanChangedListener != null) {
            this._ARCommandARDrone3NetworkStateAllWifiScanChangedListener.onARDrone3NetworkStateAllWifiScanChangedUpdate();
        }
    }

    void onARDrone3NetworkStateWifiAuthChannelListChangedUpdate(C1389x5b9d9bcb band, byte channel, byte in_or_out) {
        if (this._ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener != null) {
            this._ARCommandARDrone3NetworkStateWifiAuthChannelListChangedListener.onARDrone3NetworkStateWifiAuthChannelListChangedUpdate(band, channel, in_or_out);
        }
    }

    void onARDrone3NetworkStateAllWifiAuthChannelChangedUpdate() {
        if (this._ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener != null) {
            this._ARCommandARDrone3NetworkStateAllWifiAuthChannelChangedListener.onARDrone3NetworkStateAllWifiAuthChannelChangedUpdate();
        }
    }

    void onARDrone3PilotingSettingsStateMaxAltitudeChangedUpdate(float current, float min, float max) {
        if (this.f917x6ee3f9bf != null) {
            this.f917x6ee3f9bf.onARDrone3PilotingSettingsStateMaxAltitudeChangedUpdate(current, min, max);
        }
    }

    void onARDrone3PilotingSettingsStateMaxTiltChangedUpdate(float current, float min, float max) {
        if (this._ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener != null) {
            this._ARCommandARDrone3PilotingSettingsStateMaxTiltChangedListener.onARDrone3PilotingSettingsStateMaxTiltChangedUpdate(current, min, max);
        }
    }

    void onARDrone3PilotingSettingsStateAbsolutControlChangedUpdate(byte on) {
        if (this.f908x13e2325c != null) {
            this.f908x13e2325c.onARDrone3PilotingSettingsStateAbsolutControlChangedUpdate(on);
        }
    }

    void onARDrone3PilotingSettingsStateMaxDistanceChangedUpdate(float current, float min, float max) {
        if (this.f918xacf6880c != null) {
            this.f918xacf6880c.onARDrone3PilotingSettingsStateMaxDistanceChangedUpdate(current, min, max);
        }
    }

    void onARDrone3PilotingSettingsStateNoFlyOverMaxDistanceChangedUpdate(byte shouldNotFlyOver) {
        if (this.f920x645ab9b8 != null) {
            this.f920x645ab9b8.onARDrone3PilotingSettingsStateNoFlyOverMaxDistanceChangedUpdate(shouldNotFlyOver);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalSpeedUpdate */
    void m43xfe52e3c1(float value) {
        if (this.f910xda3bfbb0 != null) {
            this.f910xda3bfbb0.m19xfe52e3c1(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalSpeedUpdate */
    void m46x36a1c26f(float value) {
        if (this.f913x536897de != null) {
            this.f913x536897de.m22x36a1c26f(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsStateAutonomousFlightMaxHorizontalAccelerationUpdate */
    void m42x5a698c78(float value) {
        if (this.f909xb9adf21f != null) {
            this.f909xb9adf21f.m18x5a698c78(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsStateAutonomousFlightMaxVerticalAccelerationUpdate */
    void m45xae516e0a(float value) {
        if (this.f912xb8cfe631 != null) {
            this.f912xb8cfe631.m21xae516e0a(value);
        }
    }

    /* renamed from: onARDrone3PilotingSettingsStateAutonomousFlightMaxRotationSpeedUpdate */
    void m44xd3594567(float value) {
        if (this.f911xa04b3cd6 != null) {
            this.f911xa04b3cd6.m20xd3594567(value);
        }
    }

    void onARDrone3PilotingSettingsStateBankedTurnChangedUpdate(byte state) {
        if (this._ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener != null) {
            this._ARCommandARDrone3PilotingSettingsStateBankedTurnChangedListener.onARDrone3PilotingSettingsStateBankedTurnChangedUpdate(state);
        }
    }

    void onARDrone3PilotingSettingsStateMinAltitudeChangedUpdate(float current, float min, float max) {
        if (this.f919xb856cd11 != null) {
            this.f919xb856cd11.onARDrone3PilotingSettingsStateMinAltitudeChangedUpdate(current, min, max);
        }
    }

    void onARDrone3PilotingSettingsStateCirclingDirectionChangedUpdate(C1400xe6290a4 value) {
        if (this.f915x90013633 != null) {
            this.f915x90013633.onARDrone3PilotingSettingsStateCirclingDirectionChangedUpdate(value);
        }
    }

    void onARDrone3PilotingSettingsStateCirclingRadiusChangedUpdate(short current, short min, short max) {
        if (this.f916x24efb0ac != null) {
            this.f916x24efb0ac.onARDrone3PilotingSettingsStateCirclingRadiusChangedUpdate(current, min, max);
        }
    }

    void onARDrone3PilotingSettingsStateCirclingAltitudeChangedUpdate(short current, short min, short max) {
        if (this.f914x5740431c != null) {
            this.f914x5740431c.onARDrone3PilotingSettingsStateCirclingAltitudeChangedUpdate(current, min, max);
        }
    }

    void onARDrone3PilotingSettingsStatePitchModeChangedUpdate(C1401xc59e32b5 value) {
        if (this._ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener != null) {
            this._ARCommandARDrone3PilotingSettingsStatePitchModeChangedListener.onARDrone3PilotingSettingsStatePitchModeChangedUpdate(value);
        }
    }

    void onARDrone3SpeedSettingsStateMaxVerticalSpeedChangedUpdate(float current, float min, float max) {
        if (this.f927xfb55cfed != null) {
            this.f927xfb55cfed.onARDrone3SpeedSettingsStateMaxVerticalSpeedChangedUpdate(current, min, max);
        }
    }

    void onARDrone3SpeedSettingsStateMaxRotationSpeedChangedUpdate(float current, float min, float max) {
        if (this.f926xaf1623f5 != null) {
            this.f926xaf1623f5.onARDrone3SpeedSettingsStateMaxRotationSpeedChangedUpdate(current, min, max);
        }
    }

    void onARDrone3SpeedSettingsStateHullProtectionChangedUpdate(byte present) {
        if (this.f924x3a21b0b4 != null) {
            this.f924x3a21b0b4.onARDrone3SpeedSettingsStateHullProtectionChangedUpdate(present);
        }
    }

    void onARDrone3SpeedSettingsStateOutdoorChangedUpdate(byte outdoor) {
        if (this._ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener != null) {
            this._ARCommandARDrone3SpeedSettingsStateOutdoorChangedListener.onARDrone3SpeedSettingsStateOutdoorChangedUpdate(outdoor);
        }
    }

    /* renamed from: onARDrone3SpeedSettingsStateMaxPitchRollRotationSpeedChangedUpdate */
    void m47x64b131f(float current, float min, float max) {
        if (this.f925x84cdc506 != null) {
            this.f925x84cdc506.m23x64b131f(current, min, max);
        }
    }

    void onARDrone3NetworkSettingsStateWifiSelectionChangedUpdate(C1388x56efbed6 type, C1387xc1826cbb band, byte channel) {
        if (this.f893x12f89278 != null) {
            this.f893x12f89278.onARDrone3NetworkSettingsStateWifiSelectionChangedUpdate(type, band, channel);
        }
    }

    void onARDrone3NetworkSettingsStateWifiSecurityChangedUpdate(C1385x549a9714 type) {
        if (this.f892xcf58be8c != null) {
            this.f892xcf58be8c.onARDrone3NetworkSettingsStateWifiSecurityChangedUpdate(type);
        }
    }

    void onARDrone3NetworkSettingsStateWifiSecurityUpdate(ARCOMMANDS_ARDRONE3_NETWORKSETTINGSSTATE_WIFISECURITY_TYPE_ENUM type, String key, C1386x559429ff keyType) {
        if (this._ARCommandARDrone3NetworkSettingsStateWifiSecurityListener != null) {
            this._ARCommandARDrone3NetworkSettingsStateWifiSecurityListener.onARDrone3NetworkSettingsStateWifiSecurityUpdate(type, key, keyType);
        }
    }

    void onARDrone3SettingsStateProductMotorVersionListChangedUpdate(byte motor_number, String type, String software, String hardware) {
        if (this.f923x3a715fbf != null) {
            this.f923x3a715fbf.onARDrone3SettingsStateProductMotorVersionListChangedUpdate(motor_number, type, software, hardware);
        }
    }

    void onARDrone3SettingsStateProductGPSVersionChangedUpdate(String software, String hardware) {
        if (this._ARCommandARDrone3SettingsStateProductGPSVersionChangedListener != null) {
            this._ARCommandARDrone3SettingsStateProductGPSVersionChangedListener.onARDrone3SettingsStateProductGPSVersionChangedUpdate(software, hardware);
        }
    }

    void onARDrone3SettingsStateMotorErrorStateChangedUpdate(byte motorIds, C1407x8eb7f9e2 motorError) {
        if (this._ARCommandARDrone3SettingsStateMotorErrorStateChangedListener != null) {
            this._ARCommandARDrone3SettingsStateMotorErrorStateChangedListener.onARDrone3SettingsStateMotorErrorStateChangedUpdate(motorIds, motorError);
        }
    }

    void onARDrone3SettingsStateMotorSoftwareVersionChangedUpdate(String version) {
        if (this.f922x7a849a05 != null) {
            this.f922x7a849a05.onARDrone3SettingsStateMotorSoftwareVersionChangedUpdate(version);
        }
    }

    void onARDrone3SettingsStateMotorFlightsStatusChangedUpdate(short nbFlights, short lastFlightDuration, int totalFlightDuration) {
        if (this._ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener != null) {
            this._ARCommandARDrone3SettingsStateMotorFlightsStatusChangedListener.onARDrone3SettingsStateMotorFlightsStatusChangedUpdate(nbFlights, lastFlightDuration, totalFlightDuration);
        }
    }

    void onARDrone3SettingsStateMotorErrorLastErrorChangedUpdate(C1406xb27b3a1 motorError) {
        if (this.f921x328a8890 != null) {
            this.f921x328a8890.onARDrone3SettingsStateMotorErrorLastErrorChangedUpdate(motorError);
        }
    }

    void onARDrone3SettingsStateP7IDUpdate(String serialID) {
        if (this._ARCommandARDrone3SettingsStateP7IDListener != null) {
            this._ARCommandARDrone3SettingsStateP7IDListener.onARDrone3SettingsStateP7IDUpdate(serialID);
        }
    }

    void onARDrone3SettingsStateCPUIDUpdate(String id) {
        if (this._ARCommandARDrone3SettingsStateCPUIDListener != null) {
            this._ARCommandARDrone3SettingsStateCPUIDListener.onARDrone3SettingsStateCPUIDUpdate(id);
        }
    }

    void onARDrone3PictureSettingsStatePictureFormatChangedUpdate(C1391xf931d08 type) {
        if (this.f896xeed4e94a != null) {
            this.f896xeed4e94a.onARDrone3PictureSettingsStatePictureFormatChangedUpdate(type);
        }
    }

    void onARDrone3PictureSettingsStateAutoWhiteBalanceChangedUpdate(C1390xca383277 type) {
        if (this.f895xa5a7d8ef != null) {
            this.f895xa5a7d8ef.onARDrone3PictureSettingsStateAutoWhiteBalanceChangedUpdate(type);
        }
    }

    void onARDrone3PictureSettingsStateExpositionChangedUpdate(float value, float min, float max) {
        if (this._ARCommandARDrone3PictureSettingsStateExpositionChangedListener != null) {
            this._ARCommandARDrone3PictureSettingsStateExpositionChangedListener.onARDrone3PictureSettingsStateExpositionChangedUpdate(value, min, max);
        }
    }

    void onARDrone3PictureSettingsStateSaturationChangedUpdate(float value, float min, float max) {
        if (this._ARCommandARDrone3PictureSettingsStateSaturationChangedListener != null) {
            this._ARCommandARDrone3PictureSettingsStateSaturationChangedListener.onARDrone3PictureSettingsStateSaturationChangedUpdate(value, min, max);
        }
    }

    void onARDrone3PictureSettingsStateTimelapseChangedUpdate(byte enabled, float interval, float minInterval, float maxInterval) {
        if (this._ARCommandARDrone3PictureSettingsStateTimelapseChangedListener != null) {
            this._ARCommandARDrone3PictureSettingsStateTimelapseChangedListener.onARDrone3PictureSettingsStateTimelapseChangedUpdate(enabled, interval, minInterval, maxInterval);
        }
    }

    void onARDrone3PictureSettingsStateVideoAutorecordChangedUpdate(byte enabled, byte mass_storage_id) {
        if (this.f897x422affc4 != null) {
            this.f897x422affc4.onARDrone3PictureSettingsStateVideoAutorecordChangedUpdate(enabled, mass_storage_id);
        }
    }

    /* renamed from: onARDrone3PictureSettingsStateVideoStabilizationModeChangedUpdate */
    void m36xdf21b3fb(C1395xb64e46a9 mode) {
        if (this.f901x19e0786a != null) {
            this.f901x19e0786a.m12xdf21b3fb(mode);
        }
    }

    void onARDrone3PictureSettingsStateVideoRecordingModeChangedUpdate(C1393xabbd0257 mode) {
        if (this.f899xf3a27d18 != null) {
            this.f899xf3a27d18.onARDrone3PictureSettingsStateVideoRecordingModeChangedUpdate(mode);
        }
    }

    void onARDrone3PictureSettingsStateVideoFramerateChangedUpdate(C1392x2caea9d2 framerate) {
        if (this.f898x21653d5f != null) {
            this.f898x21653d5f.onARDrone3PictureSettingsStateVideoFramerateChangedUpdate(framerate);
        }
    }

    void onARDrone3PictureSettingsStateVideoResolutionsChangedUpdate(C1394x80a06f8d type) {
        if (this.f900xb1b76ba5 != null) {
            this.f900xb1b76ba5.onARDrone3PictureSettingsStateVideoResolutionsChangedUpdate(type);
        }
    }

    void onARDrone3MediaStreamingStateVideoEnableChangedUpdate(C1383xb44ff36f enabled) {
        if (this._ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener != null) {
            this._ARCommandARDrone3MediaStreamingStateVideoEnableChangedListener.onARDrone3MediaStreamingStateVideoEnableChangedUpdate(enabled);
        }
    }

    void onARDrone3MediaStreamingStateVideoStreamModeChangedUpdate(C1384xe5650d6d mode) {
        if (this.f891x25c97476 != null) {
            this.f891x25c97476.onARDrone3MediaStreamingStateVideoStreamModeChangedUpdate(mode);
        }
    }

    void onARDrone3GPSSettingsStateHomeChangedUpdate(double latitude, double longitude, double altitude) {
        if (this._ARCommandARDrone3GPSSettingsStateHomeChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateHomeChangedListener.onARDrone3GPSSettingsStateHomeChangedUpdate(latitude, longitude, altitude);
        }
    }

    void onARDrone3GPSSettingsStateResetHomeChangedUpdate(double latitude, double longitude, double altitude) {
        if (this._ARCommandARDrone3GPSSettingsStateResetHomeChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateResetHomeChangedListener.onARDrone3GPSSettingsStateResetHomeChangedUpdate(latitude, longitude, altitude);
        }
    }

    void onARDrone3GPSSettingsStateGPSFixStateChangedUpdate(byte fixed) {
        if (this._ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateGPSFixStateChangedListener.onARDrone3GPSSettingsStateGPSFixStateChangedUpdate(fixed);
        }
    }

    void onARDrone3GPSSettingsStateGPSUpdateStateChangedUpdate(C1370xd79df106 state) {
        if (this._ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateGPSUpdateStateChangedListener.onARDrone3GPSSettingsStateGPSUpdateStateChangedUpdate(state);
        }
    }

    void onARDrone3GPSSettingsStateHomeTypeChangedUpdate(ARCOMMANDS_ARDRONE3_GPSSETTINGSSTATE_HOMETYPECHANGED_TYPE_ENUM type) {
        if (this._ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateHomeTypeChangedListener.onARDrone3GPSSettingsStateHomeTypeChangedUpdate(type);
        }
    }

    void onARDrone3GPSSettingsStateReturnHomeDelayChangedUpdate(short delay) {
        if (this._ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateReturnHomeDelayChangedListener.onARDrone3GPSSettingsStateReturnHomeDelayChangedUpdate(delay);
        }
    }

    void onARDrone3GPSSettingsStateGeofenceCenterChangedUpdate(double latitude, double longitude) {
        if (this._ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener != null) {
            this._ARCommandARDrone3GPSSettingsStateGeofenceCenterChangedListener.onARDrone3GPSSettingsStateGeofenceCenterChangedUpdate(latitude, longitude);
        }
    }

    void onARDrone3CameraStateOrientationUpdate(byte tilt, byte pan) {
        if (this._ARCommandARDrone3CameraStateOrientationListener != null) {
            this._ARCommandARDrone3CameraStateOrientationListener.onARDrone3CameraStateOrientationUpdate(tilt, pan);
        }
    }

    void onARDrone3CameraStateDefaultCameraOrientationUpdate(byte tilt, byte pan) {
        if (this._ARCommandARDrone3CameraStateDefaultCameraOrientationListener != null) {
            this._ARCommandARDrone3CameraStateDefaultCameraOrientationListener.onARDrone3CameraStateDefaultCameraOrientationUpdate(tilt, pan);
        }
    }

    void onARDrone3CameraStateOrientationV2Update(float tilt, float pan) {
        if (this._ARCommandARDrone3CameraStateOrientationV2Listener != null) {
            this._ARCommandARDrone3CameraStateOrientationV2Listener.onARDrone3CameraStateOrientationV2Update(tilt, pan);
        }
    }

    void onARDrone3CameraStateDefaultCameraOrientationV2Update(float tilt, float pan) {
        if (this._ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener != null) {
            this._ARCommandARDrone3CameraStateDefaultCameraOrientationV2Listener.onARDrone3CameraStateDefaultCameraOrientationV2Update(tilt, pan);
        }
    }

    void onARDrone3CameraStateVelocityRangeUpdate(float max_tilt, float max_pan) {
        if (this._ARCommandARDrone3CameraStateVelocityRangeListener != null) {
            this._ARCommandARDrone3CameraStateVelocityRangeListener.onARDrone3CameraStateVelocityRangeUpdate(max_tilt, max_pan);
        }
    }

    void onARDrone3AntiflickeringStateElectricFrequencyChangedUpdate(C1368xa14db947 frequency) {
        if (this.f890x2ae18487 != null) {
            this.f890x2ae18487.onARDrone3AntiflickeringStateElectricFrequencyChangedUpdate(frequency);
        }
    }

    void onARDrone3AntiflickeringStateModeChangedUpdate(ARCOMMANDS_ARDRONE3_ANTIFLICKERINGSTATE_MODECHANGED_MODE_ENUM mode) {
        if (this._ARCommandARDrone3AntiflickeringStateModeChangedListener != null) {
            this._ARCommandARDrone3AntiflickeringStateModeChangedListener.onARDrone3AntiflickeringStateModeChangedUpdate(mode);
        }
    }

    void onARDrone3GPSStateNumberOfSatelliteChangedUpdate(byte numberOfSatellite) {
        if (this._ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener != null) {
            this._ARCommandARDrone3GPSStateNumberOfSatelliteChangedListener.onARDrone3GPSStateNumberOfSatelliteChangedUpdate(numberOfSatellite);
        }
    }

    void onARDrone3GPSStateHomeTypeAvailabilityChangedUpdate(C1371xa02f755c type, byte available) {
        if (this._ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener != null) {
            this._ARCommandARDrone3GPSStateHomeTypeAvailabilityChangedListener.onARDrone3GPSStateHomeTypeAvailabilityChangedUpdate(type, available);
        }
    }

    void onARDrone3GPSStateHomeTypeChosenChangedUpdate(ARCOMMANDS_ARDRONE3_GPSSTATE_HOMETYPECHOSENCHANGED_TYPE_ENUM type) {
        if (this._ARCommandARDrone3GPSStateHomeTypeChosenChangedListener != null) {
            this._ARCommandARDrone3GPSStateHomeTypeChosenChangedListener.onARDrone3GPSStateHomeTypeChosenChangedUpdate(type);
        }
    }

    void onARDrone3PROStateFeaturesUpdate(long features) {
        if (this._ARCommandARDrone3PROStateFeaturesListener != null) {
            this._ARCommandARDrone3PROStateFeaturesListener.onARDrone3PROStateFeaturesUpdate(features);
        }
    }

    void onARDrone3AccessoryStateConnectedAccessoriesUpdate(byte id, C1367x498dbfd4 accessory_type, String uid, String swVersion, byte list_flags) {
        if (this._ARCommandARDrone3AccessoryStateConnectedAccessoriesListener != null) {
            this._ARCommandARDrone3AccessoryStateConnectedAccessoriesListener.onARDrone3AccessoryStateConnectedAccessoriesUpdate(id, accessory_type, uid, swVersion, list_flags);
        }
    }

    void onCommonNetworkDisconnectUpdate() {
        if (this._ARCommandCommonNetworkDisconnectListener != null) {
            this._ARCommandCommonNetworkDisconnectListener.onCommonNetworkDisconnectUpdate();
        }
    }

    void onCommonSettingsAllSettingsUpdate() {
        if (this._ARCommandCommonSettingsAllSettingsListener != null) {
            this._ARCommandCommonSettingsAllSettingsListener.onCommonSettingsAllSettingsUpdate();
        }
    }

    void onCommonSettingsResetUpdate() {
        if (this._ARCommandCommonSettingsResetListener != null) {
            this._ARCommandCommonSettingsResetListener.onCommonSettingsResetUpdate();
        }
    }

    void onCommonSettingsProductNameUpdate(String name) {
        if (this._ARCommandCommonSettingsProductNameListener != null) {
            this._ARCommandCommonSettingsProductNameListener.onCommonSettingsProductNameUpdate(name);
        }
    }

    void onCommonSettingsCountryUpdate(String code) {
        if (this._ARCommandCommonSettingsCountryListener != null) {
            this._ARCommandCommonSettingsCountryListener.onCommonSettingsCountryUpdate(code);
        }
    }

    void onCommonSettingsAutoCountryUpdate(byte automatic) {
        if (this._ARCommandCommonSettingsAutoCountryListener != null) {
            this._ARCommandCommonSettingsAutoCountryListener.onCommonSettingsAutoCountryUpdate(automatic);
        }
    }

    void onCommonCommonAllStatesUpdate() {
        if (this._ARCommandCommonCommonAllStatesListener != null) {
            this._ARCommandCommonCommonAllStatesListener.onCommonCommonAllStatesUpdate();
        }
    }

    void onCommonCommonCurrentDateUpdate(String date) {
        if (this._ARCommandCommonCommonCurrentDateListener != null) {
            this._ARCommandCommonCommonCurrentDateListener.onCommonCommonCurrentDateUpdate(date);
        }
    }

    void onCommonCommonCurrentTimeUpdate(String time) {
        if (this._ARCommandCommonCommonCurrentTimeListener != null) {
            this._ARCommandCommonCommonCurrentTimeListener.onCommonCommonCurrentTimeUpdate(time);
        }
    }

    void onCommonCommonRebootUpdate() {
        if (this._ARCommandCommonCommonRebootListener != null) {
            this._ARCommandCommonCommonRebootListener.onCommonCommonRebootUpdate();
        }
    }

    void onCommonOverHeatSwitchOffUpdate() {
        if (this._ARCommandCommonOverHeatSwitchOffListener != null) {
            this._ARCommandCommonOverHeatSwitchOffListener.onCommonOverHeatSwitchOffUpdate();
        }
    }

    void onCommonOverHeatVentilateUpdate() {
        if (this._ARCommandCommonOverHeatVentilateListener != null) {
            this._ARCommandCommonOverHeatVentilateListener.onCommonOverHeatVentilateUpdate();
        }
    }

    void onCommonControllerIsPilotingUpdate(byte piloting) {
        if (this._ARCommandCommonControllerIsPilotingListener != null) {
            this._ARCommandCommonControllerIsPilotingListener.onCommonControllerIsPilotingUpdate(piloting);
        }
    }

    void onCommonWifiSettingsOutdoorSettingUpdate(byte outdoor) {
        if (this._ARCommandCommonWifiSettingsOutdoorSettingListener != null) {
            this._ARCommandCommonWifiSettingsOutdoorSettingListener.onCommonWifiSettingsOutdoorSettingUpdate(outdoor);
        }
    }

    void onCommonMavlinkStartUpdate(String filepath, ARCOMMANDS_COMMON_MAVLINK_START_TYPE_ENUM type) {
        if (this._ARCommandCommonMavlinkStartListener != null) {
            this._ARCommandCommonMavlinkStartListener.onCommonMavlinkStartUpdate(filepath, type);
        }
    }

    void onCommonMavlinkPauseUpdate() {
        if (this._ARCommandCommonMavlinkPauseListener != null) {
            this._ARCommandCommonMavlinkPauseListener.onCommonMavlinkPauseUpdate();
        }
    }

    void onCommonMavlinkStopUpdate() {
        if (this._ARCommandCommonMavlinkStopListener != null) {
            this._ARCommandCommonMavlinkStopListener.onCommonMavlinkStopUpdate();
        }
    }

    void onCommonFlightPlanSettingsReturnHomeOnDisconnectUpdate(byte value) {
        if (this._ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener != null) {
            this._ARCommandCommonFlightPlanSettingsReturnHomeOnDisconnectListener.onCommonFlightPlanSettingsReturnHomeOnDisconnectUpdate(value);
        }
    }

    void onCommonCalibrationMagnetoCalibrationUpdate(byte calibrate) {
        if (this._ARCommandCommonCalibrationMagnetoCalibrationListener != null) {
            this._ARCommandCommonCalibrationMagnetoCalibrationListener.onCommonCalibrationMagnetoCalibrationUpdate(calibrate);
        }
    }

    void onCommonCalibrationPitotCalibrationUpdate(byte calibrate) {
        if (this._ARCommandCommonCalibrationPitotCalibrationListener != null) {
            this._ARCommandCommonCalibrationPitotCalibrationListener.onCommonCalibrationPitotCalibrationUpdate(calibrate);
        }
    }

    void onCommonGPSControllerPositionForRunUpdate(double latitude, double longitude) {
        if (this._ARCommandCommonGPSControllerPositionForRunListener != null) {
            this._ARCommandCommonGPSControllerPositionForRunListener.onCommonGPSControllerPositionForRunUpdate(latitude, longitude);
        }
    }

    void onCommonAudioControllerReadyForStreamingUpdate(byte ready) {
        if (this._ARCommandCommonAudioControllerReadyForStreamingListener != null) {
            this._ARCommandCommonAudioControllerReadyForStreamingListener.onCommonAudioControllerReadyForStreamingUpdate(ready);
        }
    }

    void onCommonHeadlightsIntensityUpdate(byte left, byte right) {
        if (this._ARCommandCommonHeadlightsIntensityListener != null) {
            this._ARCommandCommonHeadlightsIntensityListener.onCommonHeadlightsIntensityUpdate(left, right);
        }
    }

    void onCommonAnimationsStartAnimationUpdate(ARCOMMANDS_COMMON_ANIMATIONS_STARTANIMATION_ANIM_ENUM anim) {
        if (this._ARCommandCommonAnimationsStartAnimationListener != null) {
            this._ARCommandCommonAnimationsStartAnimationListener.onCommonAnimationsStartAnimationUpdate(anim);
        }
    }

    void onCommonAnimationsStopAnimationUpdate(ARCOMMANDS_COMMON_ANIMATIONS_STOPANIMATION_ANIM_ENUM anim) {
        if (this._ARCommandCommonAnimationsStopAnimationListener != null) {
            this._ARCommandCommonAnimationsStopAnimationListener.onCommonAnimationsStopAnimationUpdate(anim);
        }
    }

    void onCommonAnimationsStopAllAnimationsUpdate() {
        if (this._ARCommandCommonAnimationsStopAllAnimationsListener != null) {
            this._ARCommandCommonAnimationsStopAllAnimationsListener.onCommonAnimationsStopAllAnimationsUpdate();
        }
    }

    void onCommonAccessoryConfigUpdate(ARCOMMANDS_COMMON_ACCESSORY_CONFIG_ACCESSORY_ENUM accessory) {
        if (this._ARCommandCommonAccessoryConfigListener != null) {
            this._ARCommandCommonAccessoryConfigListener.onCommonAccessoryConfigUpdate(accessory);
        }
    }

    void onCommonChargerSetMaxChargeRateUpdate(ARCOMMANDS_COMMON_CHARGER_SETMAXCHARGERATE_RATE_ENUM rate) {
        if (this._ARCommandCommonChargerSetMaxChargeRateListener != null) {
            this._ARCommandCommonChargerSetMaxChargeRateListener.onCommonChargerSetMaxChargeRateUpdate(rate);
        }
    }

    void onCommonFactoryResetUpdate() {
        if (this._ARCommandCommonFactoryResetListener != null) {
            this._ARCommandCommonFactoryResetListener.onCommonFactoryResetUpdate();
        }
    }

    void onCommonNetworkEventDisconnectionUpdate(ARCOMMANDS_COMMON_NETWORKEVENT_DISCONNECTION_CAUSE_ENUM cause) {
        if (this._ARCommandCommonNetworkEventDisconnectionListener != null) {
            this._ARCommandCommonNetworkEventDisconnectionListener.onCommonNetworkEventDisconnectionUpdate(cause);
        }
    }

    void onCommonSettingsStateAllSettingsChangedUpdate() {
        if (this._ARCommandCommonSettingsStateAllSettingsChangedListener != null) {
            this._ARCommandCommonSettingsStateAllSettingsChangedListener.onCommonSettingsStateAllSettingsChangedUpdate();
        }
    }

    void onCommonSettingsStateResetChangedUpdate() {
        if (this._ARCommandCommonSettingsStateResetChangedListener != null) {
            this._ARCommandCommonSettingsStateResetChangedListener.onCommonSettingsStateResetChangedUpdate();
        }
    }

    void onCommonSettingsStateProductNameChangedUpdate(String name) {
        if (this._ARCommandCommonSettingsStateProductNameChangedListener != null) {
            this._ARCommandCommonSettingsStateProductNameChangedListener.onCommonSettingsStateProductNameChangedUpdate(name);
        }
    }

    void onCommonSettingsStateProductVersionChangedUpdate(String software, String hardware) {
        if (this._ARCommandCommonSettingsStateProductVersionChangedListener != null) {
            this._ARCommandCommonSettingsStateProductVersionChangedListener.onCommonSettingsStateProductVersionChangedUpdate(software, hardware);
        }
    }

    void onCommonSettingsStateProductSerialHighChangedUpdate(String high) {
        if (this._ARCommandCommonSettingsStateProductSerialHighChangedListener != null) {
            this._ARCommandCommonSettingsStateProductSerialHighChangedListener.onCommonSettingsStateProductSerialHighChangedUpdate(high);
        }
    }

    void onCommonSettingsStateProductSerialLowChangedUpdate(String low) {
        if (this._ARCommandCommonSettingsStateProductSerialLowChangedListener != null) {
            this._ARCommandCommonSettingsStateProductSerialLowChangedListener.onCommonSettingsStateProductSerialLowChangedUpdate(low);
        }
    }

    void onCommonSettingsStateCountryChangedUpdate(String code) {
        if (this._ARCommandCommonSettingsStateCountryChangedListener != null) {
            this._ARCommandCommonSettingsStateCountryChangedListener.onCommonSettingsStateCountryChangedUpdate(code);
        }
    }

    void onCommonSettingsStateAutoCountryChangedUpdate(byte automatic) {
        if (this._ARCommandCommonSettingsStateAutoCountryChangedListener != null) {
            this._ARCommandCommonSettingsStateAutoCountryChangedListener.onCommonSettingsStateAutoCountryChangedUpdate(automatic);
        }
    }

    void onCommonCommonStateAllStatesChangedUpdate() {
        if (this._ARCommandCommonCommonStateAllStatesChangedListener != null) {
            this._ARCommandCommonCommonStateAllStatesChangedListener.onCommonCommonStateAllStatesChangedUpdate();
        }
    }

    void onCommonCommonStateBatteryStateChangedUpdate(byte percent) {
        if (this._ARCommandCommonCommonStateBatteryStateChangedListener != null) {
            this._ARCommandCommonCommonStateBatteryStateChangedListener.onCommonCommonStateBatteryStateChangedUpdate(percent);
        }
    }

    void onCommonCommonStateMassStorageStateListChangedUpdate(byte mass_storage_id, String name) {
        if (this._ARCommandCommonCommonStateMassStorageStateListChangedListener != null) {
            this._ARCommandCommonCommonStateMassStorageStateListChangedListener.onCommonCommonStateMassStorageStateListChangedUpdate(mass_storage_id, name);
        }
    }

    void onCommonCommonStateMassStorageInfoStateListChangedUpdate(byte mass_storage_id, int size, int used_size, byte plugged, byte full, byte internal) {
        if (this.f941x8aea128e != null) {
            this.f941x8aea128e.onCommonCommonStateMassStorageInfoStateListChangedUpdate(mass_storage_id, size, used_size, plugged, full, internal);
        }
    }

    void onCommonCommonStateCurrentDateChangedUpdate(String date) {
        if (this._ARCommandCommonCommonStateCurrentDateChangedListener != null) {
            this._ARCommandCommonCommonStateCurrentDateChangedListener.onCommonCommonStateCurrentDateChangedUpdate(date);
        }
    }

    void onCommonCommonStateCurrentTimeChangedUpdate(String time) {
        if (this._ARCommandCommonCommonStateCurrentTimeChangedListener != null) {
            this._ARCommandCommonCommonStateCurrentTimeChangedListener.onCommonCommonStateCurrentTimeChangedUpdate(time);
        }
    }

    void onCommonCommonStateMassStorageInfoRemainingListChangedUpdate(int free_space, short rec_time, int photo_remaining) {
        if (this.f940x202b2a89 != null) {
            this.f940x202b2a89.onCommonCommonStateMassStorageInfoRemainingListChangedUpdate(free_space, rec_time, photo_remaining);
        }
    }

    void onCommonCommonStateWifiSignalChangedUpdate(short rssi) {
        if (this._ARCommandCommonCommonStateWifiSignalChangedListener != null) {
            this._ARCommandCommonCommonStateWifiSignalChangedListener.onCommonCommonStateWifiSignalChangedUpdate(rssi);
        }
    }

    void onCommonCommonStateSensorsStatesListChangedUpdate(C1415x829404be sensorName, byte sensorState) {
        if (this._ARCommandCommonCommonStateSensorsStatesListChangedListener != null) {
            this._ARCommandCommonCommonStateSensorsStatesListChangedListener.onCommonCommonStateSensorsStatesListChangedUpdate(sensorName, sensorState);
        }
    }

    void onCommonCommonStateProductModelUpdate(ARCOMMANDS_COMMON_COMMONSTATE_PRODUCTMODEL_MODEL_ENUM model) {
        if (this._ARCommandCommonCommonStateProductModelListener != null) {
            this._ARCommandCommonCommonStateProductModelListener.onCommonCommonStateProductModelUpdate(model);
        }
    }

    void onCommonCommonStateCountryListKnownUpdate(byte listFlags, String countryCodes) {
        if (this._ARCommandCommonCommonStateCountryListKnownListener != null) {
            this._ARCommandCommonCommonStateCountryListKnownListener.onCommonCommonStateCountryListKnownUpdate(listFlags, countryCodes);
        }
    }

    void onCommonCommonStateDeprecatedMassStorageContentChangedUpdate(byte mass_storage_id, short nbPhotos, short nbVideos, short nbPuds, short nbCrashLogs) {
        if (this.f938x10db7ca3 != null) {
            this.f938x10db7ca3.onCommonCommonStateDeprecatedMassStorageContentChangedUpdate(mass_storage_id, nbPhotos, nbVideos, nbPuds, nbCrashLogs);
        }
    }

    void onCommonCommonStateMassStorageContentUpdate(byte mass_storage_id, short nbPhotos, short nbVideos, short nbPuds, short nbCrashLogs, short nbRawPhotos) {
        if (this._ARCommandCommonCommonStateMassStorageContentListener != null) {
            this._ARCommandCommonCommonStateMassStorageContentListener.onCommonCommonStateMassStorageContentUpdate(mass_storage_id, nbPhotos, nbVideos, nbPuds, nbCrashLogs, nbRawPhotos);
        }
    }

    void onCommonCommonStateMassStorageContentForCurrentRunUpdate(byte mass_storage_id, short nbPhotos, short nbVideos, short nbRawPhotos) {
        if (this.f939xb79aabdd != null) {
            this.f939xb79aabdd.onCommonCommonStateMassStorageContentForCurrentRunUpdate(mass_storage_id, nbPhotos, nbVideos, nbRawPhotos);
        }
    }

    void onCommonCommonStateVideoRecordingTimestampUpdate(long startTimestamp, long stopTimestamp) {
        if (this._ARCommandCommonCommonStateVideoRecordingTimestampListener != null) {
            this._ARCommandCommonCommonStateVideoRecordingTimestampListener.onCommonCommonStateVideoRecordingTimestampUpdate(startTimestamp, stopTimestamp);
        }
    }

    void onCommonOverHeatStateOverHeatChangedUpdate() {
        if (this._ARCommandCommonOverHeatStateOverHeatChangedListener != null) {
            this._ARCommandCommonOverHeatStateOverHeatChangedListener.onCommonOverHeatStateOverHeatChangedUpdate();
        }
    }

    void onCommonOverHeatStateOverHeatRegulationChangedUpdate(byte regulationType) {
        if (this._ARCommandCommonOverHeatStateOverHeatRegulationChangedListener != null) {
            this._ARCommandCommonOverHeatStateOverHeatRegulationChangedListener.onCommonOverHeatStateOverHeatRegulationChangedUpdate(regulationType);
        }
    }

    void onCommonWifiSettingsStateOutdoorSettingsChangedUpdate(byte outdoor) {
        if (this._ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener != null) {
            this._ARCommandCommonWifiSettingsStateOutdoorSettingsChangedListener.onCommonWifiSettingsStateOutdoorSettingsChangedUpdate(outdoor);
        }
    }

    void onCommonMavlinkStateMavlinkFilePlayingStateChangedUpdate(C1417x4c05ad79 state, String filepath, C1418xb82bc83c type) {
        if (this.f943x2ce80fa8 != null) {
            this.f943x2ce80fa8.onCommonMavlinkStateMavlinkFilePlayingStateChangedUpdate(state, filepath, type);
        }
    }

    void onCommonMavlinkStateMavlinkPlayErrorStateChangedUpdate(C1419x7fd94000 error) {
        if (this._ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener != null) {
            this._ARCommandCommonMavlinkStateMavlinkPlayErrorStateChangedListener.onCommonMavlinkStateMavlinkPlayErrorStateChangedUpdate(error);
        }
    }

    void onCommonMavlinkStateMissionItemExecutedUpdate(int idx) {
        if (this._ARCommandCommonMavlinkStateMissionItemExecutedListener != null) {
            this._ARCommandCommonMavlinkStateMissionItemExecutedListener.onCommonMavlinkStateMissionItemExecutedUpdate(idx);
        }
    }

    /* renamed from: onCommonFlightPlanSettingsStateReturnHomeOnDisconnectChangedUpdate */
    void m50xc4fa28(byte state, byte isReadOnly) {
        if (this.f942xc86a0dcf != null) {
            this.f942xc86a0dcf.m26xc4fa28(state, isReadOnly);
        }
    }

    void onCommonCalibrationStateMagnetoCalibrationStateChangedUpdate(byte xAxisCalibration, byte yAxisCalibration, byte zAxisCalibration, byte calibrationFailed) {
        if (this.f936x23f28229 != null) {
            this.f936x23f28229.onCommonCalibrationStateMagnetoCalibrationStateChangedUpdate(xAxisCalibration, yAxisCalibration, zAxisCalibration, calibrationFailed);
        }
    }

    void onCommonCalibrationStateMagnetoCalibrationRequiredStateUpdate(byte required) {
        if (this.f934x70788dd4 != null) {
            this.f934x70788dd4.onCommonCalibrationStateMagnetoCalibrationRequiredStateUpdate(required);
        }
    }

    /* renamed from: onCommonCalibrationStateMagnetoCalibrationAxisToCalibrateChangedUpdate */
    void m49x995de328(C1411xddcba4d8 axis) {
        if (this.f933x16d698cf != null) {
            this.f933x16d698cf.m25x995de328(axis);
        }
    }

    void onCommonCalibrationStateMagnetoCalibrationStartedChangedUpdate(byte started) {
        if (this.f935x99a793b9 != null) {
            this.f935x99a793b9.onCommonCalibrationStateMagnetoCalibrationStartedChangedUpdate(started);
        }
    }

    void onCommonCalibrationStatePitotCalibrationStateChangedUpdate(C1412xd2bdba57 state, byte lastError) {
        if (this.f937xf6b738e != null) {
            this.f937xf6b738e.onCommonCalibrationStatePitotCalibrationStateChangedUpdate(state, lastError);
        }
    }

    void onCommonCameraSettingsStateCameraSettingsChangedUpdate(float fov, float panMax, float panMin, float tiltMax, float tiltMin) {
        if (this._ARCommandCommonCameraSettingsStateCameraSettingsChangedListener != null) {
            this._ARCommandCommonCameraSettingsStateCameraSettingsChangedListener.onCommonCameraSettingsStateCameraSettingsChangedUpdate(fov, panMax, panMin, tiltMax, tiltMin);
        }
    }

    void onCommonFlightPlanStateAvailabilityStateChangedUpdate(byte AvailabilityState) {
        if (this._ARCommandCommonFlightPlanStateAvailabilityStateChangedListener != null) {
            this._ARCommandCommonFlightPlanStateAvailabilityStateChangedListener.onCommonFlightPlanStateAvailabilityStateChangedUpdate(AvailabilityState);
        }
    }

    void onCommonFlightPlanStateComponentStateListChangedUpdate(C1416x6f7e0035 component, byte State) {
        if (this._ARCommandCommonFlightPlanStateComponentStateListChangedListener != null) {
            this._ARCommandCommonFlightPlanStateComponentStateListChangedListener.onCommonFlightPlanStateComponentStateListChangedUpdate(component, State);
        }
    }

    void onCommonFlightPlanStateLockStateChangedUpdate(byte LockState) {
        if (this._ARCommandCommonFlightPlanStateLockStateChangedListener != null) {
            this._ARCommandCommonFlightPlanStateLockStateChangedListener.onCommonFlightPlanStateLockStateChangedUpdate(LockState);
        }
    }

    void onCommonFlightPlanEventStartingErrorEventUpdate() {
        if (this._ARCommandCommonFlightPlanEventStartingErrorEventListener != null) {
            this._ARCommandCommonFlightPlanEventStartingErrorEventListener.onCommonFlightPlanEventStartingErrorEventUpdate();
        }
    }

    void onCommonFlightPlanEventSpeedBridleEventUpdate() {
        if (this._ARCommandCommonFlightPlanEventSpeedBridleEventListener != null) {
            this._ARCommandCommonFlightPlanEventSpeedBridleEventListener.onCommonFlightPlanEventSpeedBridleEventUpdate();
        }
    }

    void onCommonARLibsVersionsStateControllerLibARCommandsVersionUpdate(String version) {
        if (this.f928x1c77077b != null) {
            this.f928x1c77077b.onCommonARLibsVersionsStateControllerLibARCommandsVersionUpdate(version);
        }
    }

    /* renamed from: onCommonARLibsVersionsStateSkyControllerLibARCommandsVersionUpdate */
    void m48x370e9153(String version) {
        if (this.f930x92aa863a != null) {
            this.f930x92aa863a.m24x370e9153(version);
        }
    }

    void onCommonARLibsVersionsStateDeviceLibARCommandsVersionUpdate(String version) {
        if (this.f929x847277b5 != null) {
            this.f929x847277b5.onCommonARLibsVersionsStateDeviceLibARCommandsVersionUpdate(version);
        }
    }

    void onCommonAudioStateAudioStreamingRunningUpdate(byte running) {
        if (this._ARCommandCommonAudioStateAudioStreamingRunningListener != null) {
            this._ARCommandCommonAudioStateAudioStreamingRunningListener.onCommonAudioStateAudioStreamingRunningUpdate(running);
        }
    }

    void onCommonHeadlightsStateIntensityChangedUpdate(byte left, byte right) {
        if (this._ARCommandCommonHeadlightsStateIntensityChangedListener != null) {
            this._ARCommandCommonHeadlightsStateIntensityChangedListener.onCommonHeadlightsStateIntensityChangedUpdate(left, right);
        }
    }

    void onCommonAnimationsStateListUpdate(ARCOMMANDS_COMMON_ANIMATIONSSTATE_LIST_ANIM_ENUM anim, ARCOMMANDS_COMMON_ANIMATIONSSTATE_LIST_STATE_ENUM state, ARCOMMANDS_COMMON_ANIMATIONSSTATE_LIST_ERROR_ENUM error) {
        if (this._ARCommandCommonAnimationsStateListListener != null) {
            this._ARCommandCommonAnimationsStateListListener.onCommonAnimationsStateListUpdate(anim, state, error);
        }
    }

    void onCommonAccessoryStateSupportedAccessoriesListChangedUpdate(C1410xcb8ad78b accessory) {
        if (this.f932xe6c849e3 != null) {
            this.f932xe6c849e3.onCommonAccessoryStateSupportedAccessoriesListChangedUpdate(accessory);
        }
    }

    void onCommonAccessoryStateAccessoryConfigChangedUpdate(C1409xc48b501 newAccessory, C1408x2a262b05 error) {
        if (this._ARCommandCommonAccessoryStateAccessoryConfigChangedListener != null) {
            this._ARCommandCommonAccessoryStateAccessoryConfigChangedListener.onCommonAccessoryStateAccessoryConfigChangedUpdate(newAccessory, error);
        }
    }

    void onCommonAccessoryStateAccessoryConfigModificationEnabledUpdate(byte enabled) {
        if (this.f931xbb58a8a != null) {
            this.f931xbb58a8a.onCommonAccessoryStateAccessoryConfigModificationEnabledUpdate(enabled);
        }
    }

    void onCommonChargerStateMaxChargeRateChangedUpdate(ARCOMMANDS_COMMON_CHARGERSTATE_MAXCHARGERATECHANGED_RATE_ENUM rate) {
        if (this._ARCommandCommonChargerStateMaxChargeRateChangedListener != null) {
            this._ARCommandCommonChargerStateMaxChargeRateChangedListener.onCommonChargerStateMaxChargeRateChangedUpdate(rate);
        }
    }

    void onCommonChargerStateCurrentChargeStateChangedUpdate(C1414xbac7a5e1 status, C1413x59fb7652 phase) {
        if (this._ARCommandCommonChargerStateCurrentChargeStateChangedListener != null) {
            this._ARCommandCommonChargerStateCurrentChargeStateChangedListener.onCommonChargerStateCurrentChargeStateChangedUpdate(status, phase);
        }
    }

    void onCommonChargerStateLastChargeRateChangedUpdate(ARCOMMANDS_COMMON_CHARGERSTATE_LASTCHARGERATECHANGED_RATE_ENUM rate) {
        if (this._ARCommandCommonChargerStateLastChargeRateChangedListener != null) {
            this._ARCommandCommonChargerStateLastChargeRateChangedListener.onCommonChargerStateLastChargeRateChangedUpdate(rate);
        }
    }

    void onCommonChargerStateChargingInfoUpdate(ARCOMMANDS_COMMON_CHARGERSTATE_CHARGINGINFO_PHASE_ENUM phase, ARCOMMANDS_COMMON_CHARGERSTATE_CHARGINGINFO_RATE_ENUM rate, byte intensity, byte fullChargingTime) {
        if (this._ARCommandCommonChargerStateChargingInfoListener != null) {
            this._ARCommandCommonChargerStateChargingInfoListener.onCommonChargerStateChargingInfoUpdate(phase, rate, intensity, fullChargingTime);
        }
    }

    void onCommonRunStateRunIdChangedUpdate(String runId) {
        if (this._ARCommandCommonRunStateRunIdChangedListener != null) {
            this._ARCommandCommonRunStateRunIdChangedListener.onCommonRunStateRunIdChangedUpdate(runId);
        }
    }

    void onControllerInfoGpsUpdate(double latitude, double longitude, float altitude, float horizontal_accuracy, float vertical_accuracy, float north_speed, float east_speed, float down_speed, double timestamp) {
        if (this._ARCommandControllerInfoGpsListener != null) {
            r0._ARCommandControllerInfoGpsListener.onControllerInfoGpsUpdate(latitude, longitude, altitude, horizontal_accuracy, vertical_accuracy, north_speed, east_speed, down_speed, timestamp);
        }
    }

    void onControllerInfoBarometerUpdate(float pressure, double timestamp) {
        if (this._ARCommandControllerInfoBarometerListener != null) {
            this._ARCommandControllerInfoBarometerListener.onControllerInfoBarometerUpdate(pressure, timestamp);
        }
    }

    void onDebugGetAllSettingsUpdate() {
        if (this._ARCommandDebugGetAllSettingsListener != null) {
            this._ARCommandDebugGetAllSettingsListener.onDebugGetAllSettingsUpdate();
        }
    }

    void onDebugSetSettingUpdate(short id, String value) {
        if (this._ARCommandDebugSetSettingListener != null) {
            this._ARCommandDebugSetSettingListener.onDebugSetSettingUpdate(id, value);
        }
    }

    void onDebugSettingsInfoUpdate(byte list_flags, short id, String label, ARCOMMANDS_DEBUG_SETTING_TYPE_ENUM type, ARCOMMANDS_DEBUG_SETTING_MODE_ENUM mode, String range_min, String range_max, String range_step, String value) {
        if (this._ARCommandDebugSettingsInfoListener != null) {
            r0._ARCommandDebugSettingsInfoListener.onDebugSettingsInfoUpdate(list_flags, id, label, type, mode, range_min, range_max, range_step, value);
        }
    }

    void onDebugSettingsListUpdate(short id, String value) {
        if (this._ARCommandDebugSettingsListListener != null) {
            this._ARCommandDebugSettingsListListener.onDebugSettingsListUpdate(id, value);
        }
    }

    void onDroneManagerDiscoverDronesUpdate() {
        if (this._ARCommandDroneManagerDiscoverDronesListener != null) {
            this._ARCommandDroneManagerDiscoverDronesListener.onDroneManagerDiscoverDronesUpdate();
        }
    }

    void onDroneManagerConnectUpdate(String serial, String key) {
        if (this._ARCommandDroneManagerConnectListener != null) {
            this._ARCommandDroneManagerConnectListener.onDroneManagerConnectUpdate(serial, key);
        }
    }

    void onDroneManagerForgetUpdate(String serial) {
        if (this._ARCommandDroneManagerForgetListener != null) {
            this._ARCommandDroneManagerForgetListener.onDroneManagerForgetUpdate(serial);
        }
    }

    void onDroneManagerDroneListItemUpdate(String serial, short model, String name, byte connection_order, byte active, byte visible, ARCOMMANDS_DRONE_MANAGER_SECURITY_ENUM security, byte has_saved_key, byte rssi, byte list_flags) {
        if (this._ARCommandDroneManagerDroneListItemListener != null) {
            r0._ARCommandDroneManagerDroneListItemListener.onDroneManagerDroneListItemUpdate(serial, model, name, connection_order, active, visible, security, has_saved_key, rssi, list_flags);
        }
    }

    void onDroneManagerConnectionStateUpdate(ARCOMMANDS_DRONE_MANAGER_CONNECTION_STATE_ENUM state, String serial, short model, String name) {
        if (this._ARCommandDroneManagerConnectionStateListener != null) {
            this._ARCommandDroneManagerConnectionStateListener.onDroneManagerConnectionStateUpdate(state, serial, model, name);
        }
    }

    void onDroneManagerAuthenticationFailedUpdate(String serial, short model, String name) {
        if (this._ARCommandDroneManagerAuthenticationFailedListener != null) {
            this._ARCommandDroneManagerAuthenticationFailedListener.onDroneManagerAuthenticationFailedUpdate(serial, model, name);
        }
    }

    void onDroneManagerConnectionRefusedUpdate(String serial, short model, String name) {
        if (this._ARCommandDroneManagerConnectionRefusedListener != null) {
            this._ARCommandDroneManagerConnectionRefusedListener.onDroneManagerConnectionRefusedUpdate(serial, model, name);
        }
    }

    void onDroneManagerKnownDroneItemUpdate(String serial, short model, String name, ARCOMMANDS_DRONE_MANAGER_SECURITY_ENUM security, byte has_saved_key, byte list_flags) {
        if (this._ARCommandDroneManagerKnownDroneItemListener != null) {
            this._ARCommandDroneManagerKnownDroneItemListener.onDroneManagerKnownDroneItemUpdate(serial, model, name, security, has_saved_key, list_flags);
        }
    }

    void onFollowMeStartUpdate(ARCOMMANDS_FOLLOW_ME_MODE_ENUM mode) {
        if (this._ARCommandFollowMeStartListener != null) {
            this._ARCommandFollowMeStartListener.onFollowMeStartUpdate(mode);
        }
    }

    void onFollowMeStopUpdate() {
        if (this._ARCommandFollowMeStopListener != null) {
            this._ARCommandFollowMeStopListener.onFollowMeStopUpdate();
        }
    }

    void onFollowMeConfigureGeographicUpdate(byte use_default, float distance, float elevation, float azimuth) {
        if (this._ARCommandFollowMeConfigureGeographicListener != null) {
            this._ARCommandFollowMeConfigureGeographicListener.onFollowMeConfigureGeographicUpdate(use_default, distance, elevation, azimuth);
        }
    }

    void onFollowMeConfigureRelativeUpdate(byte use_default, float distance, float elevation, float azimuth) {
        if (this._ARCommandFollowMeConfigureRelativeListener != null) {
            this._ARCommandFollowMeConfigureRelativeListener.onFollowMeConfigureRelativeUpdate(use_default, distance, elevation, azimuth);
        }
    }

    void onFollowMeStopAnimationUpdate() {
        if (this._ARCommandFollowMeStopAnimationListener != null) {
            this._ARCommandFollowMeStopAnimationListener.onFollowMeStopAnimationUpdate();
        }
    }

    void onFollowMeStartHelicoidAnimUpdate(byte use_default, float speed, float revolution_number, float vertical_distance) {
        if (this._ARCommandFollowMeStartHelicoidAnimListener != null) {
            this._ARCommandFollowMeStartHelicoidAnimListener.onFollowMeStartHelicoidAnimUpdate(use_default, speed, revolution_number, vertical_distance);
        }
    }

    void onFollowMeStartSwingAnimUpdate(byte use_default, float speed, float vertical_distance) {
        if (this._ARCommandFollowMeStartSwingAnimListener != null) {
            this._ARCommandFollowMeStartSwingAnimListener.onFollowMeStartSwingAnimUpdate(use_default, speed, vertical_distance);
        }
    }

    void onFollowMeStartBoomerangAnimUpdate(byte use_default, float speed, float distance) {
        if (this._ARCommandFollowMeStartBoomerangAnimListener != null) {
            this._ARCommandFollowMeStartBoomerangAnimListener.onFollowMeStartBoomerangAnimUpdate(use_default, speed, distance);
        }
    }

    void onFollowMeStartCandleAnimUpdate(byte use_default, float speed, float vertical_distance) {
        if (this._ARCommandFollowMeStartCandleAnimListener != null) {
            this._ARCommandFollowMeStartCandleAnimListener.onFollowMeStartCandleAnimUpdate(use_default, speed, vertical_distance);
        }
    }

    void onFollowMeStartDollySlideAnimUpdate(byte use_default, float speed, float angle, float horizontal_distance) {
        if (this._ARCommandFollowMeStartDollySlideAnimListener != null) {
            this._ARCommandFollowMeStartDollySlideAnimListener.onFollowMeStartDollySlideAnimUpdate(use_default, speed, angle, horizontal_distance);
        }
    }

    void onFollowMeTargetFramingPositionUpdate(byte horizontal, byte vertical) {
        if (this._ARCommandFollowMeTargetFramingPositionListener != null) {
            this._ARCommandFollowMeTargetFramingPositionListener.onFollowMeTargetFramingPositionUpdate(horizontal, vertical);
        }
    }

    void onFollowMeTargetImageDetectionUpdate(float target_azimuth, float target_elevation, float change_of_scale, byte confidence_index, byte is_new_selection, long timestamp) {
        if (this._ARCommandFollowMeTargetImageDetectionListener != null) {
            r0._ARCommandFollowMeTargetImageDetectionListener.onFollowMeTargetImageDetectionUpdate(target_azimuth, target_elevation, change_of_scale, confidence_index, is_new_selection, timestamp);
        }
    }

    void onFollowMeStateUpdate(ARCOMMANDS_FOLLOW_ME_MODE_ENUM mode, ARCOMMANDS_FOLLOW_ME_BEHAVIOR_ENUM behavior, ARCOMMANDS_FOLLOW_ME_ANIMATION_ENUM animation, short animation_available) {
        if (this._ARCommandFollowMeStateListener != null) {
            this._ARCommandFollowMeStateListener.onFollowMeStateUpdate(mode, behavior, animation, animation_available);
        }
    }

    void onFollowMeModeInfoUpdate(ARCOMMANDS_FOLLOW_ME_MODE_ENUM mode, short missing_requirements, short improvements) {
        if (this._ARCommandFollowMeModeInfoListener != null) {
            this._ARCommandFollowMeModeInfoListener.onFollowMeModeInfoUpdate(mode, missing_requirements, improvements);
        }
    }

    void onFollowMeGeographicConfigUpdate(byte use_default, float distance, float elevation, float azimuth) {
        if (this._ARCommandFollowMeGeographicConfigListener != null) {
            this._ARCommandFollowMeGeographicConfigListener.onFollowMeGeographicConfigUpdate(use_default, distance, elevation, azimuth);
        }
    }

    void onFollowMeRelativeConfigUpdate(byte use_default, float distance, float elevation, float azimuth) {
        if (this._ARCommandFollowMeRelativeConfigListener != null) {
            this._ARCommandFollowMeRelativeConfigListener.onFollowMeRelativeConfigUpdate(use_default, distance, elevation, azimuth);
        }
    }

    void onFollowMeTargetTrajectoryUpdate(double latitude, double longitude, float altitude, float north_speed, float east_speed, float down_speed) {
        if (this._ARCommandFollowMeTargetTrajectoryListener != null) {
            r0._ARCommandFollowMeTargetTrajectoryListener.onFollowMeTargetTrajectoryUpdate(latitude, longitude, altitude, north_speed, east_speed, down_speed);
        }
    }

    void onFollowMeHelicoidAnimConfigUpdate(byte use_default, float speed, float revolution_nb, float vertical_distance) {
        if (this._ARCommandFollowMeHelicoidAnimConfigListener != null) {
            this._ARCommandFollowMeHelicoidAnimConfigListener.onFollowMeHelicoidAnimConfigUpdate(use_default, speed, revolution_nb, vertical_distance);
        }
    }

    void onFollowMeSwingAnimConfigUpdate(byte use_default, float speed, float vertical_distance) {
        if (this._ARCommandFollowMeSwingAnimConfigListener != null) {
            this._ARCommandFollowMeSwingAnimConfigListener.onFollowMeSwingAnimConfigUpdate(use_default, speed, vertical_distance);
        }
    }

    void onFollowMeBoomerangAnimConfigUpdate(byte use_default, float speed, float distance) {
        if (this._ARCommandFollowMeBoomerangAnimConfigListener != null) {
            this._ARCommandFollowMeBoomerangAnimConfigListener.onFollowMeBoomerangAnimConfigUpdate(use_default, speed, distance);
        }
    }

    void onFollowMeCandleAnimConfigUpdate(byte use_default, float speed, float vertical_distance) {
        if (this._ARCommandFollowMeCandleAnimConfigListener != null) {
            this._ARCommandFollowMeCandleAnimConfigListener.onFollowMeCandleAnimConfigUpdate(use_default, speed, vertical_distance);
        }
    }

    void onFollowMeDollySlideAnimConfigUpdate(byte use_default, float speed, float angle, float horizontal_distance) {
        if (this._ARCommandFollowMeDollySlideAnimConfigListener != null) {
            this._ARCommandFollowMeDollySlideAnimConfigListener.onFollowMeDollySlideAnimConfigUpdate(use_default, speed, angle, horizontal_distance);
        }
    }

    void onFollowMeTargetFramingPositionChangedUpdate(byte horizontal, byte vertical) {
        if (this._ARCommandFollowMeTargetFramingPositionChangedListener != null) {
            this._ARCommandFollowMeTargetFramingPositionChangedListener.onFollowMeTargetFramingPositionChangedUpdate(horizontal, vertical);
        }
    }

    void onFollowMeTargetImageDetectionStateUpdate(ARCOMMANDS_FOLLOW_ME_IMAGE_DETECTION_STATUS_ENUM state) {
        if (this._ARCommandFollowMeTargetImageDetectionStateListener != null) {
            this._ARCommandFollowMeTargetImageDetectionStateListener.onFollowMeTargetImageDetectionStateUpdate(state);
        }
    }

    void onJumpingSumoPilotingPCMDUpdate(byte flag, byte speed, byte turn) {
        if (this._ARCommandJumpingSumoPilotingPCMDListener != null) {
            this._ARCommandJumpingSumoPilotingPCMDListener.onJumpingSumoPilotingPCMDUpdate(flag, speed, turn);
        }
    }

    void onJumpingSumoPilotingPostureUpdate(ARCOMMANDS_JUMPINGSUMO_PILOTING_POSTURE_TYPE_ENUM type) {
        if (this._ARCommandJumpingSumoPilotingPostureListener != null) {
            this._ARCommandJumpingSumoPilotingPostureListener.onJumpingSumoPilotingPostureUpdate(type);
        }
    }

    void onJumpingSumoPilotingAddCapOffsetUpdate(float offset) {
        if (this._ARCommandJumpingSumoPilotingAddCapOffsetListener != null) {
            this._ARCommandJumpingSumoPilotingAddCapOffsetListener.onJumpingSumoPilotingAddCapOffsetUpdate(offset);
        }
    }

    void onJumpingSumoAnimationsJumpStopUpdate() {
        if (this._ARCommandJumpingSumoAnimationsJumpStopListener != null) {
            this._ARCommandJumpingSumoAnimationsJumpStopListener.onJumpingSumoAnimationsJumpStopUpdate();
        }
    }

    void onJumpingSumoAnimationsJumpCancelUpdate() {
        if (this._ARCommandJumpingSumoAnimationsJumpCancelListener != null) {
            this._ARCommandJumpingSumoAnimationsJumpCancelListener.onJumpingSumoAnimationsJumpCancelUpdate();
        }
    }

    void onJumpingSumoAnimationsJumpLoadUpdate() {
        if (this._ARCommandJumpingSumoAnimationsJumpLoadListener != null) {
            this._ARCommandJumpingSumoAnimationsJumpLoadListener.onJumpingSumoAnimationsJumpLoadUpdate();
        }
    }

    void onJumpingSumoAnimationsJumpUpdate(ARCOMMANDS_JUMPINGSUMO_ANIMATIONS_JUMP_TYPE_ENUM type) {
        if (this._ARCommandJumpingSumoAnimationsJumpListener != null) {
            this._ARCommandJumpingSumoAnimationsJumpListener.onJumpingSumoAnimationsJumpUpdate(type);
        }
    }

    void onJumpingSumoAnimationsSimpleAnimationUpdate(ARCOMMANDS_JUMPINGSUMO_ANIMATIONS_SIMPLEANIMATION_ID_ENUM id) {
        if (this._ARCommandJumpingSumoAnimationsSimpleAnimationListener != null) {
            this._ARCommandJumpingSumoAnimationsSimpleAnimationListener.onJumpingSumoAnimationsSimpleAnimationUpdate(id);
        }
    }

    void onJumpingSumoMediaRecordPictureUpdate(byte mass_storage_id) {
        if (this._ARCommandJumpingSumoMediaRecordPictureListener != null) {
            this._ARCommandJumpingSumoMediaRecordPictureListener.onJumpingSumoMediaRecordPictureUpdate(mass_storage_id);
        }
    }

    void onJumpingSumoMediaRecordVideoUpdate(ARCOMMANDS_JUMPINGSUMO_MEDIARECORD_VIDEO_RECORD_ENUM record, byte mass_storage_id) {
        if (this._ARCommandJumpingSumoMediaRecordVideoListener != null) {
            this._ARCommandJumpingSumoMediaRecordVideoListener.onJumpingSumoMediaRecordVideoUpdate(record, mass_storage_id);
        }
    }

    void onJumpingSumoMediaRecordPictureV2Update() {
        if (this._ARCommandJumpingSumoMediaRecordPictureV2Listener != null) {
            this._ARCommandJumpingSumoMediaRecordPictureV2Listener.onJumpingSumoMediaRecordPictureV2Update();
        }
    }

    void onJumpingSumoMediaRecordVideoV2Update(ARCOMMANDS_JUMPINGSUMO_MEDIARECORD_VIDEOV2_RECORD_ENUM record) {
        if (this._ARCommandJumpingSumoMediaRecordVideoV2Listener != null) {
            this._ARCommandJumpingSumoMediaRecordVideoV2Listener.onJumpingSumoMediaRecordVideoV2Update(record);
        }
    }

    void onJumpingSumoNetworkSettingsWifiSelectionUpdate(ARCOMMANDS_JUMPINGSUMO_NETWORKSETTINGS_WIFISELECTION_TYPE_ENUM type, ARCOMMANDS_JUMPINGSUMO_NETWORKSETTINGS_WIFISELECTION_BAND_ENUM band, byte channel) {
        if (this._ARCommandJumpingSumoNetworkSettingsWifiSelectionListener != null) {
            this._ARCommandJumpingSumoNetworkSettingsWifiSelectionListener.onJumpingSumoNetworkSettingsWifiSelectionUpdate(type, band, channel);
        }
    }

    void onJumpingSumoNetworkWifiScanUpdate(ARCOMMANDS_JUMPINGSUMO_NETWORK_WIFISCAN_BAND_ENUM band) {
        if (this._ARCommandJumpingSumoNetworkWifiScanListener != null) {
            this._ARCommandJumpingSumoNetworkWifiScanListener.onJumpingSumoNetworkWifiScanUpdate(band);
        }
    }

    void onJumpingSumoNetworkWifiAuthChannelUpdate() {
        if (this._ARCommandJumpingSumoNetworkWifiAuthChannelListener != null) {
            this._ARCommandJumpingSumoNetworkWifiAuthChannelListener.onJumpingSumoNetworkWifiAuthChannelUpdate();
        }
    }

    void onJumpingSumoAudioSettingsMasterVolumeUpdate(byte volume) {
        if (this._ARCommandJumpingSumoAudioSettingsMasterVolumeListener != null) {
            this._ARCommandJumpingSumoAudioSettingsMasterVolumeListener.onJumpingSumoAudioSettingsMasterVolumeUpdate(volume);
        }
    }

    void onJumpingSumoAudioSettingsThemeUpdate(ARCOMMANDS_JUMPINGSUMO_AUDIOSETTINGS_THEME_THEME_ENUM theme) {
        if (this._ARCommandJumpingSumoAudioSettingsThemeListener != null) {
            this._ARCommandJumpingSumoAudioSettingsThemeListener.onJumpingSumoAudioSettingsThemeUpdate(theme);
        }
    }

    void onJumpingSumoRoadPlanAllScriptsMetadataUpdate() {
        if (this._ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener != null) {
            this._ARCommandJumpingSumoRoadPlanAllScriptsMetadataListener.onJumpingSumoRoadPlanAllScriptsMetadataUpdate();
        }
    }

    void onJumpingSumoRoadPlanScriptUploadedUpdate(String uuid, String md5Hash) {
        if (this._ARCommandJumpingSumoRoadPlanScriptUploadedListener != null) {
            this._ARCommandJumpingSumoRoadPlanScriptUploadedListener.onJumpingSumoRoadPlanScriptUploadedUpdate(uuid, md5Hash);
        }
    }

    void onJumpingSumoRoadPlanScriptDeleteUpdate(String uuid) {
        if (this._ARCommandJumpingSumoRoadPlanScriptDeleteListener != null) {
            this._ARCommandJumpingSumoRoadPlanScriptDeleteListener.onJumpingSumoRoadPlanScriptDeleteUpdate(uuid);
        }
    }

    void onJumpingSumoRoadPlanPlayScriptUpdate(String uuid) {
        if (this._ARCommandJumpingSumoRoadPlanPlayScriptListener != null) {
            this._ARCommandJumpingSumoRoadPlanPlayScriptListener.onJumpingSumoRoadPlanPlayScriptUpdate(uuid);
        }
    }

    void onJumpingSumoSpeedSettingsOutdoorUpdate(byte outdoor) {
        if (this._ARCommandJumpingSumoSpeedSettingsOutdoorListener != null) {
            this._ARCommandJumpingSumoSpeedSettingsOutdoorListener.onJumpingSumoSpeedSettingsOutdoorUpdate(outdoor);
        }
    }

    void onJumpingSumoMediaStreamingVideoEnableUpdate(byte enable) {
        if (this._ARCommandJumpingSumoMediaStreamingVideoEnableListener != null) {
            this._ARCommandJumpingSumoMediaStreamingVideoEnableListener.onJumpingSumoMediaStreamingVideoEnableUpdate(enable);
        }
    }

    void onJumpingSumoVideoSettingsAutorecordUpdate(byte enabled) {
        if (this._ARCommandJumpingSumoVideoSettingsAutorecordListener != null) {
            this._ARCommandJumpingSumoVideoSettingsAutorecordListener.onJumpingSumoVideoSettingsAutorecordUpdate(enabled);
        }
    }

    void onJumpingSumoPilotingStatePostureChangedUpdate(ARCOMMANDS_JUMPINGSUMO_PILOTINGSTATE_POSTURECHANGED_STATE_ENUM state) {
        if (this._ARCommandJumpingSumoPilotingStatePostureChangedListener != null) {
            this._ARCommandJumpingSumoPilotingStatePostureChangedListener.onJumpingSumoPilotingStatePostureChangedUpdate(state);
        }
    }

    void onJumpingSumoPilotingStateAlertStateChangedUpdate(C1438x7c2fba54 state) {
        if (this._ARCommandJumpingSumoPilotingStateAlertStateChangedListener != null) {
            this._ARCommandJumpingSumoPilotingStateAlertStateChangedListener.onJumpingSumoPilotingStateAlertStateChangedUpdate(state);
        }
    }

    void onJumpingSumoPilotingStateSpeedChangedUpdate(byte speed, short realSpeed) {
        if (this._ARCommandJumpingSumoPilotingStateSpeedChangedListener != null) {
            this._ARCommandJumpingSumoPilotingStateSpeedChangedListener.onJumpingSumoPilotingStateSpeedChangedUpdate(speed, realSpeed);
        }
    }

    void onJumpingSumoAnimationsStateJumpLoadChangedUpdate(C1420x356bf738 state) {
        if (this._ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener != null) {
            this._ARCommandJumpingSumoAnimationsStateJumpLoadChangedListener.onJumpingSumoAnimationsStateJumpLoadChangedUpdate(state);
        }
    }

    void onJumpingSumoAnimationsStateJumpTypeChangedUpdate(C1422x47b9548c state) {
        if (this._ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener != null) {
            this._ARCommandJumpingSumoAnimationsStateJumpTypeChangedListener.onJumpingSumoAnimationsStateJumpTypeChangedUpdate(state);
        }
    }

    void onJumpingSumoAnimationsStateJumpMotorProblemChangedUpdate(C1421xd8d31ac5 error) {
        if (this.f944x8fcbc8b != null) {
            this.f944x8fcbc8b.onJumpingSumoAnimationsStateJumpMotorProblemChangedUpdate(error);
        }
    }

    void onJumpingSumoSettingsStateProductGPSVersionChangedUpdate(String software, String hardware) {
        if (this.f953xf0f980bc != null) {
            this.f953xf0f980bc.onJumpingSumoSettingsStateProductGPSVersionChangedUpdate(software, hardware);
        }
    }

    void onJumpingSumoMediaRecordStatePictureStateChangedUpdate(byte state, byte mass_storage_id) {
        if (this._ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener != null) {
            this._ARCommandJumpingSumoMediaRecordStatePictureStateChangedListener.onJumpingSumoMediaRecordStatePictureStateChangedUpdate(state, mass_storage_id);
        }
    }

    void onJumpingSumoMediaRecordStateVideoStateChangedUpdate(C1432x72607e46 state, byte mass_storage_id) {
        if (this._ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener != null) {
            this._ARCommandJumpingSumoMediaRecordStateVideoStateChangedListener.onJumpingSumoMediaRecordStateVideoStateChangedUpdate(state, mass_storage_id);
        }
    }

    void onJumpingSumoMediaRecordStatePictureStateChangedV2Update(C1429x7bb19b87 state, C1428xeac86070 error) {
        if (this.f946xa0af1018 != null) {
            this.f946xa0af1018.onJumpingSumoMediaRecordStatePictureStateChangedV2Update(state, error);
        }
    }

    void onJumpingSumoMediaRecordStateVideoStateChangedV2Update(C1431xaa35342a state, C1430x194bf913 error) {
        if (this._ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener != null) {
            this._ARCommandJumpingSumoMediaRecordStateVideoStateChangedV2Listener.onJumpingSumoMediaRecordStateVideoStateChangedV2Update(state, error);
        }
    }

    void onJumpingSumoMediaRecordEventPictureEventChangedUpdate(C1425x3640371a event, C1424x5d1a4c6c error) {
        if (this._ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener != null) {
            this._ARCommandJumpingSumoMediaRecordEventPictureEventChangedListener.onJumpingSumoMediaRecordEventPictureEventChangedUpdate(event, error);
        }
    }

    void onJumpingSumoMediaRecordEventVideoEventChangedUpdate(C1427xdbe3e63d event, C1426x2bdfb8f error) {
        if (this._ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener != null) {
            this._ARCommandJumpingSumoMediaRecordEventVideoEventChangedListener.onJumpingSumoMediaRecordEventVideoEventChangedUpdate(event, error);
        }
    }

    void onJumpingSumoNetworkSettingsStateWifiSelectionChangedUpdate(C1435xe6e65c36 type, C1434x51790a1b band, byte channel) {
        if (this.f948xe3977cae != null) {
            this.f948xe3977cae.onJumpingSumoNetworkSettingsStateWifiSelectionChangedUpdate(type, band, channel);
        }
    }

    void onJumpingSumoNetworkStateWifiScanListChangedUpdate(String ssid, short rssi, C1437xba7e29a1 band, byte channel) {
        if (this._ARCommandJumpingSumoNetworkStateWifiScanListChangedListener != null) {
            this._ARCommandJumpingSumoNetworkStateWifiScanListChangedListener.onJumpingSumoNetworkStateWifiScanListChangedUpdate(ssid, rssi, band, channel);
        }
    }

    void onJumpingSumoNetworkStateAllWifiScanChangedUpdate() {
        if (this._ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener != null) {
            this._ARCommandJumpingSumoNetworkStateAllWifiScanChangedListener.onJumpingSumoNetworkStateAllWifiScanChangedUpdate();
        }
    }

    void onJumpingSumoNetworkStateWifiAuthChannelListChangedUpdate(C1436x615c112b band, byte channel, byte in_or_out) {
        if (this.f950xfeae0c44 != null) {
            this.f950xfeae0c44.onJumpingSumoNetworkStateWifiAuthChannelListChangedUpdate(band, channel, in_or_out);
        }
    }

    void onJumpingSumoNetworkStateAllWifiAuthChannelChangedUpdate() {
        if (this.f949xe22539c3 != null) {
            this.f949xe22539c3.onJumpingSumoNetworkStateAllWifiAuthChannelChangedUpdate();
        }
    }

    void onJumpingSumoNetworkStateLinkQualityChangedUpdate(byte quality) {
        if (this._ARCommandJumpingSumoNetworkStateLinkQualityChangedListener != null) {
            this._ARCommandJumpingSumoNetworkStateLinkQualityChangedListener.onJumpingSumoNetworkStateLinkQualityChangedUpdate(quality);
        }
    }

    void onJumpingSumoAudioSettingsStateMasterVolumeChangedUpdate(byte volume) {
        if (this.f945xeb4d8a77 != null) {
            this.f945xeb4d8a77.onJumpingSumoAudioSettingsStateMasterVolumeChangedUpdate(volume);
        }
    }

    void onJumpingSumoAudioSettingsStateThemeChangedUpdate(C1423xa948c651 theme) {
        if (this._ARCommandJumpingSumoAudioSettingsStateThemeChangedListener != null) {
            this._ARCommandJumpingSumoAudioSettingsStateThemeChangedListener.onJumpingSumoAudioSettingsStateThemeChangedUpdate(theme);
        }
    }

    void onJumpingSumoRoadPlanStateScriptMetadataListChangedUpdate(String uuid, byte version, String product, String name, long lastModified) {
        if (this.f952xc9416965 != null) {
            this.f952xc9416965.onJumpingSumoRoadPlanStateScriptMetadataListChangedUpdate(uuid, version, product, name, lastModified);
        }
    }

    void onJumpingSumoRoadPlanStateAllScriptsMetadataChangedUpdate() {
        if (this.f951x69ff6e07 != null) {
            this.f951x69ff6e07.onJumpingSumoRoadPlanStateAllScriptsMetadataChangedUpdate();
        }
    }

    void onJumpingSumoRoadPlanStateScriptUploadChangedUpdate(C1441x86ef9dbb resultCode) {
        if (this._ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener != null) {
            this._ARCommandJumpingSumoRoadPlanStateScriptUploadChangedListener.onJumpingSumoRoadPlanStateScriptUploadChangedUpdate(resultCode);
        }
    }

    void onJumpingSumoRoadPlanStateScriptDeleteChangedUpdate(C1440x28c026d1 resultCode) {
        if (this._ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener != null) {
            this._ARCommandJumpingSumoRoadPlanStateScriptDeleteChangedListener.onJumpingSumoRoadPlanStateScriptDeleteChangedUpdate(resultCode);
        }
    }

    void onJumpingSumoRoadPlanStatePlayScriptChangedUpdate(C1439x633744e8 resultCode) {
        if (this._ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener != null) {
            this._ARCommandJumpingSumoRoadPlanStatePlayScriptChangedListener.onJumpingSumoRoadPlanStatePlayScriptChangedUpdate(resultCode);
        }
    }

    void onJumpingSumoSpeedSettingsStateOutdoorChangedUpdate(byte outdoor) {
        if (this._ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener != null) {
            this._ARCommandJumpingSumoSpeedSettingsStateOutdoorChangedListener.onJumpingSumoSpeedSettingsStateOutdoorChangedUpdate(outdoor);
        }
    }

    void onJumpingSumoMediaStreamingStateVideoEnableChangedUpdate(C1433x444690cf enabled) {
        if (this.f947x81193640 != null) {
            this.f947x81193640.onJumpingSumoMediaStreamingStateVideoEnableChangedUpdate(enabled);
        }
    }

    void onJumpingSumoVideoSettingsStateAutorecordChangedUpdate(byte enabled) {
        if (this._ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener != null) {
            this._ARCommandJumpingSumoVideoSettingsStateAutorecordChangedListener.onJumpingSumoVideoSettingsStateAutorecordChangedUpdate(enabled);
        }
    }

    void onMapperGrabUpdate(int buttons, int axes) {
        if (this._ARCommandMapperGrabListener != null) {
            this._ARCommandMapperGrabListener.onMapperGrabUpdate(buttons, axes);
        }
    }

    void onMapperMapButtonActionUpdate(short product, ARCOMMANDS_MAPPER_BUTTON_ACTION_ENUM action, int buttons) {
        if (this._ARCommandMapperMapButtonActionListener != null) {
            this._ARCommandMapperMapButtonActionListener.onMapperMapButtonActionUpdate(product, action, buttons);
        }
    }

    void onMapperMapAxisActionUpdate(short product, ARCOMMANDS_MAPPER_AXIS_ACTION_ENUM action, int axis, int buttons) {
        if (this._ARCommandMapperMapAxisActionListener != null) {
            this._ARCommandMapperMapAxisActionListener.onMapperMapAxisActionUpdate(product, action, axis, buttons);
        }
    }

    void onMapperResetMappingUpdate(short product) {
        if (this._ARCommandMapperResetMappingListener != null) {
            this._ARCommandMapperResetMappingListener.onMapperResetMappingUpdate(product);
        }
    }

    void onMapperSetExpoUpdate(short product, int axis, ARCOMMANDS_MAPPER_EXPO_TYPE_ENUM expo) {
        if (this._ARCommandMapperSetExpoListener != null) {
            this._ARCommandMapperSetExpoListener.onMapperSetExpoUpdate(product, axis, expo);
        }
    }

    void onMapperSetInvertedUpdate(short product, int axis, byte inverted) {
        if (this._ARCommandMapperSetInvertedListener != null) {
            this._ARCommandMapperSetInvertedListener.onMapperSetInvertedUpdate(product, axis, inverted);
        }
    }

    void onMapperGrabStateUpdate(int buttons, int axes, int buttons_state) {
        if (this._ARCommandMapperGrabStateListener != null) {
            this._ARCommandMapperGrabStateListener.onMapperGrabStateUpdate(buttons, axes, buttons_state);
        }
    }

    void onMapperGrabButtonEventUpdate(int button, ARCOMMANDS_MAPPER_BUTTON_EVENT_ENUM event) {
        if (this._ARCommandMapperGrabButtonEventListener != null) {
            this._ARCommandMapperGrabButtonEventListener.onMapperGrabButtonEventUpdate(button, event);
        }
    }

    void onMapperGrabAxisEventUpdate(int axis, byte value) {
        if (this._ARCommandMapperGrabAxisEventListener != null) {
            this._ARCommandMapperGrabAxisEventListener.onMapperGrabAxisEventUpdate(axis, value);
        }
    }

    void onMapperButtonMappingItemUpdate(int uid, short product, ARCOMMANDS_MAPPER_BUTTON_ACTION_ENUM action, int buttons, byte list_flags) {
        if (this._ARCommandMapperButtonMappingItemListener != null) {
            this._ARCommandMapperButtonMappingItemListener.onMapperButtonMappingItemUpdate(uid, product, action, buttons, list_flags);
        }
    }

    void onMapperAxisMappingItemUpdate(int uid, short product, ARCOMMANDS_MAPPER_AXIS_ACTION_ENUM action, int axis, int buttons, byte list_flags) {
        if (this._ARCommandMapperAxisMappingItemListener != null) {
            this._ARCommandMapperAxisMappingItemListener.onMapperAxisMappingItemUpdate(uid, product, action, axis, buttons, list_flags);
        }
    }

    void onMapperApplicationAxisEventUpdate(ARCOMMANDS_MAPPER_AXIS_ACTION_ENUM action, byte value) {
        if (this._ARCommandMapperApplicationAxisEventListener != null) {
            this._ARCommandMapperApplicationAxisEventListener.onMapperApplicationAxisEventUpdate(action, value);
        }
    }

    void onMapperApplicationButtonEventUpdate(ARCOMMANDS_MAPPER_BUTTON_ACTION_ENUM action) {
        if (this._ARCommandMapperApplicationButtonEventListener != null) {
            this._ARCommandMapperApplicationButtonEventListener.onMapperApplicationButtonEventUpdate(action);
        }
    }

    void onMapperExpoMapItemUpdate(int uid, short product, int axis, ARCOMMANDS_MAPPER_EXPO_TYPE_ENUM expo, byte list_flags) {
        if (this._ARCommandMapperExpoMapItemListener != null) {
            this._ARCommandMapperExpoMapItemListener.onMapperExpoMapItemUpdate(uid, product, axis, expo, list_flags);
        }
    }

    void onMapperInvertedMapItemUpdate(int uid, short product, int axis, byte inverted, byte list_flags) {
        if (this._ARCommandMapperInvertedMapItemListener != null) {
            this._ARCommandMapperInvertedMapItemListener.onMapperInvertedMapItemUpdate(uid, product, axis, inverted, list_flags);
        }
    }

    void onMapperActiveProductUpdate(short product) {
        if (this._ARCommandMapperActiveProductListener != null) {
            this._ARCommandMapperActiveProductListener.onMapperActiveProductUpdate(product);
        }
    }

    void onMapperMiniMapButtonActionUpdate(byte modes, ARCOMMANDS_MAPPER_MINI_BUTTON_ACTION_ENUM action, int buttons) {
        if (this._ARCommandMapperMiniMapButtonActionListener != null) {
            this._ARCommandMapperMiniMapButtonActionListener.onMapperMiniMapButtonActionUpdate(modes, action, buttons);
        }
    }

    void onMapperMiniMapAxisActionUpdate(byte modes, ARCOMMANDS_MAPPER_MINI_AXIS_ACTION_ENUM action, byte axis, int buttons) {
        if (this._ARCommandMapperMiniMapAxisActionListener != null) {
            this._ARCommandMapperMiniMapAxisActionListener.onMapperMiniMapAxisActionUpdate(modes, action, axis, buttons);
        }
    }

    void onMapperMiniResetMappingUpdate(byte modes) {
        if (this._ARCommandMapperMiniResetMappingListener != null) {
            this._ARCommandMapperMiniResetMappingListener.onMapperMiniResetMappingUpdate(modes);
        }
    }

    void onMapperMiniButtonMappingItemUpdate(short uid, byte modes, ARCOMMANDS_MAPPER_MINI_BUTTON_ACTION_ENUM action, int buttons, byte list_flags) {
        if (this._ARCommandMapperMiniButtonMappingItemListener != null) {
            this._ARCommandMapperMiniButtonMappingItemListener.onMapperMiniButtonMappingItemUpdate(uid, modes, action, buttons, list_flags);
        }
    }

    void onMapperMiniAxisMappingItemUpdate(short uid, byte modes, ARCOMMANDS_MAPPER_MINI_AXIS_ACTION_ENUM action, byte axis, int buttons, byte list_flags) {
        if (this._ARCommandMapperMiniAxisMappingItemListener != null) {
            this._ARCommandMapperMiniAxisMappingItemListener.onMapperMiniAxisMappingItemUpdate(uid, modes, action, axis, buttons, list_flags);
        }
    }

    void onMiniDronePilotingFlatTrimUpdate() {
        if (this._ARCommandMiniDronePilotingFlatTrimListener != null) {
            this._ARCommandMiniDronePilotingFlatTrimListener.onMiniDronePilotingFlatTrimUpdate();
        }
    }

    void onMiniDronePilotingTakeOffUpdate() {
        if (this._ARCommandMiniDronePilotingTakeOffListener != null) {
            this._ARCommandMiniDronePilotingTakeOffListener.onMiniDronePilotingTakeOffUpdate();
        }
    }

    void onMiniDronePilotingPCMDUpdate(byte flag, byte roll, byte pitch, byte yaw, byte gaz, int timestamp) {
        if (this._ARCommandMiniDronePilotingPCMDListener != null) {
            this._ARCommandMiniDronePilotingPCMDListener.onMiniDronePilotingPCMDUpdate(flag, roll, pitch, yaw, gaz, timestamp);
        }
    }

    void onMiniDronePilotingLandingUpdate() {
        if (this._ARCommandMiniDronePilotingLandingListener != null) {
            this._ARCommandMiniDronePilotingLandingListener.onMiniDronePilotingLandingUpdate();
        }
    }

    void onMiniDronePilotingEmergencyUpdate() {
        if (this._ARCommandMiniDronePilotingEmergencyListener != null) {
            this._ARCommandMiniDronePilotingEmergencyListener.onMiniDronePilotingEmergencyUpdate();
        }
    }

    void onMiniDronePilotingAutoTakeOffModeUpdate(byte state) {
        if (this._ARCommandMiniDronePilotingAutoTakeOffModeListener != null) {
            this._ARCommandMiniDronePilotingAutoTakeOffModeListener.onMiniDronePilotingAutoTakeOffModeUpdate(state);
        }
    }

    void onMiniDronePilotingFlyingModeUpdate(ARCOMMANDS_MINIDRONE_PILOTING_FLYINGMODE_MODE_ENUM mode) {
        if (this._ARCommandMiniDronePilotingFlyingModeListener != null) {
            this._ARCommandMiniDronePilotingFlyingModeListener.onMiniDronePilotingFlyingModeUpdate(mode);
        }
    }

    void onMiniDronePilotingPlaneGearBoxUpdate(ARCOMMANDS_MINIDRONE_PILOTING_PLANEGEARBOX_STATE_ENUM state) {
        if (this._ARCommandMiniDronePilotingPlaneGearBoxListener != null) {
            this._ARCommandMiniDronePilotingPlaneGearBoxListener.onMiniDronePilotingPlaneGearBoxUpdate(state);
        }
    }

    void onMiniDroneAnimationsFlipUpdate(ARCOMMANDS_MINIDRONE_ANIMATIONS_FLIP_DIRECTION_ENUM direction) {
        if (this._ARCommandMiniDroneAnimationsFlipListener != null) {
            this._ARCommandMiniDroneAnimationsFlipListener.onMiniDroneAnimationsFlipUpdate(direction);
        }
    }

    void onMiniDroneAnimationsCapUpdate(short offset) {
        if (this._ARCommandMiniDroneAnimationsCapListener != null) {
            this._ARCommandMiniDroneAnimationsCapListener.onMiniDroneAnimationsCapUpdate(offset);
        }
    }

    void onMiniDroneMediaRecordPictureUpdate(byte mass_storage_id) {
        if (this._ARCommandMiniDroneMediaRecordPictureListener != null) {
            this._ARCommandMiniDroneMediaRecordPictureListener.onMiniDroneMediaRecordPictureUpdate(mass_storage_id);
        }
    }

    void onMiniDroneMediaRecordPictureV2Update() {
        if (this._ARCommandMiniDroneMediaRecordPictureV2Listener != null) {
            this._ARCommandMiniDroneMediaRecordPictureV2Listener.onMiniDroneMediaRecordPictureV2Update();
        }
    }

    void onMiniDronePilotingSettingsMaxAltitudeUpdate(float current) {
        if (this._ARCommandMiniDronePilotingSettingsMaxAltitudeListener != null) {
            this._ARCommandMiniDronePilotingSettingsMaxAltitudeListener.onMiniDronePilotingSettingsMaxAltitudeUpdate(current);
        }
    }

    void onMiniDronePilotingSettingsMaxTiltUpdate(float current) {
        if (this._ARCommandMiniDronePilotingSettingsMaxTiltListener != null) {
            this._ARCommandMiniDronePilotingSettingsMaxTiltListener.onMiniDronePilotingSettingsMaxTiltUpdate(current);
        }
    }

    void onMiniDronePilotingSettingsBankedTurnUpdate(byte value) {
        if (this._ARCommandMiniDronePilotingSettingsBankedTurnListener != null) {
            this._ARCommandMiniDronePilotingSettingsBankedTurnListener.onMiniDronePilotingSettingsBankedTurnUpdate(value);
        }
    }

    void onMiniDroneSpeedSettingsMaxVerticalSpeedUpdate(float current) {
        if (this._ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener != null) {
            this._ARCommandMiniDroneSpeedSettingsMaxVerticalSpeedListener.onMiniDroneSpeedSettingsMaxVerticalSpeedUpdate(current);
        }
    }

    void onMiniDroneSpeedSettingsMaxRotationSpeedUpdate(float current) {
        if (this._ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener != null) {
            this._ARCommandMiniDroneSpeedSettingsMaxRotationSpeedListener.onMiniDroneSpeedSettingsMaxRotationSpeedUpdate(current);
        }
    }

    void onMiniDroneSpeedSettingsWheelsUpdate(byte present) {
        if (this._ARCommandMiniDroneSpeedSettingsWheelsListener != null) {
            this._ARCommandMiniDroneSpeedSettingsWheelsListener.onMiniDroneSpeedSettingsWheelsUpdate(present);
        }
    }

    void onMiniDroneSpeedSettingsMaxHorizontalSpeedUpdate(float current) {
        if (this._ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener != null) {
            this._ARCommandMiniDroneSpeedSettingsMaxHorizontalSpeedListener.onMiniDroneSpeedSettingsMaxHorizontalSpeedUpdate(current);
        }
    }

    void onMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedUpdate(float current) {
        if (this.f958x58cb30fe != null) {
            this.f958x58cb30fe.onMiniDroneSpeedSettingsMaxPlaneModeRotationSpeedUpdate(current);
        }
    }

    void onMiniDroneSettingsCutOutModeUpdate(byte enable) {
        if (this._ARCommandMiniDroneSettingsCutOutModeListener != null) {
            this._ARCommandMiniDroneSettingsCutOutModeListener.onMiniDroneSettingsCutOutModeUpdate(enable);
        }
    }

    void onMiniDroneGPSControllerLatitudeForRunUpdate(double latitude) {
        if (this._ARCommandMiniDroneGPSControllerLatitudeForRunListener != null) {
            this._ARCommandMiniDroneGPSControllerLatitudeForRunListener.onMiniDroneGPSControllerLatitudeForRunUpdate(latitude);
        }
    }

    void onMiniDroneGPSControllerLongitudeForRunUpdate(double longitude) {
        if (this._ARCommandMiniDroneGPSControllerLongitudeForRunListener != null) {
            this._ARCommandMiniDroneGPSControllerLongitudeForRunListener.onMiniDroneGPSControllerLongitudeForRunUpdate(longitude);
        }
    }

    void onMiniDroneConfigurationControllerTypeUpdate(String type) {
        if (this._ARCommandMiniDroneConfigurationControllerTypeListener != null) {
            this._ARCommandMiniDroneConfigurationControllerTypeListener.onMiniDroneConfigurationControllerTypeUpdate(type);
        }
    }

    void onMiniDroneConfigurationControllerNameUpdate(String name) {
        if (this._ARCommandMiniDroneConfigurationControllerNameListener != null) {
            this._ARCommandMiniDroneConfigurationControllerNameListener.onMiniDroneConfigurationControllerNameUpdate(name);
        }
    }

    void onMiniDroneUsbAccessoryLightControlUpdate(byte id, ARCOMMANDS_MINIDRONE_USBACCESSORY_LIGHTCONTROL_MODE_ENUM mode, byte intensity) {
        if (this._ARCommandMiniDroneUsbAccessoryLightControlListener != null) {
            this._ARCommandMiniDroneUsbAccessoryLightControlListener.onMiniDroneUsbAccessoryLightControlUpdate(id, mode, intensity);
        }
    }

    void onMiniDroneUsbAccessoryClawControlUpdate(byte id, ARCOMMANDS_MINIDRONE_USBACCESSORY_CLAWCONTROL_ACTION_ENUM action) {
        if (this._ARCommandMiniDroneUsbAccessoryClawControlListener != null) {
            this._ARCommandMiniDroneUsbAccessoryClawControlListener.onMiniDroneUsbAccessoryClawControlUpdate(id, action);
        }
    }

    void onMiniDroneUsbAccessoryGunControlUpdate(byte id, ARCOMMANDS_MINIDRONE_USBACCESSORY_GUNCONTROL_ACTION_ENUM action) {
        if (this._ARCommandMiniDroneUsbAccessoryGunControlListener != null) {
            this._ARCommandMiniDroneUsbAccessoryGunControlListener.onMiniDroneUsbAccessoryGunControlUpdate(id, action);
        }
    }

    void onMiniDroneRemoteControllerSetPairedRemoteUpdate(short msb_mac, short mid_mac, short lsb_mac) {
        if (this._ARCommandMiniDroneRemoteControllerSetPairedRemoteListener != null) {
            this._ARCommandMiniDroneRemoteControllerSetPairedRemoteListener.onMiniDroneRemoteControllerSetPairedRemoteUpdate(msb_mac, mid_mac, lsb_mac);
        }
    }

    void onMiniDronePilotingStateFlatTrimChangedUpdate() {
        if (this._ARCommandMiniDronePilotingStateFlatTrimChangedListener != null) {
            this._ARCommandMiniDronePilotingStateFlatTrimChangedListener.onMiniDronePilotingStateFlatTrimChangedUpdate();
        }
    }

    void onMiniDronePilotingStateFlyingStateChangedUpdate(ARCOMMANDS_MINIDRONE_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandMiniDronePilotingStateFlyingStateChangedListener != null) {
            this._ARCommandMiniDronePilotingStateFlyingStateChangedListener.onMiniDronePilotingStateFlyingStateChangedUpdate(state);
        }
    }

    void onMiniDronePilotingStateAlertStateChangedUpdate(ARCOMMANDS_MINIDRONE_PILOTINGSTATE_ALERTSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandMiniDronePilotingStateAlertStateChangedListener != null) {
            this._ARCommandMiniDronePilotingStateAlertStateChangedListener.onMiniDronePilotingStateAlertStateChangedUpdate(state);
        }
    }

    void onMiniDronePilotingStateAutoTakeOffModeChangedUpdate(byte state) {
        if (this._ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener != null) {
            this._ARCommandMiniDronePilotingStateAutoTakeOffModeChangedListener.onMiniDronePilotingStateAutoTakeOffModeChangedUpdate(state);
        }
    }

    void onMiniDronePilotingStateFlyingModeChangedUpdate(ARCOMMANDS_MINIDRONE_PILOTINGSTATE_FLYINGMODECHANGED_MODE_ENUM mode) {
        if (this._ARCommandMiniDronePilotingStateFlyingModeChangedListener != null) {
            this._ARCommandMiniDronePilotingStateFlyingModeChangedListener.onMiniDronePilotingStateFlyingModeChangedUpdate(mode);
        }
    }

    void onMiniDronePilotingStatePlaneGearBoxChangedUpdate(C1446x17d2c516 state) {
        if (this._ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener != null) {
            this._ARCommandMiniDronePilotingStatePlaneGearBoxChangedListener.onMiniDronePilotingStatePlaneGearBoxChangedUpdate(state);
        }
    }

    void onMiniDroneMediaRecordStatePictureStateChangedUpdate(byte state, byte mass_storage_id) {
        if (this._ARCommandMiniDroneMediaRecordStatePictureStateChangedListener != null) {
            this._ARCommandMiniDroneMediaRecordStatePictureStateChangedListener.onMiniDroneMediaRecordStatePictureStateChangedUpdate(state, mass_storage_id);
        }
    }

    void onMiniDroneMediaRecordStatePictureStateChangedV2Update(C1445xb7ac1c70 state, C1444x26c2e159 error) {
        if (this._ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener != null) {
            this._ARCommandMiniDroneMediaRecordStatePictureStateChangedV2Listener.onMiniDroneMediaRecordStatePictureStateChangedV2Update(state, error);
        }
    }

    void onMiniDroneMediaRecordEventPictureEventChangedUpdate(C1443x2587de43 event, C1442x4c61f395 error) {
        if (this._ARCommandMiniDroneMediaRecordEventPictureEventChangedListener != null) {
            this._ARCommandMiniDroneMediaRecordEventPictureEventChangedListener.onMiniDroneMediaRecordEventPictureEventChangedUpdate(event, error);
        }
    }

    void onMiniDronePilotingSettingsStateMaxAltitudeChangedUpdate(float current, float min, float max) {
        if (this.f955x293ec200 != null) {
            this.f955x293ec200.onMiniDronePilotingSettingsStateMaxAltitudeChangedUpdate(current, min, max);
        }
    }

    void onMiniDronePilotingSettingsStateMaxTiltChangedUpdate(float current, float min, float max) {
        if (this._ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener != null) {
            this._ARCommandMiniDronePilotingSettingsStateMaxTiltChangedListener.onMiniDronePilotingSettingsStateMaxTiltChangedUpdate(current, min, max);
        }
    }

    void onMiniDronePilotingSettingsStateBankedTurnChangedUpdate(byte state) {
        if (this.f954x647c6232 != null) {
            this.f954x647c6232.onMiniDronePilotingSettingsStateBankedTurnChangedUpdate(state);
        }
    }

    void onMiniDroneSpeedSettingsStateMaxVerticalSpeedChangedUpdate(float current, float min, float max) {
        if (this.f962x8a1f8bee != null) {
            this.f962x8a1f8bee.onMiniDroneSpeedSettingsStateMaxVerticalSpeedChangedUpdate(current, min, max);
        }
    }

    void onMiniDroneSpeedSettingsStateMaxRotationSpeedChangedUpdate(float current, float min, float max) {
        if (this.f961x3ddfdff6 != null) {
            this.f961x3ddfdff6.onMiniDroneSpeedSettingsStateMaxRotationSpeedChangedUpdate(current, min, max);
        }
    }

    void onMiniDroneSpeedSettingsStateWheelsChangedUpdate(byte present) {
        if (this._ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener != null) {
            this._ARCommandMiniDroneSpeedSettingsStateWheelsChangedListener.onMiniDroneSpeedSettingsStateWheelsChangedUpdate(present);
        }
    }

    void onMiniDroneSpeedSettingsStateMaxHorizontalSpeedChangedUpdate(float current, float min, float max) {
        if (this.f959x467623dc != null) {
            this.f959x467623dc.onMiniDroneSpeedSettingsStateMaxHorizontalSpeedChangedUpdate(current, min, max);
        }
    }

    /* renamed from: onMiniDroneSpeedSettingsStateMaxPlaneModeRotationSpeedChangedUpdate */
    void m51x7ca68d38(float current, float min, float max) {
        if (this.f960x7d78c567 != null) {
            this.f960x7d78c567.m27x7ca68d38(current, min, max);
        }
    }

    void onMiniDroneSettingsStateProductMotorsVersionChangedUpdate(byte motor, String type, String software, String hardware) {
        if (this.f957x61071655 != null) {
            this.f957x61071655.onMiniDroneSettingsStateProductMotorsVersionChangedUpdate(motor, type, software, hardware);
        }
    }

    void onMiniDroneSettingsStateProductInertialVersionChangedUpdate(String software, String hardware) {
        if (this.f956x27759fe9 != null) {
            this.f956x27759fe9.onMiniDroneSettingsStateProductInertialVersionChangedUpdate(software, hardware);
        }
    }

    void onMiniDroneSettingsStateCutOutModeChangedUpdate(byte enable) {
        if (this._ARCommandMiniDroneSettingsStateCutOutModeChangedListener != null) {
            this._ARCommandMiniDroneSettingsStateCutOutModeChangedListener.onMiniDroneSettingsStateCutOutModeChangedUpdate(enable);
        }
    }

    void onMiniDroneFloodControlStateFloodControlChangedUpdate(short delay) {
        if (this._ARCommandMiniDroneFloodControlStateFloodControlChangedListener != null) {
            this._ARCommandMiniDroneFloodControlStateFloodControlChangedListener.onMiniDroneFloodControlStateFloodControlChangedUpdate(delay);
        }
    }

    void onMiniDroneUsbAccessoryStateLightStateUpdate(byte id, ARCOMMANDS_MINIDRONE_USBACCESSORYSTATE_LIGHTSTATE_STATE_ENUM state, byte intensity, byte list_flags) {
        if (this._ARCommandMiniDroneUsbAccessoryStateLightStateListener != null) {
            this._ARCommandMiniDroneUsbAccessoryStateLightStateListener.onMiniDroneUsbAccessoryStateLightStateUpdate(id, state, intensity, list_flags);
        }
    }

    void onMiniDroneUsbAccessoryStateClawStateUpdate(byte id, ARCOMMANDS_MINIDRONE_USBACCESSORYSTATE_CLAWSTATE_STATE_ENUM state, byte list_flags) {
        if (this._ARCommandMiniDroneUsbAccessoryStateClawStateListener != null) {
            this._ARCommandMiniDroneUsbAccessoryStateClawStateListener.onMiniDroneUsbAccessoryStateClawStateUpdate(id, state, list_flags);
        }
    }

    void onMiniDroneUsbAccessoryStateGunStateUpdate(byte id, ARCOMMANDS_MINIDRONE_USBACCESSORYSTATE_GUNSTATE_STATE_ENUM state, byte list_flags) {
        if (this._ARCommandMiniDroneUsbAccessoryStateGunStateListener != null) {
            this._ARCommandMiniDroneUsbAccessoryStateGunStateListener.onMiniDroneUsbAccessoryStateGunStateUpdate(id, state, list_flags);
        }
    }

    void onMiniDroneNavigationDataStateDronePositionUpdate(float posx, float posy, short posz, short psi, short ts) {
        if (this._ARCommandMiniDroneNavigationDataStateDronePositionListener != null) {
            this._ARCommandMiniDroneNavigationDataStateDronePositionListener.onMiniDroneNavigationDataStateDronePositionUpdate(posx, posy, posz, psi, ts);
        }
    }

    void onPowerupPilotingPCMDUpdate(byte flag, byte throttle, byte roll) {
        if (this._ARCommandPowerupPilotingPCMDListener != null) {
            this._ARCommandPowerupPilotingPCMDListener.onPowerupPilotingPCMDUpdate(flag, throttle, roll);
        }
    }

    void onPowerupPilotingUserTakeOffUpdate(byte state) {
        if (this._ARCommandPowerupPilotingUserTakeOffListener != null) {
            this._ARCommandPowerupPilotingUserTakeOffListener.onPowerupPilotingUserTakeOffUpdate(state);
        }
    }

    void onPowerupPilotingMotorModeUpdate(ARCOMMANDS_POWERUP_PILOTING_MOTORMODE_MODE_ENUM mode) {
        if (this._ARCommandPowerupPilotingMotorModeListener != null) {
            this._ARCommandPowerupPilotingMotorModeListener.onPowerupPilotingMotorModeUpdate(mode);
        }
    }

    void onPowerupPilotingSettingsSetUpdate(ARCOMMANDS_POWERUP_PILOTINGSETTINGS_SET_SETTING_ENUM setting, float value) {
        if (this._ARCommandPowerupPilotingSettingsSetListener != null) {
            this._ARCommandPowerupPilotingSettingsSetListener.onPowerupPilotingSettingsSetUpdate(setting, value);
        }
    }

    void onPowerupMediaRecordPictureV2Update() {
        if (this._ARCommandPowerupMediaRecordPictureV2Listener != null) {
            this._ARCommandPowerupMediaRecordPictureV2Listener.onPowerupMediaRecordPictureV2Update();
        }
    }

    void onPowerupMediaRecordVideoV2Update(ARCOMMANDS_POWERUP_MEDIARECORD_VIDEOV2_RECORD_ENUM record) {
        if (this._ARCommandPowerupMediaRecordVideoV2Listener != null) {
            this._ARCommandPowerupMediaRecordVideoV2Listener.onPowerupMediaRecordVideoV2Update(record);
        }
    }

    void onPowerupNetworkSettingsWifiSelectionUpdate(ARCOMMANDS_POWERUP_NETWORKSETTINGS_WIFISELECTION_TYPE_ENUM type, ARCOMMANDS_POWERUP_NETWORKSETTINGS_WIFISELECTION_BAND_ENUM band, byte channel) {
        if (this._ARCommandPowerupNetworkSettingsWifiSelectionListener != null) {
            this._ARCommandPowerupNetworkSettingsWifiSelectionListener.onPowerupNetworkSettingsWifiSelectionUpdate(type, band, channel);
        }
    }

    void onPowerupNetworkWifiScanUpdate(ARCOMMANDS_POWERUP_NETWORK_WIFISCAN_BAND_ENUM band) {
        if (this._ARCommandPowerupNetworkWifiScanListener != null) {
            this._ARCommandPowerupNetworkWifiScanListener.onPowerupNetworkWifiScanUpdate(band);
        }
    }

    void onPowerupNetworkWifiAuthChannelUpdate() {
        if (this._ARCommandPowerupNetworkWifiAuthChannelListener != null) {
            this._ARCommandPowerupNetworkWifiAuthChannelListener.onPowerupNetworkWifiAuthChannelUpdate();
        }
    }

    void onPowerupMediaStreamingVideoEnableUpdate(byte enable) {
        if (this._ARCommandPowerupMediaStreamingVideoEnableListener != null) {
            this._ARCommandPowerupMediaStreamingVideoEnableListener.onPowerupMediaStreamingVideoEnableUpdate(enable);
        }
    }

    void onPowerupVideoSettingsAutorecordUpdate(byte enable) {
        if (this._ARCommandPowerupVideoSettingsAutorecordListener != null) {
            this._ARCommandPowerupVideoSettingsAutorecordListener.onPowerupVideoSettingsAutorecordUpdate(enable);
        }
    }

    void onPowerupVideoSettingsVideoModeUpdate(ARCOMMANDS_POWERUP_VIDEOSETTINGS_VIDEOMODE_MODE_ENUM mode) {
        if (this._ARCommandPowerupVideoSettingsVideoModeListener != null) {
            this._ARCommandPowerupVideoSettingsVideoModeListener.onPowerupVideoSettingsVideoModeUpdate(mode);
        }
    }

    void onPowerupSoundsBuzzUpdate(byte enable) {
        if (this._ARCommandPowerupSoundsBuzzListener != null) {
            this._ARCommandPowerupSoundsBuzzListener.onPowerupSoundsBuzzUpdate(enable);
        }
    }

    void onPowerupPilotingStateAlertStateChangedUpdate(ARCOMMANDS_POWERUP_PILOTINGSTATE_ALERTSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandPowerupPilotingStateAlertStateChangedListener != null) {
            this._ARCommandPowerupPilotingStateAlertStateChangedListener.onPowerupPilotingStateAlertStateChangedUpdate(state);
        }
    }

    void onPowerupPilotingStateFlyingStateChangedUpdate(ARCOMMANDS_POWERUP_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_ENUM state) {
        if (this._ARCommandPowerupPilotingStateFlyingStateChangedListener != null) {
            this._ARCommandPowerupPilotingStateFlyingStateChangedListener.onPowerupPilotingStateFlyingStateChangedUpdate(state);
        }
    }

    void onPowerupPilotingStateMotorModeChangedUpdate(ARCOMMANDS_POWERUP_PILOTINGSTATE_MOTORMODECHANGED_MODE_ENUM mode) {
        if (this._ARCommandPowerupPilotingStateMotorModeChangedListener != null) {
            this._ARCommandPowerupPilotingStateMotorModeChangedListener.onPowerupPilotingStateMotorModeChangedUpdate(mode);
        }
    }

    void onPowerupPilotingStateAttitudeChangedUpdate(float roll, float pitch, float yaw) {
        if (this._ARCommandPowerupPilotingStateAttitudeChangedListener != null) {
            this._ARCommandPowerupPilotingStateAttitudeChangedListener.onPowerupPilotingStateAttitudeChangedUpdate(roll, pitch, yaw);
        }
    }

    void onPowerupPilotingStateAltitudeChangedUpdate(float altitude) {
        if (this._ARCommandPowerupPilotingStateAltitudeChangedListener != null) {
            this._ARCommandPowerupPilotingStateAltitudeChangedListener.onPowerupPilotingStateAltitudeChangedUpdate(altitude);
        }
    }

    void onPowerupPilotingSettingsStateSettingChangedUpdate(C1457x93becaeb setting, float current, float min, float max, byte list_flags) {
        if (this._ARCommandPowerupPilotingSettingsStateSettingChangedListener != null) {
            this._ARCommandPowerupPilotingSettingsStateSettingChangedListener.onPowerupPilotingSettingsStateSettingChangedUpdate(setting, current, min, max, list_flags);
        }
    }

    void onPowerupMediaRecordStatePictureStateChangedV2Update(C1450x20b2c26f state, C1449x8fc98758 error) {
        if (this._ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener != null) {
            this._ARCommandPowerupMediaRecordStatePictureStateChangedV2Listener.onPowerupMediaRecordStatePictureStateChangedV2Update(state, error);
        }
    }

    void onPowerupMediaRecordStateVideoStateChangedV2Update(C1452xf3a2f512 state, C1451x62b9b9fb error) {
        if (this._ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener != null) {
            this._ARCommandPowerupMediaRecordStateVideoStateChangedV2Listener.onPowerupMediaRecordStateVideoStateChangedV2Update(state, error);
        }
    }

    void onPowerupMediaRecordEventPictureEventChangedUpdate(C1448x7fadf802 event, C1447xa6880d54 error) {
        if (this._ARCommandPowerupMediaRecordEventPictureEventChangedListener != null) {
            this._ARCommandPowerupMediaRecordEventPictureEventChangedListener.onPowerupMediaRecordEventPictureEventChangedUpdate(event, error);
        }
    }

    void onPowerupMediaRecordEventVideoEventChangedUpdate(ARCOMMANDS_POWERUP_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT_ENUM event, ARCOMMANDS_POWERUP_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR_ENUM error) {
        if (this._ARCommandPowerupMediaRecordEventVideoEventChangedListener != null) {
            this._ARCommandPowerupMediaRecordEventVideoEventChangedListener.onPowerupMediaRecordEventVideoEventChangedUpdate(event, error);
        }
    }

    void onPowerupNetworkSettingsStateWifiSelectionChangedUpdate(C1455x5039691e type, C1454xbacc1703 band, byte channel) {
        if (this.f963xf9d35ef6 != null) {
            this.f963xf9d35ef6.onPowerupNetworkSettingsStateWifiSelectionChangedUpdate(type, band, channel);
        }
    }

    void onPowerupNetworkStateWifiScanListChangedUpdate(String ssid, short rssi, ARCOMMANDS_POWERUP_NETWORKSTATE_WIFISCANLISTCHANGED_BAND_ENUM band, byte channel) {
        if (this._ARCommandPowerupNetworkStateWifiScanListChangedListener != null) {
            this._ARCommandPowerupNetworkStateWifiScanListChangedListener.onPowerupNetworkStateWifiScanListChangedUpdate(ssid, rssi, band, channel);
        }
    }

    void onPowerupNetworkStateAllWifiScanChangedUpdate() {
        if (this._ARCommandPowerupNetworkStateAllWifiScanChangedListener != null) {
            this._ARCommandPowerupNetworkStateAllWifiScanChangedListener.onPowerupNetworkStateAllWifiScanChangedUpdate();
        }
    }

    void onPowerupNetworkStateWifiAuthChannelListChangedUpdate(C1456x65d3813 band, byte channel, byte in_or_out) {
        if (this._ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener != null) {
            this._ARCommandPowerupNetworkStateWifiAuthChannelListChangedListener.onPowerupNetworkStateWifiAuthChannelListChangedUpdate(band, channel, in_or_out);
        }
    }

    void onPowerupNetworkStateAllWifiAuthChannelChangedUpdate() {
        if (this._ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener != null) {
            this._ARCommandPowerupNetworkStateAllWifiAuthChannelChangedListener.onPowerupNetworkStateAllWifiAuthChannelChangedUpdate();
        }
    }

    void onPowerupNetworkStateLinkQualityChangedUpdate(byte quality) {
        if (this._ARCommandPowerupNetworkStateLinkQualityChangedListener != null) {
            this._ARCommandPowerupNetworkStateLinkQualityChangedListener.onPowerupNetworkStateLinkQualityChangedUpdate(quality);
        }
    }

    void onPowerupMediaStreamingStateVideoEnableChangedUpdate(C1453xad999db7 enabled) {
        if (this._ARCommandPowerupMediaStreamingStateVideoEnableChangedListener != null) {
            this._ARCommandPowerupMediaStreamingStateVideoEnableChangedListener.onPowerupMediaStreamingStateVideoEnableChangedUpdate(enabled);
        }
    }

    void onPowerupVideoSettingsStateAutorecordChangedUpdate(byte enabled) {
        if (this._ARCommandPowerupVideoSettingsStateAutorecordChangedListener != null) {
            this._ARCommandPowerupVideoSettingsStateAutorecordChangedListener.onPowerupVideoSettingsStateAutorecordChangedUpdate(enabled);
        }
    }

    void onPowerupVideoSettingsStateVideoModeChangedUpdate(ARCOMMANDS_POWERUP_VIDEOSETTINGSSTATE_VIDEOMODECHANGED_MODE_ENUM mode) {
        if (this._ARCommandPowerupVideoSettingsStateVideoModeChangedListener != null) {
            this._ARCommandPowerupVideoSettingsStateVideoModeChangedListener.onPowerupVideoSettingsStateVideoModeChangedUpdate(mode);
        }
    }

    void onPowerupSoundsStateBuzzChangedUpdate(byte enabled) {
        if (this._ARCommandPowerupSoundsStateBuzzChangedListener != null) {
            this._ARCommandPowerupSoundsStateBuzzChangedListener.onPowerupSoundsStateBuzzChangedUpdate(enabled);
        }
    }

    void onRcMonitorChannelsUpdate(byte enable) {
        if (this._ARCommandRcMonitorChannelsListener != null) {
            this._ARCommandRcMonitorChannelsListener.onRcMonitorChannelsUpdate(enable);
        }
    }

    void onRcStartCalibrationUpdate(ARCOMMANDS_RC_CALIBRATION_TYPE_ENUM calibration_type, ARCOMMANDS_RC_CHANNEL_ACTION_ENUM channel_action, ARCOMMANDS_RC_CHANNEL_TYPE_ENUM channel_type) {
        if (this._ARCommandRcStartCalibrationListener != null) {
            this._ARCommandRcStartCalibrationListener.onRcStartCalibrationUpdate(calibration_type, channel_action, channel_type);
        }
    }

    void onRcInvertChannelUpdate(ARCOMMANDS_RC_CHANNEL_ACTION_ENUM action, byte flag) {
        if (this._ARCommandRcInvertChannelListener != null) {
            this._ARCommandRcInvertChannelListener.onRcInvertChannelUpdate(action, flag);
        }
    }

    void onRcAbortCalibrationUpdate() {
        if (this._ARCommandRcAbortCalibrationListener != null) {
            this._ARCommandRcAbortCalibrationListener.onRcAbortCalibrationUpdate();
        }
    }

    void onRcResetCalibrationUpdate() {
        if (this._ARCommandRcResetCalibrationListener != null) {
            this._ARCommandRcResetCalibrationListener.onRcResetCalibrationUpdate();
        }
    }

    void onRcEnableReceiverUpdate(byte enable) {
        if (this._ARCommandRcEnableReceiverListener != null) {
            this._ARCommandRcEnableReceiverListener.onRcEnableReceiverUpdate(enable);
        }
    }

    void onRcReceiverStateUpdate(ARCOMMANDS_RC_RECEIVER_STATE_ENUM state, String protocol, byte enabled) {
        if (this._ARCommandRcReceiverStateListener != null) {
            this._ARCommandRcReceiverStateListener.onRcReceiverStateUpdate(state, protocol, enabled);
        }
    }

    void onRcChannelsMonitorStateUpdate(byte state) {
        if (this._ARCommandRcChannelsMonitorStateListener != null) {
            this._ARCommandRcChannelsMonitorStateListener.onRcChannelsMonitorStateUpdate(state);
        }
    }

    void onRcChannelValueUpdate(byte id, ARCOMMANDS_RC_CHANNEL_ACTION_ENUM action, short value, byte list_flags) {
        if (this._ARCommandRcChannelValueListener != null) {
            this._ARCommandRcChannelValueListener.onRcChannelValueUpdate(id, action, value, list_flags);
        }
    }

    void onRcCalibrationStateUpdate(ARCOMMANDS_RC_CALIBRATION_TYPE_ENUM calibration_type, ARCOMMANDS_RC_CHANNEL_ACTION_ENUM channel_action, int required, int calibrated, byte neutral_calibrated) {
        if (this._ARCommandRcCalibrationStateListener != null) {
            this._ARCommandRcCalibrationStateListener.onRcCalibrationStateUpdate(calibration_type, channel_action, required, calibrated, neutral_calibrated);
        }
    }

    void onRcChannelActionItemUpdate(ARCOMMANDS_RC_CHANNEL_ACTION_ENUM action, int supported_type, ARCOMMANDS_RC_CHANNEL_TYPE_ENUM calibrated_type, byte inverted) {
        if (this._ARCommandRcChannelActionItemListener != null) {
            this._ARCommandRcChannelActionItemListener.onRcChannelActionItemUpdate(action, supported_type, calibrated_type, inverted);
        }
    }

    void onSkyControllerWifiRequestWifiListUpdate() {
        if (this._ARCommandSkyControllerWifiRequestWifiListListener != null) {
            this._ARCommandSkyControllerWifiRequestWifiListListener.onSkyControllerWifiRequestWifiListUpdate();
        }
    }

    void onSkyControllerWifiRequestCurrentWifiUpdate() {
        if (this._ARCommandSkyControllerWifiRequestCurrentWifiListener != null) {
            this._ARCommandSkyControllerWifiRequestCurrentWifiListener.onSkyControllerWifiRequestCurrentWifiUpdate();
        }
    }

    void onSkyControllerWifiConnectToWifiUpdate(String bssid, String ssid, String passphrase) {
        if (this._ARCommandSkyControllerWifiConnectToWifiListener != null) {
            this._ARCommandSkyControllerWifiConnectToWifiListener.onSkyControllerWifiConnectToWifiUpdate(bssid, ssid, passphrase);
        }
    }

    void onSkyControllerWifiForgetWifiUpdate(String ssid) {
        if (this._ARCommandSkyControllerWifiForgetWifiListener != null) {
            this._ARCommandSkyControllerWifiForgetWifiListener.onSkyControllerWifiForgetWifiUpdate(ssid);
        }
    }

    void onSkyControllerWifiWifiAuthChannelUpdate() {
        if (this._ARCommandSkyControllerWifiWifiAuthChannelListener != null) {
            this._ARCommandSkyControllerWifiWifiAuthChannelListener.onSkyControllerWifiWifiAuthChannelUpdate();
        }
    }

    void onSkyControllerDeviceRequestDeviceListUpdate() {
        if (this._ARCommandSkyControllerDeviceRequestDeviceListListener != null) {
            this._ARCommandSkyControllerDeviceRequestDeviceListListener.onSkyControllerDeviceRequestDeviceListUpdate();
        }
    }

    void onSkyControllerDeviceRequestCurrentDeviceUpdate() {
        if (this._ARCommandSkyControllerDeviceRequestCurrentDeviceListener != null) {
            this._ARCommandSkyControllerDeviceRequestCurrentDeviceListener.onSkyControllerDeviceRequestCurrentDeviceUpdate();
        }
    }

    void onSkyControllerDeviceConnectToDeviceUpdate(String deviceName) {
        if (this._ARCommandSkyControllerDeviceConnectToDeviceListener != null) {
            this._ARCommandSkyControllerDeviceConnectToDeviceListener.onSkyControllerDeviceConnectToDeviceUpdate(deviceName);
        }
    }

    void onSkyControllerSettingsAllSettingsUpdate() {
        if (this._ARCommandSkyControllerSettingsAllSettingsListener != null) {
            this._ARCommandSkyControllerSettingsAllSettingsListener.onSkyControllerSettingsAllSettingsUpdate();
        }
    }

    void onSkyControllerSettingsResetUpdate() {
        if (this._ARCommandSkyControllerSettingsResetListener != null) {
            this._ARCommandSkyControllerSettingsResetListener.onSkyControllerSettingsResetUpdate();
        }
    }

    void onSkyControllerCommonAllStatesUpdate() {
        if (this._ARCommandSkyControllerCommonAllStatesListener != null) {
            this._ARCommandSkyControllerCommonAllStatesListener.onSkyControllerCommonAllStatesUpdate();
        }
    }

    void onSkyControllerAccessPointSettingsAccessPointSSIDUpdate(String ssid) {
        if (this.f965x856b6eae != null) {
            this.f965x856b6eae.onSkyControllerAccessPointSettingsAccessPointSSIDUpdate(ssid);
        }
    }

    void onSkyControllerAccessPointSettingsAccessPointChannelUpdate(byte channel) {
        if (this.f964x4309c4f8 != null) {
            this.f964x4309c4f8.onSkyControllerAccessPointSettingsAccessPointChannelUpdate(channel);
        }
    }

    void onSkyControllerAccessPointSettingsWifiSelectionUpdate(C1463xd31e3426 type, C1462x3db0e20b band, byte channel) {
        if (this._ARCommandSkyControllerAccessPointSettingsWifiSelectionListener != null) {
            this._ARCommandSkyControllerAccessPointSettingsWifiSelectionListener.onSkyControllerAccessPointSettingsWifiSelectionUpdate(type, band, channel);
        }
    }

    void onSkyControllerAccessPointSettingsWifiSecurityUpdate(C1461xa1dbf559 security_type, String key) {
        if (this._ARCommandSkyControllerAccessPointSettingsWifiSecurityListener != null) {
            this._ARCommandSkyControllerAccessPointSettingsWifiSecurityListener.onSkyControllerAccessPointSettingsWifiSecurityUpdate(security_type, key);
        }
    }

    void onSkyControllerCameraResetOrientationUpdate() {
        if (this._ARCommandSkyControllerCameraResetOrientationListener != null) {
            this._ARCommandSkyControllerCameraResetOrientationListener.onSkyControllerCameraResetOrientationUpdate();
        }
    }

    void onSkyControllerGamepadInfosGetGamepadControlsUpdate() {
        if (this._ARCommandSkyControllerGamepadInfosGetGamepadControlsListener != null) {
            this._ARCommandSkyControllerGamepadInfosGetGamepadControlsListener.onSkyControllerGamepadInfosGetGamepadControlsUpdate();
        }
    }

    void onSkyControllerButtonMappingsGetCurrentButtonMappingsUpdate() {
        if (this.f981xc7285c27 != null) {
            this.f981xc7285c27.onSkyControllerButtonMappingsGetCurrentButtonMappingsUpdate();
        }
    }

    void onSkyControllerButtonMappingsGetAvailableButtonMappingsUpdate() {
        if (this.f980x18efa8b7 != null) {
            this.f980x18efa8b7.onSkyControllerButtonMappingsGetAvailableButtonMappingsUpdate();
        }
    }

    void onSkyControllerButtonMappingsSetButtonMappingUpdate(int key_id, String mapping_uid) {
        if (this._ARCommandSkyControllerButtonMappingsSetButtonMappingListener != null) {
            this._ARCommandSkyControllerButtonMappingsSetButtonMappingListener.onSkyControllerButtonMappingsSetButtonMappingUpdate(key_id, mapping_uid);
        }
    }

    void onSkyControllerButtonMappingsDefaultButtonMappingUpdate() {
        if (this.f979xa6f0f948 != null) {
            this.f979xa6f0f948.onSkyControllerButtonMappingsDefaultButtonMappingUpdate();
        }
    }

    void onSkyControllerAxisMappingsGetCurrentAxisMappingsUpdate() {
        if (this.f974xf5b22b45 != null) {
            this.f974xf5b22b45.onSkyControllerAxisMappingsGetCurrentAxisMappingsUpdate();
        }
    }

    void onSkyControllerAxisMappingsGetAvailableAxisMappingsUpdate() {
        if (this.f973xf674ac15 != null) {
            this.f973xf674ac15.onSkyControllerAxisMappingsGetAvailableAxisMappingsUpdate();
        }
    }

    void onSkyControllerAxisMappingsSetAxisMappingUpdate(int axis_id, String mapping_uid) {
        if (this._ARCommandSkyControllerAxisMappingsSetAxisMappingListener != null) {
            this._ARCommandSkyControllerAxisMappingsSetAxisMappingListener.onSkyControllerAxisMappingsSetAxisMappingUpdate(axis_id, mapping_uid);
        }
    }

    void onSkyControllerAxisMappingsDefaultAxisMappingUpdate() {
        if (this._ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener != null) {
            this._ARCommandSkyControllerAxisMappingsDefaultAxisMappingListener.onSkyControllerAxisMappingsDefaultAxisMappingUpdate();
        }
    }

    void onSkyControllerAxisFiltersGetCurrentAxisFiltersUpdate() {
        if (this._ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener != null) {
            this._ARCommandSkyControllerAxisFiltersGetCurrentAxisFiltersListener.onSkyControllerAxisFiltersGetCurrentAxisFiltersUpdate();
        }
    }

    void onSkyControllerAxisFiltersGetPresetAxisFiltersUpdate() {
        if (this._ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener != null) {
            this._ARCommandSkyControllerAxisFiltersGetPresetAxisFiltersListener.onSkyControllerAxisFiltersGetPresetAxisFiltersUpdate();
        }
    }

    void onSkyControllerAxisFiltersSetAxisFilterUpdate(int axis_id, String filter_uid_or_builder) {
        if (this._ARCommandSkyControllerAxisFiltersSetAxisFilterListener != null) {
            this._ARCommandSkyControllerAxisFiltersSetAxisFilterListener.onSkyControllerAxisFiltersSetAxisFilterUpdate(axis_id, filter_uid_or_builder);
        }
    }

    void onSkyControllerAxisFiltersDefaultAxisFiltersUpdate() {
        if (this._ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener != null) {
            this._ARCommandSkyControllerAxisFiltersDefaultAxisFiltersListener.onSkyControllerAxisFiltersDefaultAxisFiltersUpdate();
        }
    }

    void onSkyControllerCoPilotingSetPilotingSourceUpdate(C1466x668379ec source) {
        if (this._ARCommandSkyControllerCoPilotingSetPilotingSourceListener != null) {
            this._ARCommandSkyControllerCoPilotingSetPilotingSourceListener.onSkyControllerCoPilotingSetPilotingSourceUpdate(source);
        }
    }

    /* renamed from: onSkyControllerCalibrationEnableMagnetoCalibrationQualityUpdatesUpdate */
    void m58x8f347608(byte enable) {
        if (this.f986xf153f3af != null) {
            this.f986xf153f3af.m34x8f347608(enable);
        }
    }

    void onSkyControllerFactoryResetUpdate() {
        if (this._ARCommandSkyControllerFactoryResetListener != null) {
            this._ARCommandSkyControllerFactoryResetListener.onSkyControllerFactoryResetUpdate();
        }
    }

    void onSkyControllerWifiStateWifiListUpdate(String bssid, String ssid, byte secured, byte saved, int rssi, int frequency) {
        if (this._ARCommandSkyControllerWifiStateWifiListListener != null) {
            this._ARCommandSkyControllerWifiStateWifiListListener.onSkyControllerWifiStateWifiListUpdate(bssid, ssid, secured, saved, rssi, frequency);
        }
    }

    void onSkyControllerWifiStateConnexionChangedUpdate(String ssid, ARCOMMANDS_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_STATUS_ENUM status) {
        if (this._ARCommandSkyControllerWifiStateConnexionChangedListener != null) {
            this._ARCommandSkyControllerWifiStateConnexionChangedListener.onSkyControllerWifiStateConnexionChangedUpdate(ssid, status);
        }
    }

    void onSkyControllerWifiStateWifiAuthChannelListChangedUpdate(C1472xd71dd87 band, byte channel, byte in_or_out) {
        if (this.f994x4ca7c7e != null) {
            this.f994x4ca7c7e.onSkyControllerWifiStateWifiAuthChannelListChangedUpdate(band, channel, in_or_out);
        }
    }

    void onSkyControllerWifiStateAllWifiAuthChannelChangedUpdate() {
        if (this.f993x76fcda49 != null) {
            this.f993x76fcda49.onSkyControllerWifiStateAllWifiAuthChannelChangedUpdate();
        }
    }

    void onSkyControllerWifiStateWifiSignalChangedUpdate(byte level) {
        if (this._ARCommandSkyControllerWifiStateWifiSignalChangedListener != null) {
            this._ARCommandSkyControllerWifiStateWifiSignalChangedListener.onSkyControllerWifiStateWifiSignalChangedUpdate(level);
        }
    }

    void onSkyControllerWifiStateWifiAuthChannelListChangedV2Update(C1471xd692b263 band, byte channel, byte in_or_out, byte list_flags) {
        if (this.f995xab4de89a != null) {
            this.f995xab4de89a.onSkyControllerWifiStateWifiAuthChannelListChangedV2Update(band, channel, in_or_out, list_flags);
        }
    }

    void onSkyControllerWifiStateWifiCountryChangedUpdate(String code) {
        if (this._ARCommandSkyControllerWifiStateWifiCountryChangedListener != null) {
            this._ARCommandSkyControllerWifiStateWifiCountryChangedListener.onSkyControllerWifiStateWifiCountryChangedUpdate(code);
        }
    }

    void onSkyControllerWifiStateWifiEnvironmentChangedUpdate(C1473x8d24462b environment) {
        if (this._ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener != null) {
            this._ARCommandSkyControllerWifiStateWifiEnvironmentChangedListener.onSkyControllerWifiStateWifiEnvironmentChangedUpdate(environment);
        }
    }

    void onSkyControllerDeviceStateDeviceListUpdate(String name) {
        if (this._ARCommandSkyControllerDeviceStateDeviceListListener != null) {
            this._ARCommandSkyControllerDeviceStateDeviceListListener.onSkyControllerDeviceStateDeviceListUpdate(name);
        }
    }

    void onSkyControllerDeviceStateConnexionChangedUpdate(C1467x97a49886 status, String deviceName, short deviceProductID) {
        if (this._ARCommandSkyControllerDeviceStateConnexionChangedListener != null) {
            this._ARCommandSkyControllerDeviceStateConnexionChangedListener.onSkyControllerDeviceStateConnexionChangedUpdate(status, deviceName, deviceProductID);
        }
    }

    void onSkyControllerSettingsStateAllSettingsChangedUpdate() {
        if (this._ARCommandSkyControllerSettingsStateAllSettingsChangedListener != null) {
            this._ARCommandSkyControllerSettingsStateAllSettingsChangedListener.onSkyControllerSettingsStateAllSettingsChangedUpdate();
        }
    }

    void onSkyControllerSettingsStateResetChangedUpdate() {
        if (this._ARCommandSkyControllerSettingsStateResetChangedListener != null) {
            this._ARCommandSkyControllerSettingsStateResetChangedListener.onSkyControllerSettingsStateResetChangedUpdate();
        }
    }

    void onSkyControllerSettingsStateProductSerialChangedUpdate(String serialNumber) {
        if (this._ARCommandSkyControllerSettingsStateProductSerialChangedListener != null) {
            this._ARCommandSkyControllerSettingsStateProductSerialChangedListener.onSkyControllerSettingsStateProductSerialChangedUpdate(serialNumber);
        }
    }

    void onSkyControllerSettingsStateProductVariantChangedUpdate(C1469xef2e29b5 variant) {
        if (this.f990xe3e2fd26 != null) {
            this.f990xe3e2fd26.onSkyControllerSettingsStateProductVariantChangedUpdate(variant);
        }
    }

    void onSkyControllerSettingsStateProductVersionChangedUpdate(String software, String hardware) {
        if (this.f991x4abc6073 != null) {
            this.f991x4abc6073.onSkyControllerSettingsStateProductVersionChangedUpdate(software, hardware);
        }
    }

    void onSkyControllerCommonStateAllStatesChangedUpdate() {
        if (this._ARCommandSkyControllerCommonStateAllStatesChangedListener != null) {
            this._ARCommandSkyControllerCommonStateAllStatesChangedListener.onSkyControllerCommonStateAllStatesChangedUpdate();
        }
    }

    void onSkyControllerSkyControllerStateBatteryChangedUpdate(byte percent) {
        if (this._ARCommandSkyControllerSkyControllerStateBatteryChangedListener != null) {
            this._ARCommandSkyControllerSkyControllerStateBatteryChangedListener.onSkyControllerSkyControllerStateBatteryChangedUpdate(percent);
        }
    }

    void onSkyControllerSkyControllerStateGpsFixChangedUpdate(byte fixed) {
        if (this._ARCommandSkyControllerSkyControllerStateGpsFixChangedListener != null) {
            this._ARCommandSkyControllerSkyControllerStateGpsFixChangedListener.onSkyControllerSkyControllerStateGpsFixChangedUpdate(fixed);
        }
    }

    void onSkyControllerSkyControllerStateGpsPositionChangedUpdate(double latitude, double longitude, double altitude, float heading) {
        if (this.f992xb12d1d4b != null) {
            r0.f992xb12d1d4b.onSkyControllerSkyControllerStateGpsPositionChangedUpdate(latitude, longitude, altitude, heading);
        }
    }

    void onSkyControllerSkyControllerStateBatteryStateUpdate(C1470xefdece67 state) {
        if (this._ARCommandSkyControllerSkyControllerStateBatteryStateListener != null) {
            this._ARCommandSkyControllerSkyControllerStateBatteryStateListener.onSkyControllerSkyControllerStateBatteryStateUpdate(state);
        }
    }

    void onSkyControllerSkyControllerStateAttitudeChangedUpdate(float q0, float q1, float q2, float q3) {
        if (this._ARCommandSkyControllerSkyControllerStateAttitudeChangedListener != null) {
            this._ARCommandSkyControllerSkyControllerStateAttitudeChangedListener.onSkyControllerSkyControllerStateAttitudeChangedUpdate(q0, q1, q2, q3);
        }
    }

    /* renamed from: onSkyControllerAccessPointSettingsStateAccessPointSSIDChangedUpdate */
    void m53xe5cf516(String ssid) {
        if (this.f967x7b34adc5 != null) {
            this.f967x7b34adc5.m29xe5cf516(ssid);
        }
    }

    /* renamed from: onSkyControllerAccessPointSettingsStateAccessPointChannelChangedUpdate */
    void m52x1cd767c6(byte channel) {
        if (this.f966xa2016ded != null) {
            this.f966xa2016ded.m28x1cd767c6(channel);
        }
    }

    /* renamed from: onSkyControllerAccessPointSettingsStateWifiSelectionChangedUpdate */
    void m54x894ea526(C1460xf32549b9 type, C1459x5db7f79e band, byte channel) {
        if (this.f969xec95cad5 != null) {
            this.f969xec95cad5.m30x894ea526(type, band, channel);
        }
    }

    void onSkyControllerAccessPointSettingsStateWifiSecurityChangedUpdate(C1458x62c5ec1c security_type, String key) {
        if (this.f968x3134868f != null) {
            this.f968x3134868f.onSkyControllerAccessPointSettingsStateWifiSecurityChangedUpdate(security_type, key);
        }
    }

    void onSkyControllerGamepadInfosStateGamepadControlUpdate(C1468x849d66fd type, int id, String name) {
        if (this._ARCommandSkyControllerGamepadInfosStateGamepadControlListener != null) {
            this._ARCommandSkyControllerGamepadInfosStateGamepadControlListener.onSkyControllerGamepadInfosStateGamepadControlUpdate(type, id, name);
        }
    }

    void onSkyControllerGamepadInfosStateAllGamepadControlsSentUpdate() {
        if (this.f989x4de2392d != null) {
            this.f989x4de2392d.onSkyControllerGamepadInfosStateAllGamepadControlsSentUpdate();
        }
    }

    void onSkyControllerButtonMappingsStateCurrentButtonMappingsUpdate(int key_id, String mapping_uid) {
        if (this.f985x20a51a8c != null) {
            this.f985x20a51a8c.onSkyControllerButtonMappingsStateCurrentButtonMappingsUpdate(key_id, mapping_uid);
        }
    }

    /* renamed from: onSkyControllerButtonMappingsStateAllCurrentButtonMappingsSentUpdate */
    void m57xfa4d61ac() {
        if (this.f983xea2bb553 != null) {
            this.f983xea2bb553.m33xfa4d61ac();
        }
    }

    void onSkyControllerButtonMappingsStateAvailableButtonMappingsUpdate(String mapping_uid, String name) {
        if (this.f984x63661dc != null) {
            this.f984x63661dc.onSkyControllerButtonMappingsStateAvailableButtonMappingsUpdate(mapping_uid, name);
        }
    }

    /* renamed from: onSkyControllerButtonMappingsStateAllAvailableButtonsMappingsSentUpdate */
    void m56x176d2c03() {
        if (this.f982x15e53b72 != null) {
            this.f982x15e53b72.m32x176d2c03();
        }
    }

    void onSkyControllerAxisMappingsStateCurrentAxisMappingsUpdate(int axis_id, String mapping_uid) {
        if (this.f978x9f168f2a != null) {
            this.f978x9f168f2a.onSkyControllerAxisMappingsStateCurrentAxisMappingsUpdate(axis_id, mapping_uid);
        }
    }

    void onSkyControllerAxisMappingsStateAllCurrentAxisMappingsSentUpdate() {
        if (this.f976xb8292b73 != null) {
            this.f976xb8292b73.onSkyControllerAxisMappingsStateAllCurrentAxisMappingsSentUpdate();
        }
    }

    void onSkyControllerAxisMappingsStateAvailableAxisMappingsUpdate(String mapping_uid, String name) {
        if (this.f977xd84faaba != null) {
            this.f977xd84faaba.onSkyControllerAxisMappingsStateAvailableAxisMappingsUpdate(mapping_uid, name);
        }
    }

    /* renamed from: onSkyControllerAxisMappingsStateAllAvailableAxisMappingsSentUpdate */
    void m55x89aff81c() {
        if (this.f975xc28d5ec3 != null) {
            this.f975xc28d5ec3.m31x89aff81c();
        }
    }

    void onSkyControllerAxisFiltersStateCurrentAxisFiltersUpdate(int axis_id, String filter_uid_or_builder) {
        if (this.f972x86097b4e != null) {
            this.f972x86097b4e.onSkyControllerAxisFiltersStateCurrentAxisFiltersUpdate(axis_id, filter_uid_or_builder);
        }
    }

    void onSkyControllerAxisFiltersStateAllCurrentFiltersSentUpdate() {
        if (this.f970xfa1b2016 != null) {
            this.f970xfa1b2016.onSkyControllerAxisFiltersStateAllCurrentFiltersSentUpdate();
        }
    }

    void onSkyControllerAxisFiltersStatePresetAxisFiltersUpdate(String filter_uid, String name) {
        if (this._ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener != null) {
            this._ARCommandSkyControllerAxisFiltersStatePresetAxisFiltersListener.onSkyControllerAxisFiltersStatePresetAxisFiltersUpdate(filter_uid, name);
        }
    }

    void onSkyControllerAxisFiltersStateAllPresetFiltersSentUpdate() {
        if (this.f971xe9048760 != null) {
            this.f971xe9048760.onSkyControllerAxisFiltersStateAllPresetFiltersSentUpdate();
        }
    }

    void onSkyControllerCoPilotingStatePilotingSourceUpdate(C1465xc0fa5d37 source) {
        if (this._ARCommandSkyControllerCoPilotingStatePilotingSourceListener != null) {
            this._ARCommandSkyControllerCoPilotingStatePilotingSourceListener.onSkyControllerCoPilotingStatePilotingSourceUpdate(source);
        }
    }

    void onSkyControllerCalibrationStateMagnetoCalibrationStateUpdate(C1464xb8d78b0b status, byte X_Quality, byte Y_Quality, byte Z_Quality) {
        if (this.f988x50573cd7 != null) {
            this.f988x50573cd7.onSkyControllerCalibrationStateMagnetoCalibrationStateUpdate(status, X_Quality, Y_Quality, Z_Quality);
        }
    }

    /* renamed from: onSkyControllerCalibrationStateMagnetoCalibrationQualityUpdatesStateUpdate */
    void m59xbbb917e5(byte enabled) {
        if (this.f987x9be0744c != null) {
            this.f987x9be0744c.m35xbbb917e5(enabled);
        }
    }

    void onSkyControllerButtonEventsSettingsUpdate() {
        if (this._ARCommandSkyControllerButtonEventsSettingsListener != null) {
            this._ARCommandSkyControllerButtonEventsSettingsListener.onSkyControllerButtonEventsSettingsUpdate();
        }
    }

    void onSkyControllerCommonEventStateShutdownUpdate(ARCOMMANDS_SKYCONTROLLER_COMMONEVENTSTATE_SHUTDOWN_REASON_ENUM reason) {
        if (this._ARCommandSkyControllerCommonEventStateShutdownListener != null) {
            this._ARCommandSkyControllerCommonEventStateShutdownListener.onSkyControllerCommonEventStateShutdownUpdate(reason);
        }
    }

    void onWifiScanUpdate(byte band) {
        if (this._ARCommandWifiScanListener != null) {
            this._ARCommandWifiScanListener.onWifiScanUpdate(band);
        }
    }

    void onWifiUpdateAuthorizedChannelsUpdate() {
        if (this._ARCommandWifiUpdateAuthorizedChannelsListener != null) {
            this._ARCommandWifiUpdateAuthorizedChannelsListener.onWifiUpdateAuthorizedChannelsUpdate();
        }
    }

    void onWifiSetApChannelUpdate(ARCOMMANDS_WIFI_SELECTION_TYPE_ENUM type, ARCOMMANDS_WIFI_BAND_ENUM band, byte channel) {
        if (this._ARCommandWifiSetApChannelListener != null) {
            this._ARCommandWifiSetApChannelListener.onWifiSetApChannelUpdate(type, band, channel);
        }
    }

    void onWifiSetSecurityUpdate(ARCOMMANDS_WIFI_SECURITY_TYPE_ENUM type, String key, ARCOMMANDS_WIFI_SECURITY_KEY_TYPE_ENUM key_type) {
        if (this._ARCommandWifiSetSecurityListener != null) {
            this._ARCommandWifiSetSecurityListener.onWifiSetSecurityUpdate(type, key, key_type);
        }
    }

    void onWifiSetCountryUpdate(ARCOMMANDS_WIFI_COUNTRY_SELECTION_ENUM selection_mode, String code) {
        if (this._ARCommandWifiSetCountryListener != null) {
            this._ARCommandWifiSetCountryListener.onWifiSetCountryUpdate(selection_mode, code);
        }
    }

    void onWifiSetEnvironmentUpdate(ARCOMMANDS_WIFI_ENVIRONMENT_ENUM environment) {
        if (this._ARCommandWifiSetEnvironmentListener != null) {
            this._ARCommandWifiSetEnvironmentListener.onWifiSetEnvironmentUpdate(environment);
        }
    }

    void onWifiScannedItemUpdate(String ssid, short rssi, ARCOMMANDS_WIFI_BAND_ENUM band, byte channel, byte list_flags) {
        if (this._ARCommandWifiScannedItemListener != null) {
            this._ARCommandWifiScannedItemListener.onWifiScannedItemUpdate(ssid, rssi, band, channel, list_flags);
        }
    }

    void onWifiAuthorizedChannelUpdate(ARCOMMANDS_WIFI_BAND_ENUM band, byte channel, byte environment, byte list_flags) {
        if (this._ARCommandWifiAuthorizedChannelListener != null) {
            this._ARCommandWifiAuthorizedChannelListener.onWifiAuthorizedChannelUpdate(band, channel, environment, list_flags);
        }
    }

    void onWifiApChannelChangedUpdate(ARCOMMANDS_WIFI_SELECTION_TYPE_ENUM type, ARCOMMANDS_WIFI_BAND_ENUM band, byte channel) {
        if (this._ARCommandWifiApChannelChangedListener != null) {
            this._ARCommandWifiApChannelChangedListener.onWifiApChannelChangedUpdate(type, band, channel);
        }
    }

    void onWifiSecurityChangedUpdate(String key, ARCOMMANDS_WIFI_SECURITY_TYPE_ENUM key_type) {
        if (this._ARCommandWifiSecurityChangedListener != null) {
            this._ARCommandWifiSecurityChangedListener.onWifiSecurityChangedUpdate(key, key_type);
        }
    }

    void onWifiCountryChangedUpdate(ARCOMMANDS_WIFI_COUNTRY_SELECTION_ENUM selection_mode, String code) {
        if (this._ARCommandWifiCountryChangedListener != null) {
            this._ARCommandWifiCountryChangedListener.onWifiCountryChangedUpdate(selection_mode, code);
        }
    }

    void onWifiEnvironmentChangedUpdate(ARCOMMANDS_WIFI_ENVIRONMENT_ENUM environment) {
        if (this._ARCommandWifiEnvironmentChangedListener != null) {
            this._ARCommandWifiEnvironmentChangedListener.onWifiEnvironmentChangedUpdate(environment);
        }
    }

    void onWifiRssiChangedUpdate(short rssi) {
        if (this._ARCommandWifiRssiChangedListener != null) {
            this._ARCommandWifiRssiChangedListener.onWifiRssiChangedUpdate(rssi);
        }
    }

    void onWifiSupportedCountriesUpdate(String countries) {
        if (this._ARCommandWifiSupportedCountriesListener != null) {
            this._ARCommandWifiSupportedCountriesListener.onWifiSupportedCountriesUpdate(countries);
        }
    }
}
